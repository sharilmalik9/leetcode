{"id":969023079,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1686503937,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/969023079/","is_pending":"Not Pending","title":"Most Beautiful Item for Each Query","memory":"78.2 MB","code":"class Solution {\n    public int[] maximumBeauty(int[][] items, int[] queries) {\n        Arrays.sort(items,(a,b)->a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]);\n        int[] maxprice=new int[items.length];\n        int max=items[0][1];\n        maxprice[0]=max;\n        for(int i=1;i<items.length;i++){\n            maxprice[i]=Math.max(max,items[i][1]);\n            max=Math.max(max,maxprice[i]);\n        }\n\n        int[] ans=new int[queries.length];\n        for(int i=0;i<queries.length;i++){\n            int idx=help(queries[i],items);\n            if(idx==-1){\n                ans[i]=0;\n                continue;\n            }\n            ans[i]=maxprice[idx];\n        }\n        return ans;\n    }\n    public int help(int item,int[][] items){\n        int start=0;\n        int end=items.length-1;\n        int ans=-1;\n        while(start<=end){\n            int mid=start+(end-start)/2;\n            if(items[mid][0]<=item){\n                ans=mid;\n                start=mid+1;\n            }\n            else{\n                end=mid-1;\n            }\n        }\n\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"most-beautiful-item-for-each-query","has_notes":false}