{"id":818724668,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1665330806,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/818724668/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"108.2 MB","code":"class Solution {\npublic boolean checkSubarraySum(int[] arr, int k) {\n\n    int sum = 0;\n    \n    HashMap<Integer,Integer> map = new HashMap<>();\n    map.put(0,-1);\n\n    for(int i=0;i<arr.length;i++)\n    {\n        sum += arr[i];\n        int rem = sum%k;\n        \n        if(map.containsKey(rem))\n        {\n            if(i-map.get(rem)>=2)\n            {\n                return true;\n            }\n            else\n            {\n              //  map.put(rem,map.get(rem));\n                continue;\n            }\n        }\n        \n        map.put(rem,i);\n    }\n    \n    return false;\n}\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false}