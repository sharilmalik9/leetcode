{"id":818712531,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1665329495,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/818712531/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\n    public boolean checkSubarraySum(int[] nums, int k) {\n    HashSet<Integer> hs= new HashSet<>();\n        int sum=0;\n        if(k==1 && nums.length>0){\n            return true;\n        }\n        int prev=nums[0]%k;\n        for(int i:nums){\n            prev=sum;\n            sum+=i;\n            \n            if(sum==1 && k!=1){\n                continue;\n            }\n            if(sum%k==0 && sum!=0){\n                return true;\n            }\n            else if(hs.contains(sum%k)&& sum%k!=prev){\n                return true;\n            }\n            else{\n                hs.add(sum%k);\n            }\n        }\n        \n        return false;\n    }\n}","compare_result":"1111111110011111111101100011101101011111111111111111101111111111111111111100111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false}