{"id":715085150,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1654447159,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/715085150/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int count=0;\n    public int pathSum(TreeNode root, int targetSum) {\n        if(root==null || (root.left==null && root.right==null)){\n            if(targetSum==0){\n                count++;\n            }\n            \n            return 0;\n        }\n        \n        if(targetSum<=0){\n            if(targetSum==0){\n                \n               // System.out.println(root.val);\n                count++;\n            }\n            return 0;\n        }\n       \n        if(root.val>targetSum){\n            pathSum(root.left,targetSum);\n            pathSum(root.right,targetSum);\n        }\n        else{\n            pathSum(root.left,targetSum-root.val);\n            pathSum(root.right,targetSum-root.val);\n        }\n        return count+1;\n    \n}\n        \n    }","compare_result":"1011011011000000001000101011100000101001001000001110010101000010001011100101000010001001000011100001101000000101100000000001000","title_slug":"path-sum-iii","has_notes":false}