{"id":899362945,"lang":"java","lang_name":"Java","time":"4 months, 1 week","timestamp":1676579069,"status":10,"status_display":"Accepted","runtime":"130 ms","url":"/submissions/detail/899362945/","is_pending":"Not Pending","title":"Path Sum III","memory":"41.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int ans=0;\n    HashSet<TreeNode> hs= new HashSet<>();\n    public int pathSum(TreeNode root, int targetSum){\n        help(root,targetSum,0L);\n        return ans;\n\n    }\n    public void help(TreeNode root,int targetSum,long curr){\n        if(root==null){\n            return ;\n        }\n        curr+=root.val;\n        if(curr==targetSum){\n            ans++;\n        }\n        help(root.left,targetSum,curr) ;\n        help(root.right,targetSum,curr);\n        if(!hs.contains(root.right)){\n               help(root.right,targetSum,0);\n        }\n        hs.add(root.right);\n        if(!hs.contains(root.left)){\n            help(root.left,targetSum,0);\n        }\n        hs.add(root.left);\n       \n       \n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false}