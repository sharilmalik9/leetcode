{"id":715096000,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1654448244,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/715096000/","is_pending":"Not Pending","title":"Path Sum III","memory":"44.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int count=0;\n    public int pathSum(TreeNode root, int targetSum) {\n        if(root==null){\n            return 0;\n        }\n        FindSum(root, targetSum,0);\n        pathSum(root.left,targetSum);\n        pathSum(root.right,targetSum);\n        return count;\n        \n        \n       \n}\n    public void FindSum(TreeNode root, int sum,int currsum){\n        if(root==null){\n            return;\n        }\n        currsum+=root.val;\n        if(currsum==sum){\n            count++;\n        }\n        FindSum(root.left,sum,currsum);\n        FindSum(root.right,sum,currsum);\n    }\n        \n    }","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false}