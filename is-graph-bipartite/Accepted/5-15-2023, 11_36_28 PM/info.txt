{"id":950954844,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1684173988,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/950954844/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"43.4 MB","code":"class Solution {\n    public boolean isBipartite(int[][] graph) {\n        int[] color=new int[graph.length];\n        Arrays.fill(color,-1);\n        for(int i=0;i<graph.length;i++){\n            if(color[i]==-1){\n                if(!call(graph,color,0,i)){\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public boolean call(int[][] graph,int[] color,int col,int node){\n            color[node]=col;\n            for(int i: graph[node]){\n                if(color[i]==-1){\n                    if(!call(graph,color,1-col,i)){\n                        return false;\n                    }\n                }\n                else if(color[i]==col){\n                    return false;\n                }\n\n            }\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite","has_notes":false}