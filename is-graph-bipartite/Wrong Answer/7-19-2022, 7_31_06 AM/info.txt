{"id":750698566,"lang":"java","lang_name":"Java","time":"11 months, 2 weeks","timestamp":1658196066,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/750698566/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"N/A","code":"class Solution {\n    public boolean isBipartite(int[][] graph) {\n        int[] p= new int[graph.length];\n        for(int i=0;i<p.length;i++){\n            p[i]=i;\n}\n        for(int i=0;i<graph.length;i++){\n            // if(graph[i].length==0){\n            //    break;\n            // }\n            // int parent=graph[i][0];\n            \n            for(int j=0;j<graph[i].length;j++){\n                int parent=graph[i][0];\n                union(parent,graph[i][j],p);\n                // union(parent,i,p);\n                \n            }\n            \n            \n            \n}\n        int count=0;\n        int[] freq=new int[p.length];\n        for(int i=0;i<p.length;i++){\n            freq[p[i]]+=1;\n            \n            \n        }\n         System.out.println(Arrays.toString(p));\n        System.out.println(Arrays.toString(freq));\n        for(int i=0;i<freq.length;i++){\n            if(freq[i]>1){\n                count++;\n            }\n            if(freq[i]==1){\n                if(graph[i].length>0){\n                    count++;\n                }\n            }\n}\n        if(count==2){\n            return true;\n        }\n        return false;\n        \n        \n        \n        \n        \n        \n        \n    }\n    \n    \n     \n    public int parent(int[] p,int x){\n        if(p[x]==x){\n            return x;\n        }\n        return parent(p,p[x]);\n    }\n    public void union(int a,int b,int[] p){\n        int x=parent(p,a);\n        int y= parent(p,b);\n        if(x==y){\n            return;\n        }\n        for(int i=0;i<p.length;i++){\n            if(p[i]==x){\n                p[i]=y;\n            }\n}\n        p[x]=y;\n\n\n\n    }\n\n}","compare_result":"111111111110111111111010111111111111111111111111111111111100010110111111011111111","title_slug":"is-graph-bipartite","has_notes":false}