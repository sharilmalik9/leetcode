{"id":827850570,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666434038,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/827850570/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubPath(ListNode head, TreeNode root) {\n        \n        \n        return help(head,root);\n        \n        \n        \n        \n        \n        \n        \n    }\n     public boolean help(ListNode head,TreeNode root){\n         if(head==null){\n             return true;\n         }\n         if(root==null && head==null){\n             return true;\n         }\n         if(root==null){\n             return false;\n         }\n         if(head.val==root.val){\n             boolean right=help(head.next,root.right);\n             boolean left=help(head.next,root.left);\n             return right|| left;\n         }\n         else{\n             return help(head,root.right) || help(head,root.left);\n         }\n     }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111101101100010","title_slug":"linked-list-in-binary-tree","has_notes":false}