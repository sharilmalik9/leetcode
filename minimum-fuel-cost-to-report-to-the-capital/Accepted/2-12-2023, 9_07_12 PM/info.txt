{"id":896617554,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1676216232,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/896617554/","is_pending":"Not Pending","title":"Minimum Fuel Cost to Report to the Capital","memory":"108.9 MB","code":"class Solution {\n    long fuel=0;\n    public long minimumFuelCost(int[][] roads, int seats){\n        List<List<Integer>> tree=new ArrayList<>();\n        int n=roads.length;\n        for(int i=0;i<n+1;i++){\n            tree.add(new ArrayList<>());\n        }\n        for(int[] i:roads){\n            tree.get(i[0]).add(i[1]);\n            tree.get(i[1]).add(i[0]);\n        }\n        help(tree,seats,0,new int[n+1]);\n        return fuel;\n\n        \n    }\n     public long help(List<List<Integer>> tree,int seats,int curr,int[] vis){\n         double c=0;\n         if(curr!=0){\n             c=1;\n\n         }\n         vis[curr]=1;\n         for(int i: tree.get(curr)){\n             if(i!=curr && vis[i]==0){\n                 c+=help(tree,seats,i,vis);\n             }\n         }\n         if(curr!=0){\n             fuel+=(long)Math.ceil(c/seats);\n         }\n         return (long)c;\n     }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-fuel-cost-to-report-to-the-capital","has_notes":false}