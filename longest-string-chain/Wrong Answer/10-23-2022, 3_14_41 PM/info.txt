{"id":828532230,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666518281,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/828532230/","is_pending":"Not Pending","title":"Longest String Chain","memory":"N/A","code":"class Solution {\n    public int longestStrChain(String[] words){\n        Arrays.sort(words,(a,b)->a.length()-b.length());\n        int[] dp=new int[words.length];\n        Arrays.fill(dp,1);\n        int ans=1;\n        for(int i=0;i<words.length;i++){\n            for(int j=0;j<i;j++){\n                if(comp(words[j],words[i]) && dp[j]+1>dp[i]){\n                    dp[i]=dp[j]+1;\n                }\n            }\n            ans=Math.max(ans,dp[i]);\n            \n        }\n         \n        return ans;\n    }\n    public boolean comp(String s,String t){\n        if(s.length()+1!=t.length()){\n            return false;\n        }\n        int idx1=0;\n        int idx2=0;\n        while(idx1<s.length()){\n            if(s.charAt(idx1)==t.charAt(idx2)){\n                idx1++;\n                idx2++;\n            }\n            else{\n                idx2++;\n            }\n            \n        }\n        if(idx2==t.length()){\n            return true;\n        }\n        return false;\n    }\n}","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-string-chain","has_notes":false}