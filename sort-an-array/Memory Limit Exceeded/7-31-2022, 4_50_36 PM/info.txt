{"id":761434165,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1659266436,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/761434165/","is_pending":"Not Pending","title":"Sort an Array","memory":"N/A","code":"class Solution {\n    public int[] sortArray(int[] nums) {\n        mergesort(nums,0,nums.length-1);\n        return nums;\n        \n        \n    }\n    public void mergesort(int[] nums,int s, int e){\n        if(s<e){\n            int mid= (s+e)/2;\n            mergesort(nums,s,mid);\n            mergesort(nums,mid+1,e);\n            merge(nums,s,mid,e);\n        }\n       \n    }\n    \n    public void merge(int[] nums,int s,int mid,int e){\n        int[] b= new int[nums.length];\n        int i=s;\n        int j= mid+1;\n        int k=s;\n        while(i<=mid && j<=e){\n            if(nums[i]<nums[j]){\n                b[k]=nums[i];\n              \n                i++;\n            }\n            else{\n                b[k]=nums[j];\n               j++;\n            }\n            k++;\n}\n        if(i>mid){\n            while(j<=e){\n                b[k]=nums[j];\n                j++;\n                k++;\n            }\n        }\n        else {\n            while(i<=mid){\n                b[k]=nums[i];\n                k++;\n                i++;\n}\n}\n        for(int p=s;p<=e;p++){\n            nums[p]=b[p];\n        }\n    }\n}","compare_result":"1111111111100","title_slug":"sort-an-array","has_notes":false}