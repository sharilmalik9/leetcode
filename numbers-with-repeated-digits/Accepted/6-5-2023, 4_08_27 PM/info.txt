{"id":964304249,"lang":"java","lang_name":"Java","time":"3 weeks, 2 days","timestamp":1685961507,"status":10,"status_display":"Accepted","runtime":"1752 ms","url":"/submissions/detail/964304249/","is_pending":"Not Pending","title":"Numbers With Repeated Digits","memory":"39.8 MB","code":"class Solution {\n    String s;\n    boolean[] vis;\n    Integer[][][] dp;\n    public int numDupDigitsAtMostN(int n) {\n        s=Integer.toString(n);\n        vis=new boolean[10];\n        dp=new Integer[2][s.length()+1][2];\n        return n-rec(true,0,false)+1;\n    }\n    public int rec(boolean bounded,int idx,boolean hehe){\n        if(idx>=s.length()){\n            return 1;\n        }\n        int ans=0;\n        int he=9;\n        // if(dp[][][]!=null && vis[idx]){\n            \n        // }\n        if(bounded){\n            he=s.charAt(idx)-'0';\n        }\n        for(int i=0;i<=he;i++){\n            if(i==0 && !hehe){\n                ans+=rec(bounded && s.charAt(i)-'0'==i,idx+1,hehe);\n            }\n            else if(!vis[i]){ \n            vis[i]=true;\n            ans+=rec(bounded && i==s.charAt(idx)-'0',idx+1,true);\n            vis[i]=false;\n            }\n            \n        }\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"numbers-with-repeated-digits","has_notes":false}