{"id":835028820,"lang":"java","lang_name":"Java","time":"7 months, 4 weeks","timestamp":1667349971,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/835028820/","is_pending":"Not Pending","title":"Minimum Genetic Mutation","memory":"42.8 MB","code":"class Solution {\n    public int minMutation(String start, String end, String[] bank){\n        HashSet<String> st= new HashSet<>();\n        for(String i :bank){\n            st.add(i);\n            \n        }\n        if(!st.contains(end)){\n            return -1;\n        }\n        int level=0;\n        Queue<String> que=new LinkedList<>();\n        que.add(start);\n        while(que.size()!=0){\n            int size=que.size();\n            while(size!=0){\n                String curr=que.poll();\n               \n                for(int j=0;j<curr.length();j++){\n                 char[] c = curr.toCharArray();\n                    for(char x = 'A'; x <= 'T'; x++){\n                        if(x!='A' && x!='C' && x!='G' && x!='T'){\n                            continue;\n                          }\n                        c[j] = x;\n                        String temp = new String(c);\n                         System.out.println(temp);\n                        if(temp.equals(end)){\n                            return level+1;\n                        }\n                        if(st.contains(temp)){\n                            \n                            que.add(temp);\n                            st.remove(temp);\n                          }\n                    }\n            }\n                size--;\n            }\n                level++;\n        }\n            return -1;\n    }\n}","compare_result":"111111111111111","title_slug":"minimum-genetic-mutation","has_notes":false}