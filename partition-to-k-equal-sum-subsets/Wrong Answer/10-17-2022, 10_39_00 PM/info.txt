{"id":824578524,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1666026540,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/824578524/","is_pending":"Not Pending","title":"Partition to K Equal Sum Subsets","memory":"N/A","code":"class Solution {\n    public boolean canPartitionKSubsets(int[] nums, int k) {\n       int sum=0;\n        for(int i:nums){\n            sum+=i;\n}\n        if(sum %k!=0){\n            return false;\n        }\n       k=sum/k;\n       boolean[][] dp= new boolean[nums.length][k+1];\n        if(nums[0]<k){\n             dp[0][nums[0]]=true;\n        }\n     //  dp[0][nums[0]]=true;\n       for(int i=0;i<nums.length;i++){\n           dp[i][0]=true;\n       }\n        for(int i=1;i<nums.length;i++){\n            for(int j=1;j<k+1;j++){\n                boolean notinclude=dp[i-1][j];\n                boolean include=false;\n                if(nums[i]<=j){\n                    include=dp[i-1][j-nums[i]];\n                    \n                }\n                dp[i][j]=include || notinclude;\n                \n                \n                \n}\n        }\n        \n        \n        return dp[nums.length-1][k];\n        \n        \n    }\n}","compare_result":"111111111111110000001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111001100111000000000111","title_slug":"partition-to-k-equal-sum-subsets","has_notes":false}