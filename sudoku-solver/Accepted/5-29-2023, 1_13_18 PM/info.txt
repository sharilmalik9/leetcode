{"id":959439764,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1685346198,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/959439764/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"40.4 MB","code":"class Solution {\n    public void solveSudoku(char[][] board) {\n        rec(board,0,0);\n    }\n    public boolean rec(char[][] board,int row,int col){\n        if(row == 9) {\n           return true;\n       }\n      \n       int nrow = 0;\n       int ncol = 0;\n      \n       if(col == 8) {\n           nrow = row + 1;\n           ncol = 0;\n       } else {\n           nrow = row;\n           ncol = col + 1;\n       }\n      \n       if(board[row][col] != '.') {\n           if(rec(board, nrow, ncol)) {\n               return true;\n           }\n       } else {\n           //fill the place\n           for(int i=1; i<=9; i++) {\n               if(check(board, row, col, i)) {\n                   board[row][col] = (char)(i+'0');\n                   if(rec(board, nrow, ncol))\n                       return true;\n                   else\n                        board[row][col] = '.';\n               }\n           }\n       }\n                     \n       return false;\n\n    }\n    public boolean check(char[][] board,int row,int col,int num){\n        for(int i=0;i<9;i++){\n            if(board[i][col]-'0'==num){\n                return false;\n            }\n            if(board[row][i]-'0'==num){\n                return false;\n            }\n        }\n        int hy=(col/3)*3;\n        int hi=(row/3)*3;\n        for(int i=hi;i<hi+3;i++){\n            for(int j=hy;j<hy+3;j++){\n                if(board[i][j]-'0'==num){\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}","compare_result":"111111","title_slug":"sudoku-solver","has_notes":false}