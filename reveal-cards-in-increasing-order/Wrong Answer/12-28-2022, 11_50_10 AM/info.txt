{"id":866767886,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1672208410,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/866767886/","is_pending":"Not Pending","title":"Reveal Cards In Increasing Order","memory":"N/A","code":"class Solution {\n    public int[] deckRevealedIncreasing(int[] deck) {\n        if(deck.length==1){\n            return deck;\n        }\n        Arrays.sort(deck);\n        int start=0;\n        int idx=0;\n        int[] ans= new int[deck.length];\n        while(idx<deck.length){\n            ans[idx]=deck[start];\n            idx+=2;\n            start++;\n        }\n        idx=1;\n        System.out.println(Arrays.toString(deck));\n        \n        int mid=deck.length/2;\n        if(deck.length%2!=0){\n            mid++;\n\n        }\n        int remL=deck.length-mid;\n        int[] rem=new int[remL];\n        for(int i=1;i<rem.length;i+=2){\n            rem[i]=deck[mid];\n            mid++;\n\n        }\n        for(int i=0;i<rem.length;i+=2){\n            rem[i]=deck[mid];\n            mid++;\n        }\n        System.out.println(Arrays.toString(rem));\n         idx=0;\n        for(int i=1;i<ans.length;i+=2){\n            ans[i]=rem[idx];\n            idx++;\n\n        }\n        return ans;\n    }\n}","compare_result":"111110100000000000000000000000000","title_slug":"reveal-cards-in-increasing-order","has_notes":false}