{"id":923125068,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1679935114,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/923125068/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\n    public int[] maxSlidingWindow(int[] arr, int k) {\n        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());\n            int n = arr.length;\n            ArrayList<Integer> ans = new ArrayList<>();\n            for (int i = 0; i < k; i++)\n                pq.add(arr[i]);\n\n            ans.add(pq.peek());\n            pq.remove(arr[0]);\n\n            for (int i = k; i < n; i++) {\n                pq.add(arr[i]);\n                ans.add(pq.peek());\n                pq.remove(arr[i - k + 1]);\n            }\n\n            int a[] = new int[ans.size()];\n            for (int j = 0; j < ans.size(); j++)\n                a[j] = ans.get(j);\n\n            return a;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111100000000000000","title_slug":"sliding-window-maximum","has_notes":false}