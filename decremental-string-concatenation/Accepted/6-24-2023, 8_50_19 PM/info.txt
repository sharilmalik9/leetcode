{"id":978592934,"lang":"java","lang_name":"Java","time":"4 days, 4 hours","timestamp":1687620019,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/978592934/","is_pending":"Not Pending","title":"Decremental String Concatenation","memory":"52 MB","code":"class Solution {\n    String[] words;\n    Integer[][][] dp;\n    public int minimizeConcatenatedLength(String[] words) {\n        this.words = words;\n        int here=0;\n        dp = new Integer[words.length][27][27];\n        return words[0].length() + rec(1,words[0].charAt(0) - 'a' ,words[0].charAt(words[0].length()-1) - 'a');\n        \n    }\n    \n    public int rec(int idx, int first, int last){\n        if(idx == words.length) return 0;\n        if(dp[idx][first][last] != null) return dp[idx][first][last];\n        String curr = words[idx];\n        char firstCh = (char)('a' + first);        \n        char lastCh = (char)('a' + last);\n        int len1 = 0;\n        int len2 = 0;\n        if(lastCh == curr.charAt(0)){\n            len1 = curr.length() - 1;\n        }else{\n            len1 = curr.length();\n        }\n        len1 += rec(idx+1, first, (curr.charAt(curr.length()-1) - 'a') );\n\n        if(curr.charAt(curr.length() - 1) == firstCh){\n            len2 = curr.length() - 1;\n        }\n        else{\n            len2 = curr.length();\n        }\n        len2 += rec(idx+1, (curr.charAt(0) - 'a'), last );\n        return dp[idx][first][last] = Math.min(len1,len2);\n    }\n    \n}","compare_resulttitle_slug":"decremental-string-concatenation","has_notes":false}