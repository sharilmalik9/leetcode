{"id":829063804,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666588273,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/829063804/","is_pending":"Not Pending","title":"Word Ladder II","memory":"N/A","code":"public List<List<String>> findLadders(String start, String end, Set<String> words){\n    Map<String, List<List<String>>> dictStart = new HashMap<String, List<List<String>>>();\n    Map<String, List<List<String>>> dictEnd = new HashMap<String, List<List<String>>>();\n    dictStart.put(start, new ArrayList<List<String>>());\n    dictEnd.put(end, new ArrayList<List<String>>());\n    dictStart.get(start).add(new ArrayList<String>());\n    dictEnd.get(end).add(new ArrayList<String>());\n    dictStart.get(start).get(0).add(start); dictEnd.get(end).get(0).add(end);\n    words.remove(start); words.remove(end);\n    List<List<String>> resultList = new ArrayList<List<String>>();\n    while(dictStart.size() != 0 && dictEnd.size() != 0){\n        Map<String, List<List<String>>> newDict = new HashMap<String, List<List<String>>>();\n        Map<String, List<List<String>>> tmpDict1, tmpDict2;\n        Set<String> visited = new HashSet<String>();\n        tmpDict1 = dictEnd; tmpDict2 = dictStart;\n        if(dictStart.size() < dictEnd.size()) { tmpDict1 = dictStart; tmpDict2 = dictEnd; }\n        boolean getResults = false;\n        for(Map.Entry<String, List<List<String>>> kv : tmpDict1.entrySet()){\n            StringBuilder sb = new StringBuilder(kv.getKey());\n            for(int i = 0; i < sb.length(); i++){\n                char ch = sb.charAt(i);\n                for(char rep = 'a'; rep <= 'z'; rep++){\n                    if(rep == ch) continue;\n                    sb.setCharAt(i, rep);\n                    String newStr = sb.toString();\n                    if(tmpDict2.containsKey(newStr)){\n                        List<List<String>> list1 = tmpDict2.get(newStr), list2 = kv.getValue();\n                        for(int j = 0; j < list1.size(); j++)\n                            for(int k = 0; k < list2.size(); k++){\n                                List<String> result = new ArrayList<String>(list1.get(j));\n                                for(int l = list2.get(k).size() - 1; l >= 0; l--)\n                                    result.add(list2.get(k).get(l));\n                                if(result.get(0) != start) Collections.reverse(result);\n                                resultList.add(result);\n                            }\n                        getResults = true;\n                    }\n                    else if(words.contains(newStr) && !getResults){\n                        if(!visited.contains(newStr)) visited.add(newStr);\n                        if(!newDict.containsKey(newStr)) newDict.put(newStr, new ArrayList<List<String>>());\n                        for(List<String> list : kv.getValue()){\n                            newDict.get(newStr).add(new ArrayList<String>(list));\n                            newDict.get(newStr).get(newDict.get(newStr).size() - 1).add(newStr);\n                        }\n                    }\n                }\n                sb.setCharAt(i, ch);\n            }\n        }\n        if(getResults) break;\n        words.removeAll(visited);\n        if(tmpDict1 == dictStart) dictStart = newDict;\n        else dictEnd = newDict;\n    }\n    return resultList;\n}","compare_result":null,"title_slug":"word-ladder-ii","has_notes":false}