{"id":832180636,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1666976157,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/832180636/","is_pending":"Not Pending","title":"Hand of Straights","memory":"42.9 MB","code":"class Solution {\n    public boolean isNStraightHand(int[] hand, int groupSize) {\n        int n=hand.length;\n        if(n%groupSize!=0)\n            return false;\n        \n        Map<Integer,Integer> map=new HashMap<>();\n        for(int i:hand)\n            map.put(i,map.getOrDefault(i,0)+1);\n        \n        Arrays.sort(hand);\n        \n        for(int i=0;i<n;i++){\n            int cur=hand[i];\n            if(map.getOrDefault(cur,0)==0)\n                continue;\n            map.put(cur,map.get(cur)-1);\n            int count=groupSize;\n            while(count>1){\n                if(map.getOrDefault(cur+1,0)>0){\n                    map.put(cur+1,map.get(cur+1)-1);\n                    count--;\n                    cur++;\n                }\n                else\n                    return false;     \n            }     \n        }\n        return true;\n    \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"hand-of-straights","has_notes":false}