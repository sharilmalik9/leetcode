{"id":968976319,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1686499650,"status":10,"status_display":"Accepted","runtime":"270 ms","url":"/submissions/detail/968976319/","is_pending":"Not Pending","title":"Find a Good Subset of the Matrix","memory":"55.1 MB","code":"class Solution {\n    public List<Integer> goodSubsetofBinaryMatrix(int[][] grid) {\n        List<Integer> res = new ArrayList<>();\n        int m = grid.length, n = grid[0].length;\n        for(int i = 0;i < m;i++){\n            for(int j = 0;j < m;j++){\n                boolean wrong = false;\n                for(int k = 0;k < n;k++){\n                    int num = grid[i][k] + grid[j][k];\n                    if(num > 1) {\n                        wrong = true;break;\n                    }\n                }\n                if(!wrong){\n                    res.add(i);\n                    if(i != j) res.add(j);\n                    return res;\n                    \n                }\n            }\n        }\n        \n        return res;\n    }\n}","compare_resulttitle_slug":"find-a-good-subset-of-the-matrix","has_notes":false}