{"id":968186021,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1686412381,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/968186021/","is_pending":"Not Pending","title":"Find a Good Subset of the Matrix","memory":"N/A","code":"class Solution {\n    public List<Integer> goodSubsetofBinaryMatrix(int[][] grids) {\n        List<List<Integer>> grid=new ArrayList<>();\n        for(int i=0;i<grids.length;i++){\n            grid.add(new ArrayList<>());\n            for(int j=0;j<grids[0].length;j++){\n                grid.get(i).add(grids[i][j]);\n            }\n                  }\n         int n = grid.size();\n         int m = grid.get(0).size();\n        for (int i = 0; i < n; i++) {\n            if (sumnikalo(grid.get(i)) == 0) {\n                return List.of(i);\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                int sum = 0;\n                for (int k = 0; k < m; k++) {\n                    sum += grid.get(i).get(k) & grid.get(j).get(k);\n                }\n                if (sum == 0) {\n                    return List.of(i, j);\n                }\n            }\n        }\n        return new ArrayList<>();\n    \n        \n    }\n     public int sumnikalo( List<Integer> row) {\n        int sum = 0;\n        for (int i = 0; i < row.size(); i++) {\n            sum += row.get(i);\n        }\n        return sum;\n    }\n}","compare_resulttitle_slug":"find-a-good-subset-of-the-matrix","has_notes":false}