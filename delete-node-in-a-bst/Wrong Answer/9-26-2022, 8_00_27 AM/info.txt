{"id":808694570,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1664159427,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/808694570/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode deleteNode(TreeNode root, int key) {\n        return helper(root,key);\n        \n    }\n    public TreeNode helper(TreeNode root,int key){\n        if(root==null){\n            return null;\n        }\n        if(root.val>key){\n            root.left=helper(root.left,key);\n            \n        }\n        else if(root.val<key){\n            root.right=helper(root.right,key);\n            \n        }\n        else{\n            if(root.left==null){\n                return root.right;\n            }\n            else if(root.right==null){\n                  return root.left;\n            }\n            root.val=minval(root.right);\n          root.right= helper(root.right,root.val);\n        }\n        return root;\n    }\n    public int minval(TreeNode root){\n        if(root==null){\n            return -1;\n}\n        int max=root.val;\n        while(root.left!=null){\n            \n            max=Math.min(max,root.val);\n            root=root.left;\n        }\n        return max;\n        \n    }\n\n        \n        \n        \n        \n        \n        \n        \n        \n}","compare_result":"11111110100111111111111111111111111111111101111111111111111011111111011010011111111011011011","title_slug":"delete-node-in-a-bst","has_notes":false}