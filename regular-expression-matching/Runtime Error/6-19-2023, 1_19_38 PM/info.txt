{"id":974584140,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1687160978,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/974584140/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"N/A","code":"class Solution {\n     public boolean isMatch(String s, String p) {\n        int m =s.length();\n        int n =p.length();\n        boolean[][] dp= new boolean[m+1][n+1];\n        dp[0][0]=true;\n        for(int i=1;i<n+1;i++){\n            boolean flag=true;\n                if(p.charAt(i-1)=='*' && dp[0][i-2]){\n                  dp[i][0]=true;\n            } \n            \n        }\n        for(int i=1;i<m+1;i++){\n            for(int j=1;j<n+1;j++){\n                if(p.charAt(j-1)==s.charAt(i-1) || p.charAt(j-1)=='.'){\n                    dp[i][j]=dp[i-1][j-1];\n}\n                else if(p.charAt(j-1)=='*'){\n                    dp[i][j]=dp[i][j-2];\n                    if(s.charAt(i-1)==p.charAt(j-2)|| p.charAt(j-2)=='.'){\n                        dp[i][j]=dp[i][j] || dp[i-1][j];\n                    }\n                }\n                else{\n                    dp[i][j]=false;\n                }\n            }\n        }\n        return dp[m][n];\n        \n    }\n}","compare_result":"111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"regular-expression-matching","has_notes":false}