{"id":974523227,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1687154934,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/974523227/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"N/A","code":"class Solution {\n//     public boolean isMatch(String s, String p) {\n        \n        \n        \n//     }\n     public boolean isMatch(String s, String p) {\n        int m =s.length();\n        int n =p.length();\n        boolean[][] dp= new boolean[n+1][m+1];\n        dp[0][0]=true;\n        for(int i=1;i<n+1;i++){\n            boolean flag=true;\n            for(int j=1;j<=i;j++){\n                if(p.charAt(j-1)!='*'){\n                   flag=false;\n                    break;\n               }\n            } \n            dp[i][0]=flag;\n        }\n        for(int i=1;i<n+1;i++){\n            for(int j=1;j<m+1;j++){\n                if(p.charAt(i-1)==s.charAt(j-1) || p.charAt(i-1)=='.'){\n                    dp[i][j]=dp[i-1][j-1];\n}\n                else if(p.charAt(i-1)=='*'){\n                    dp[i][j]=dp[i-1][j] || dp[i][j-1];\n                }\n                else{\n                    dp[i][j]=false;\n                }\n            }\n        }\n        return dp[n][m];\n        \n    }\n}","compare_result":"111001111111111110001111010110001101111111111111111111110111011111111111111111111111011111111110111111111111111111111111110111111111011111111111111111111010110111001011101101110111110101111111011110101110111110111111111111110110111011011110111001111110100111101011011010110111011101111111011111111110111100111011011111111111111011101011111001111100101101","title_slug":"regular-expression-matching","has_notes":false}