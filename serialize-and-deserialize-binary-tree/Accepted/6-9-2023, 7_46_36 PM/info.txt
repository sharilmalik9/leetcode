{"id":967418044,"lang":"java","lang_name":"Java","time":"2 weeks, 5 days","timestamp":1686320196,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/967418044/","is_pending":"Not Pending","title":"Serialize and Deserialize Binary Tree","memory":"45.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\npublic class Codec {\n\n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        if(root==null){\n            return \"#\";\n        }\n        return root.val+\",\" + serialize(root.left)+\",\"+serialize(root.right);\n        \n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode deserialize(String data){\n        Queue<String> que= new LinkedList<>();\n       \n        for(int i=0;i<data.length();i++){\n            int j=i;\n            while(j<data.length() && data.charAt(j)!=','){\n                j++;\n            }\n            que.offer(data.substring(i,j));\n            i=j;\n            \n        }\n        return help(que);\n        \n    }\n    public TreeNode help(Queue<String> que){\n        String str=que.poll();\n        if(str.equals(\"#\")){\n            return null;\n        }\n        TreeNode curr = new TreeNode(Integer.parseInt(str));\n        curr.left=help(que);\n        curr.right=help(que);\n        return curr;\n    }\n}\n\n// Your Codec object will be instantiated and called as such:\n// Codec ser = new Codec();\n// Codec deser = new Codec();\n// TreeNode ans = deser.deserialize(ser.serialize(root));","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"serialize-and-deserialize-binary-tree","has_notes":false}