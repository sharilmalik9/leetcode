{"id":937059079,"lang":"java","lang_name":"Java","time":"2 months, 1 week","timestamp":1682015370,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/937059079/","is_pending":"Not Pending","title":"Remove Zero Sum Consecutive Nodes from Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeZeroSumSublists(ListNode head) {\n        ListNode dummy=new ListNode(-1,head);\n        HashMap<Integer,ListNode> hm= new HashMap<>();\n        hm.put(0,dummy);\n        if(head.next==null && head.val==0){\n            return null;\n        }\n        hm.put(head.val,head);\n        int sum=head.val;\n        ListNode curr=head.next;\n        while(curr!=null){\n            sum+=curr.val;\n            if(hm.containsKey(sum)){\n                ListNode pul=hm.get(sum);\n                ListNode sav=pul;\n                ListNode up=curr.next;\n                int delsum=sum;\n                \n                while(pul!=curr){\n                    pul=pul.next;\n                    delsum+=pul.val;\n                    hm.remove(delsum);\n\n                }\n                sav.next=curr.next;\n         \n            }\n            else{\n                hm.put(sum,curr);\n            \n            }\n             curr=curr.next;\n        }\n        return dummy.next;\n    }\n}","compare_result":"111111111110000111111100111101010101010100001100001111110101101001001101100100101101000100000000111111111","title_slug":"remove-zero-sum-consecutive-nodes-from-linked-list","has_notes":false}