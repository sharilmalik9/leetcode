{"id":798839516,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1663080195,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/798839516/","is_pending":"Not Pending","title":"Remove Zero Sum Consecutive Nodes from Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeZeroSumSublists(ListNode head) {\n        \n        HashMap<Integer,ListNode> hm= new HashMap<>();\n        ListNode nn=head;\n        ListNode fake=new ListNode(10001);\n        fake.next=head;\n        hm.put(0,fake);\n        int sum=0;\n        while(nn!=null){\n            sum+=nn.val;\n            if(hm.containsKey(sum)){\n                \n                ListNode curr=hm.get(sum);\n                if(curr==head){\n                    head=nn.next;\n                }\n                else{\n                    curr.next=nn.next;\n                }\n                \n                \n            }\n            else{\n                 hm.put(sum,nn);\n            }\n           \n            nn=nn.next;\n            \n        }\n        \n        return head;\n        \n    }\n}","compare_result":"110010001000000001010100001000011011001001001100000110101100011000000100100100110111100100000000000011101","title_slug":"remove-zero-sum-consecutive-nodes-from-linked-list","has_notes":false}