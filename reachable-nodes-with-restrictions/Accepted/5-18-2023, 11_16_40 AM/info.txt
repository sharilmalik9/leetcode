{"id":952511309,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1684388800,"status":10,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/952511309/","is_pending":"Not Pending","title":"Reachable Nodes With Restrictions","memory":"107.7 MB","code":"class Solution {\n    int count=0;\n    ArrayList<ArrayList<Integer>> adj=new ArrayList<>();\n    public int reachableNodes(int n, int[][] edges, int[] restricted) {\n        boolean[] vis=new boolean[n];\n        for(int i:restricted){\n            vis[i]=true;\n        }\n        for(int i=0;i<n;i++){\n            adj.add(new ArrayList<>());\n        }\n        for(int[] ii:edges){\n            adj.get(ii[0]).add(ii[1]);\n            adj.get(ii[1]).add(ii[0]);\n        }\n        dfs(0,vis);\n        return count;\n    }\n    private void dfs(int node,boolean[] vis){\n        vis[node]=true;\n        count++;\n        for(int it:adj.get(node)){\n            if(vis[it]==false){\n                dfs(it,vis);\n            }\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reachable-nodes-with-restrictions","has_notes":false}