{"id":793514274,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1662519360,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/793514274/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node II","memory":"45.2 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node left;\n    public Node right;\n    public Node next;\n\n    public Node() {}\n    \n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, Node _left, Node _right, Node _next) {\n        val = _val;\n        left = _left;\n        right = _right;\n        next = _next;\n    }\n};\n*/\n\nclass Solution {\n    public Node connect(Node root) {\n        if(root==null){\n            return null;\n        }\n        Queue<Node> que= new LinkedList<>();\n        que.add(root);\n        while(que.size()!=0){\n            int size=que.size();\n            \n            while(size-1!=0){\n                Node curr= que.poll();\n                Node curr2=que.peek();\n                curr.next=curr2;\n                if(curr.left!=null){\n                    que.add(curr.left);\n                }\n                if(curr.right!=null){\n                    que.add(curr.right);\n                }\n                size--;\n                \n                \n                \n                \n                \n            }\n            Node hey=que.poll();\n                hey.next=null;\n            if(hey.left!=null){\n                que.add(hey.left);\n            }\n            if(hey.right!=null){\n                que.add(hey.right);\n            }\n            \n}\n        return root;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node-ii","has_notes":false}