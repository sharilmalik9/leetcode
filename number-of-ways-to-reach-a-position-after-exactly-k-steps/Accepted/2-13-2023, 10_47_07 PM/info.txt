{"id":897328609,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1676308627,"status":10,"status_display":"Accepted","runtime":"234 ms","url":"/submissions/detail/897328609/","is_pending":"Not Pending","title":"Number of Ways to Reach a Position After Exactly k Steps","memory":"86.9 MB","code":"class Solution {\n    \n    public int numberOfWays(int startPos, int endPos, int k) {\n        int[][] dp= new int[4001][1001];\n        for(int[] i : dp){\n             Arrays.fill(i,-1);\n\n        }\n       \n        return help(endPos,k,startPos,dp);\n\n        \n    }\n    public int help(int end,int k,int curr,int[][] dp){\n        if(curr==end && k==0){\n            return 1;\n        }\n       \n        if(k==0){\n            return 0;\n        }\n        if(dp[curr+2001][k]!=-1){\n            return dp[curr+2001][k];\n        }\n        return dp[curr+2001][k]=(help(end,k-1,curr-1,dp)+ help(end,k-1,curr+1,dp))%1000000007;\n\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"number-of-ways-to-reach-a-position-after-exactly-k-steps","has_notes":false}