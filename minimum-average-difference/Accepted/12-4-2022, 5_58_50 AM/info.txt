{"id":854134103,"lang":"java","lang_name":"Java","time":"6 months, 3 weeks","timestamp":1670113730,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/854134103/","is_pending":"Not Pending","title":"Minimum Average Difference","memory":"58.6 MB","code":"class Solution {\n    public int minimumAverageDifference(int[] nums) {\n        int n = nums.length;\n        long[]prefix = new long[n];\n        long[]suffix = new long[n];\n        prefix[0] = nums[0];\n        suffix[n-1] = nums[n-1];\n        for(int i = 1; i<nums.length; i++){\n            prefix[i] = prefix[i-1] + nums[i];\n        }\n\n        for(int i = n-2; i>=0; i--){\n            suffix[i] = suffix[i+1] + nums[i];\n        }\n\n        long minimum = Long.MAX_VALUE;\n        int answer = 0;\n        for(int i = 0; i<nums.length; i++){\n\n            long sumLeftHalf = prefix[i];\n            long sumRightHalf = i+1 < n ? suffix[i+1] : 0;\n            int leftHalfElements = i+1;\n            int rightHalfElements = n-i-1;\n            long leftAvg = (sumLeftHalf)/leftHalfElements;\n            long rightAvg = rightHalfElements == 0 ? 0 : sumRightHalf/rightHalfElements;\n            long averageDifference = Math.abs(leftAvg - rightAvg);\n            if(minimum > averageDifference){\n                answer = i;\n                minimum = averageDifference;\n            }\n        }\n\n        return answer;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-average-difference","has_notes":false}