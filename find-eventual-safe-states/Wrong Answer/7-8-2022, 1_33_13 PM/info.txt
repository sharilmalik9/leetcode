{"id":741621499,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1657267393,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/741621499/","is_pending":"Not Pending","title":"Find Eventual Safe States","memory":"N/A","code":"class Solution {\n    public List<Integer> eventualSafeNodes(int[][] graph) {\n        Set<Integer> st= new HashSet<>();\n         List<Integer> ls= new ArrayList<>();\n        \n        \n        for(int i=0;i<graph.length;i++){\n            int[] curr=graph[i];\n            if(curr.length==0){\n                st.add(i);\n               \n                \n            }\n        }\n        for(int i=0;i<graph.length;i++){\n            boolean ans= true;\n            if(st.contains(i)){\n                ls.add(i);\n                continue;\n            }\n            for(int j:graph[i]){\n                if(!st.contains(j)){\n                    ans=false;\n                    break;\n                    \n                }\n                \n            }\n            if(ans){\n                ls.add(i);\n            }\n        }\n        return ls;\n       \n       \n        \n    }\n}","compare_result":"1101111110101111011100001101011111010011111100110000101100110110101000100010001010000000000000000001000000000000","title_slug":"find-eventual-safe-states","has_notes":false}