{"id":937702675,"lang":"java","lang_name":"Java","time":"2 months, 1 week","timestamp":1682135323,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/937702675/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"43.9 MB","code":"class Solution {\n    public int minInsertions(String s) {\n        StringBuilder sb= new StringBuilder(s);\n        int len=rec(s,sb.reverse().toString());\n        return s.length()-len;\n        \n    }\n    public int rec(String s,String t){\n        int[][] dp= new int[s.length()+1][t.length()+1];\n        for(int i=s.length()-1;i>=0;i--){\n            for(int j=t.length()-1;j>=0;j--){\n                if(s.charAt(i)==t.charAt(j)){\n                    dp[i][j]=1+dp[i+1][j+1];\n                }\n                else{\n                    dp[i][j]=Math.max(dp[i+1][j],dp[i][j+1]);\n                }\n\n            }\n        }\n        return dp[0][0];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false}