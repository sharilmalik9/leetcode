{"id":741392159,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1657243333,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/741392159/","is_pending":"Not Pending","title":"Paint House III","memory":"43.3 MB","code":"class Solution {\n    public int minCost(int[] houses, int[][] cost, int m, int n, int target) {\n        int MAX_COST = 1000001;\n        \n        int[][][] dp = new int[m][n + 1][target + 1];\n        \n        for (int[][] matrix: dp)\n            for (int[] row: matrix)\n                Arrays.fill(row, MAX_COST);\n                \n        for(int i = 1; i <= n; i++) {\n            if (houses[0] == 0) dp[0][i][1] = cost[0][i - 1];\n            else if (houses[0] == i) dp[0][i][1] = 0;\n        }\n        \n        for (int i = 1; i < m; i++) {\n            for (int j = 1; j <= n; j++) {\n                // if I only have two houses, I can't make 4 neighbour hoods so no point in looking at them hence the min in the next expression\n                for (int k = 1; k <= Math.min(target, i + 1); k++) {\n                    \n                    if (houses[i] != 0 && houses[i] != j) continue;\n                    int currCost = (houses[i] == j) ? 0 : cost[i][j - 1];\n                    \n                    for (int l = 1; l <= n; l++) {\n                        int newNeighour = (j == l) ? k : k - 1;\n                        dp[i][j][k] = Math.min(dp[i][j][k],\n                                            currCost + dp[i - 1][l][newNeighour]);\n                    }\n                }\n            }\n        }\n        \n        int minCostRes = MAX_COST;\n        for (int l = 1; l <= n; l++) {\n            minCostRes = Math.min(minCostRes, dp[m - 1][l][target]);\n        }\n        \n        // time - O(M * T * N * N) - T - target, match the rest to the parameters\n        // space - O(M * T * N)\n        \n        // int minCostRes = minCost(houses, cost, m, n, target, 0, 0, new int[m][n + 1][target + 1]);\n        return (minCostRes == MAX_COST) ? -1 : minCostRes;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"paint-house-iii","has_notes":false}