{"id":761475172,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1659270884,"status":10,"status_display":"Accepted","runtime":"260 ms","url":"/submissions/detail/761475172/","is_pending":"Not Pending","title":"Longest Cycle in a Graph","memory":"153.5 MB","code":"class Solution {\n    public int longestCycle(int[] edges) {\n    int n = edges.length;\n    int ans = -1;\n    boolean[] visited = new boolean[n];\n    for(int i = 0 ; i < n ; i++){\n        if(visited[i])continue;\n        HashMap<Integer , Integer> d = new HashMap<>();\n        // visited[i] = true;\n        // d.put(i , 0);\n        int x = dfs(edges , i , 0 , visited ,i , d);\n        if(x != -1)ans = Math.max(ans , x);\n    }\n    return ans;\n}\npublic int dfs(int[] edges , int node , int dis , boolean[] visited , int start ,HashMap<Integer , Integer> d ){\n    if(node == -1)return -1;\n    // if(node == start)return dis;\n    if(visited[node] ){\n        if(!d.containsKey(node))return -1;\n        return dis - d.get(node);\n    }\n    visited[node] = true;\n    d.put(node , dis);\n    return dfs(edges , edges[node] , dis+1 , visited ,start ,d);\n    \n}\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-cycle-in-a-graph","has_notes":false}