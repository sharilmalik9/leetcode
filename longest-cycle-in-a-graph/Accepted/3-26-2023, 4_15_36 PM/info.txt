{"id":922375129,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1679827536,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/922375129/","is_pending":"Not Pending","title":"Longest Cycle in a Graph","memory":"54.5 MB","code":"class Solution {\n    public int longestCycle(int[] edges) {\n        int longestCycleLen = -1;\n        int timeStep = 1;\n        int[] nodeVisitedAtTime = new int[edges.length];\n\n        for (int currentNode = 0; currentNode < edges.length; ++currentNode) {\n            if (nodeVisitedAtTime[currentNode] > 0)\n                continue;\n            final int startTime = timeStep;\n            int u = currentNode;\n            while (u != -1 && nodeVisitedAtTime[u] == 0) {\n                nodeVisitedAtTime[u] = timeStep++;\n                u = edges[u];\n            }\n            if (u != -1 && nodeVisitedAtTime[u] >= startTime)\n                longestCycleLen = Math.max(longestCycleLen, timeStep - nodeVisitedAtTime[u]);\n        }\n\n        return longestCycleLen;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-cycle-in-a-graph","has_notes":false}