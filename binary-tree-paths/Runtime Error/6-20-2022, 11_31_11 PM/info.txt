{"id":726936089,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1655748071,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/726936089/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n   public List<String> binaryTreePaths(TreeNode root) {\n \n    String sb = \"\";\n    ArrayList<String> result = new ArrayList<String>();\n \n    helper(root, result, sb);\n \n    return result;\n}\n \npublic void helper(TreeNode root, ArrayList<String> result, String s){\n    if(root==null){\n        return;\n    }\n \n    s = s+\"->\"+root.val;\n \n    if(root.left==null &&root.right==null){\n        result.add(s.substring(2));\n        System.out.println(s.substring(4));\n        return;\n    }\n \n    if(root.left!=null){\n        helper(root.left, result, s);\n    }\n    if(root.right!=null){\n        helper(root.right, result, s);\n    }\n}\n}","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-paths","has_notes":false}