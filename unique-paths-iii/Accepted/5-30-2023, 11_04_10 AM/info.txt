{"id":960026657,"lang":"java","lang_name":"Java","time":"4 weeks, 1 day","timestamp":1685424850,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/960026657/","is_pending":"Not Pending","title":"Unique Paths III","memory":"39.8 MB","code":"class Solution {\n    static int count=0;\n    static int[] dx = {-1, 0, 1, 0};\n    static int[] dy = {0, 1, 0, -1};\n    public int uniquePathsIII(int[][] grid) {\n        int zero = 0; \n        int sx = 0; \n        int sy = 0; \n        int m=grid.length;\n        int n=grid[0].length;\n        boolean v[][]=new boolean[m][n];\n        for(int r = 0; r < grid.length; r++){ \n            for(int c = 0; c < grid[0].length; c++){ \n                if(grid[r][c] == 0) zero++;\n                else if(grid[r][c] == 1){\n                    sx = r; \n                    sy = c;\n                }\n                else if(grid[r][c]==-1){\n                    v[r][c]=true;\n                }\n            }\n        }\n        count=0;\n        backtrack(grid, sx, sy, zero,v);\n        return count;\n    }\n    public void backtrack(int grid[][], int x, int y, int zero,boolean v[][]){\n       \n        if(x < 0 || y < 0 || x >= grid.length || y >= grid[0].length \n         ||v[x][y]) return ;\n\n        if(grid[x][y] == 2 && zero==-1)\n        {\n           count++;\n           return;\n        }\n\n        v[x][y]=true;\n        zero--; \n        // up right down left\n        for (int i = 0; i < 4; i++) {\n            int nx = x + dx[i];\n            int ny = y + dy[i];\n            backtrack(grid,nx,ny,zero,v);\n        }\n       \n        v[x][y]=false;\n        zero++;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"unique-paths-iii","has_notes":false}