{"id":875802066,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1673399523,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/875802066/","is_pending":"Not Pending","title":"Minimum Time to Collect All Apples in a Tree","memory":"85.6 MB","code":"class Solution {\n    public int minTime(int n, int[][] edges, List<Boolean> hasApple) {\n         List<List<Integer>>adj=new ArrayList<>();\n        for(int i=0;i<n;i++){\n            adj.add(new ArrayList<>());\n        }\n        for(int e[]:edges){\n            adj.get(e[0]).add(e[1]);\n            adj.get(e[1]).add(e[0]);\n        }\n        boolean vis[]=new boolean[n];\n        return dfs(adj,vis,hasApple,n,0);\n    }\n    public int dfs(List<List<Integer>>adj,boolean vis[],List<Boolean> hasApple,int n,int i){\n        vis[i]=true;\n        int cnt=0;\n        for(int e: adj.get(i)){\n            if(!vis[e]){\n                cnt+=dfs(adj,vis,hasApple,n,e);\n            }\n        }\n        if(i==0){\n            return cnt;\n        }\n        return cnt + ((cnt>0 || hasApple.get(i)) ? 2 :0);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"minimum-time-to-collect-all-apples-in-a-tree","has_notes":false}