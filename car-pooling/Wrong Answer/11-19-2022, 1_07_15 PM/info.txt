{"id":846223028,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1668843435,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/846223028/","is_pending":"Not Pending","title":"Car Pooling","memory":"N/A","code":"class Solution {\n    public boolean carPooling(int[][] trips, int capacity) {\n        // glti se bhi discuss nhi dekhna sirf ques kro khud se \n        PriorityQueue<int[]> pq= new PriorityQueue<>((a,b)-> a[1]==b[1] ? a[2]-b[2] : a[1]-b[1]);\n        for(int[] i: trips){\n            pq.add(i);\n        }\n        int passenger=pq.peek()[0];\n        int start=pq.peek()[1];\n        int end=pq.peek()[2];\n        pq.poll();\n        while(pq.size()!=0)\n        {\n            int[] curr=pq.poll();\n            if(curr[1]<end){\n                passenger+=curr[0];\n                if(passenger>capacity){\n                    return false;\n                }\n                else{\n                     start=Math.min(start,curr[1]);\n                      end=Math.max(end,curr[2]);\n                }\n            }\n            else{\n                passenger=curr[0];\n                if(passenger>capacity){\n                    return false;\n                }\n                start=curr[1];\n                end=curr[2];\n            }\n            \n        }        \n        return true;\n        \n    }\n}","compare_result":"11101110110010101010001010100001100110100000100010101100111","title_slug":"car-pooling","has_notes":false}