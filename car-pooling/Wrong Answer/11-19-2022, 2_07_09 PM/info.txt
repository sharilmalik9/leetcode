{"id":846242834,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1668847029,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/846242834/","is_pending":"Not Pending","title":"Car Pooling","memory":"N/A","code":"class Solution {\n    public boolean carPooling(int[][] trips, int capacity) {\n        // glti se bhi discuss nhi dekhna sirf ques kro khud se \n        PriorityQueue<int[]> pq= new PriorityQueue<>((a,b)-> a[1]==b[1] ? a[2]-b[2] : a[1]-b[1]);\n        for(int[] i: trips){\n            pq.add(i);\n        }\n        int passenger=pq.peek()[0];\n        int start=pq.peek()[1];\n        int end=pq.peek()[2];\n       List<int[]> ls= new ArrayList<>();\n        ls.add(pq.poll());\n        while(pq.size()!=0) {\n            int[] curr=pq.poll();\n            System.out.println(Arrays.toString(curr));\n            int i=0;\n            while(i<ls.size()){\n                if(ls.get(i)[2]<=curr[1]){\n                    passenger-=ls.get(i)[0];\n                    ls.remove(i);\n                }\n                else{\n                    i++;\n                }\n}\n            passenger+=curr[0];\n            ls.add(curr);\n            if(passenger>capacity){\n                System.out.println(\"here\");\n                return false;\n            }\n             \n            \n        }        \n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111100111","title_slug":"car-pooling","has_notes":false}