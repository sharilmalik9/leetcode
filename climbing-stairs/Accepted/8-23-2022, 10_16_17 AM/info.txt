{"id":780921665,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1661229977,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/780921665/","is_pending":"Not Pending","title":"Climbing Stairs","memory":"40.4 MB","code":"class Solution {\n    public int climbStairs(int n) {\n        //If number of ways to reach n-1 th stair = x\n        //   number of ways to reach n-2 th stair = y\n        //   number of ways to reach n th stair = x+y\n        \n        int dp[] = new int[n+1];\n        dp[0] = 1;    //Number of way to climb 1st stair is 1 whisch is - 1\n        dp[1] = 2;    //Number of ways to climb 2nd stair are 2 : 1+1, 2\n        \n        for(int i = 2; i < n; i++){\n            dp[i] = dp[i-1]+dp[i-2];\n        }\n        \n        return dp[n-1];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"climbing-stairs","has_notes":false}