{"id":867357113,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1672296895,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/867357113/","is_pending":"Not Pending","title":"Next Permutation","memory":"42.9 MB","code":"class Solution {\n    public void nextPermutation(int[] nums) {\n        boolean flag=true;\n        for(int i=0;i<nums.length-1;i++){\n            if(nums[i]<nums[i+1]){\n                flag=false;\n            }\n        }\n        if(flag){\n            Arrays.sort(nums);\n            return;\n        }\n        int idx=nums.length-1;\n        for(int i=nums.length-1;i>0;i--){\n            if(nums[i]>nums[i-1]){\n                idx=i-1;\n                break;\n            }\n        }\n        if(idx==0){\n\n        }\n        int idx2=nums.length-1;\n        for(int i=nums.length-1;i>0;i--){\n            if(nums[i]>nums[idx]){\n                idx2=i;\n                break;\n            }\n        }\n        int temp=nums[idx];\n        nums[idx]=nums[idx2];\n        nums[idx2]=temp;\n        reverse(nums,idx+1);\n    }\n    public void reverse(int[] nums,int i ){\n        int start=i;\n        int end=nums.length-1;\n        while(start<end){\n            int temp=nums[start];\n            nums[start]=nums[end];\n            nums[end]=temp;\n            start++;\n            end--;\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-permutation","has_notes":false}