{"id":791789197,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1662348916,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/791789197/","is_pending":"Not Pending","title":"N-ary Tree Level Order Traversal","memory":"N/A","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n    public List<List<Integer>> levelOrder(Node root) {\n        Queue<Node> nn= new LinkedList<>();\n        List<List<Integer>> ans= new LinkedList<>();\n        nn.add(root);\n        while(nn.size()!=0){\n            List<Integer> curr= new ArrayList<>();\n            int size=nn.size();\n            while(size!=0){\n                Node hey= nn.poll();\n                curr.add(hey.val);\n                for(Node now: hey.children){\n                    nn.add(now);\n                }\n                size--;\n            }\n            ans.add(curr);\n            \n            \n      \n     \n            \n}\n        return ans;\n    }\n}","compare_result":"11000000000000000000000000000000000000","title_slug":"n-ary-tree-level-order-traversal","has_notes":false}