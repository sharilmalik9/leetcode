{"id":829639146,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1666666106,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/829639146/","is_pending":"Not Pending","title":"Reorder List","memory":"45.2 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public void reorderList(ListNode head) {\n        Queue<ListNode> q=new LinkedList<>();\n        Stack<ListNode> s=new Stack<>();\n        ListNode temp=head;\n        int count=0;\n        while(temp!=null){\n            q.add(temp);\n            s.push(temp);\n            temp=temp.next;\n            count++;\n        }\n        temp=q.poll();\n        count--;\n        while(count>0){\n            temp.next=s.pop();\n            temp=temp.next;\n            count--;\n            if(count==0)\n                break;\n            temp.next=q.poll();\n            temp=temp.next;\n            count--;\n        }\n        temp.next=null;\n    }\n}","compare_result":"111111111111","title_slug":"reorder-list","has_notes":false}