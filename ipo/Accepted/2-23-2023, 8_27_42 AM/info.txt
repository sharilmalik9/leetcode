{"id":903261112,"lang":"java","lang_name":"Java","time":"4Â months","timestamp":1677121062,"status":10,"status_display":"Accepted","runtime":"125 ms","url":"/submissions/detail/903261112/","is_pending":"Not Pending","title":"IPO","memory":"90.5 MB","code":"class Solution {\n    public int findMaximizedCapital(int k, int w, int[] profits, int[] capital) {\n        int[][] ls= new int[profits.length][2];\n        for(int i=0;i<profits.length;i++){\n            ls[i][0]=capital[i];\n            ls[i][1]=profits[i];\n        }\n        Arrays.sort(ls,(i,j)-> i[0]-j[0]);\n        PriorityQueue<Integer> pq= new PriorityQueue<>(Collections.reverseOrder());\n        int i=0;\n        \n\n        while(k-->0){\n            while(i<profits.length  && ls[i][0]<=w){\n                pq.add(ls[i][1]);\n                i++;\n            }\n            if(pq.size()==0){\n                break;\n            }\n            w+=pq.poll();\n            \n        }\n        return w;\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"ipo","has_notes":false}