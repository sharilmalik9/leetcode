{"id":950511443,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1684116806,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/950511443/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"57.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode swapNodes(ListNode head, int k) {\n        ListNode hh=head;\n        int size=1;\n        while(hh!=null){\n            hh=hh.next;\n            size++;\n        }\n        ListNode one=head;\n        int m=1;\n        while(m<k && one!=null){\n            one=one.next;\n            m++;\n\n        }\n        System.out.println(one.val);\n        int n=1;\n        ListNode two=head;\n        while(n<size-k && two!=null){\n            n++;\n            two=two.next;\n        }\n        int temp=one.val;\n        one.val=two.val;\n        two.val=temp;\n        return head;\n\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list","has_notes":false}