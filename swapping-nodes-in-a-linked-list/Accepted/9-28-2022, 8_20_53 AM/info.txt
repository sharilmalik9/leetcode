{"id":810261971,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1664333453,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/810261971/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"167.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode swapNodes(ListNode head, int k) {\n        if(head == null) return head;\n        ListNode p = head, end = null,begin = null;\n        for(int i = 1; i < k; i++){\n            if(p != null) p = p.next;\n        }\n        begin = p;\n        while(p != null){\n            if(end == null) end = head;\n            else{\n                end = end.next;\n            }\n            p = p.next;    \n        }\n        int temp = 0;\n        temp = begin.val;\n        begin.val = end.val;\n        end.val = temp;\n        \n        return head;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list","has_notes":false}