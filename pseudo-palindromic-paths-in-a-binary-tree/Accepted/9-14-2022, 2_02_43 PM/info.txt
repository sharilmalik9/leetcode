{"id":799480022,"lang":"java","lang_name":"Java","time":"9Â months, 2Â weeks","timestamp":1663144363,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/799480022/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"109.7 MB","code":"class Solution {\n    public int pseudoPalindromicPaths (TreeNode root) {\n        int[] freq = new int[10];\n        int[] res = new int[1];\n        f(root, freq, res);\n        return res[0];\n    }\n    private void f(TreeNode root, int[] freq, int[] res){\n        if(root == null) return;\n        \n        if(isLeaf(root)){\n            freq[root.val]++;\n            if(pathIsPalindrome(freq)){\n                res[0]++;\n            }\n            freq[root.val]--;\n            return;\n        }\n        \n        freq[root.val]++;;\n        f(root.left, freq, res);\n        f(root.right, freq, res);\n        freq[root.val]--;   \n        \n    }\n    private boolean isLeaf(TreeNode root){\n        if(root.left == null && root.right == null) return true;\n        else return false;\n    }\n    private boolean pathIsPalindrome(int[] freq){\n        int odd = 0;\n        for(int i : freq){\n            if(i % 2 != 0) odd++;\n        }\n        if(odd > 1){\n            return false;\n        }else{\n            return true;\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"pseudo-palindromic-paths-in-a-binary-tree","has_notes":false}