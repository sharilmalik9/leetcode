{"id":961559277,"lang":"java","lang_name":"Java","time":"3 weeks, 6 days","timestamp":1685614699,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/961559277/","is_pending":"Not Pending","title":"Check if a Parentheses String Can Be Valid","memory":"44.6 MB","code":"// class Solution {\n//     public boolean canBeValid(String s, String locked) {\n//         if(s.length()%2!=0){\n//             return false;\n//         }\n//         int lock=0;\n//         Stack<Character> st=new Stack<>();\n//         for(int i=0;i<s.length();i++){\n//             if(locked.charAt(i)=='0'){\n//                 lock++;\n//             }\n//             else{\n//                 if(s.charAt(i)=='('){\n//                     lock++;\n//                 }\n//                 else{\n\n//                         lock--;\n//                 }\n//             }\n//         }\n    //     if(lock<0){\n    //         return false;\n    //     }\n    //     st=new Stack<>();\n    //    int  idx=s.length()-1;\n    //     lock=0;\n    //     while(idx>=0){\n    //         if(locked.charAt(idx)=='0'){\n    //             lock++;\n    //         }\n    //         else{\n    //             if(s.charAt(idx)==')'){\n    //                 lock++;\n    //             }\n    //             else{\n    //                     lock--;\n    //             }\n    //         }\n    //         idx--;\n    //     }\n    //     if(lock<0){\n    //         return false;\n    //     }\n//         return true;\n//     }\n// }\nclass Solution {\n    public boolean canBeValid(String s, String locked) {\n        int n = s.length();\n        if (n % 2 != 0) return false;\n        \n        int possibleOpens = 0;\n        int fixedCloses = 0;\n        \n        for (int i = 0; i < n; i ++) {\n            if ( locked.charAt(i) == '0') {\n                possibleOpens++;\n            } else {\n                if(s.charAt(i)=='('){\n                    possibleOpens++;\n                }\n                else{\n                     possibleOpens--;\n\n                }\n\n            }\n            \n            if (possibleOpens<0) return false;\n        }\n        \n        int possibleCloses = 0;\n        int fixedOpens = 0;\n        \n        for (int i = n - 1; i >= 0; i--) {\n            if (s.charAt(i) == ')' || locked.charAt(i) == '0') {\n                possibleCloses++;\n            } else {\n                possibleCloses--;\n            }\n            \n            if (possibleCloses<0) return false;\n        }\n        \n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-if-a-parentheses-string-can-be-valid","has_notes":false}