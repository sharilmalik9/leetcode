{"id":980574117,"lang":"java","lang_name":"Java","time":"1 day, 13 hours","timestamp":1687844658,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/980574117/","is_pending":"Not Pending","title":"Find K Pairs with Smallest Sums","memory":"57.1 MB","code":"class Solution {\n    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {\n        PriorityQueue<int[]> pq=new PriorityQueue<>((a,b)->a[0]+a[1]-b[0]-b[1]);\n        for(int i=0;i<nums1.length;i++){\n            pq.add(new int[]{nums1[i],nums2[0],0});\n        }\n        List<List<Integer>> ls=new ArrayList<>();\n        while(k-->0 && pq.size()!=0){\n            int[] curr=pq.poll();\n            List<Integer> he=new ArrayList<>();\n            he.add(curr[0]);\n            he.add(curr[1]);\n            ls.add(he);\n            int idx=curr[2]+1;\n            if(idx<nums2.length ){\n                pq.add(new int[]{curr[0],nums2[idx],idx});\n            }\n        }\n        return ls;\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"find-k-pairs-with-smallest-sums","has_notes":false}