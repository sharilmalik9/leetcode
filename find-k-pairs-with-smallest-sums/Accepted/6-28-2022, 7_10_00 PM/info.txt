{"id":733457613,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1656423600,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/733457613/","is_pending":"Not Pending","title":"Find K Pairs with Smallest Sums","memory":"125 MB","code":"class Solution {\n    \n    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {\n       PriorityQueue<int[]> pq = new PriorityQueue<int[]>((a, b) -> ((a[0] + a[1]) - (b[0] + b[1])));\n        List<List<Integer>> list = new ArrayList<>();\n\n        for(int i = 0; i < Math.min(nums1.length, k); i++) {\n            pq.add(new int[] {nums1[i], nums2[0], 0});\n        }\n\n        while(k-- > 0 && !pq.isEmpty()) {\n            int[] top = pq.poll();\n            list.add(Arrays.asList(top[0], top[1]));\n            int next = top[2] +  1;\n            \n            if(next < nums2.length) {\n                pq.add(new int[] {top[0], nums2[next], next});\n            }\n        }\n\n        return list;\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"find-k-pairs-with-smallest-sums","has_notes":false}