{"id":950970384,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1684175463,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/950970384/","is_pending":"Not Pending","title":"Course Schedule II","memory":"43.6 MB","code":"class Solution {\n    public int[] findOrder(int numCourses, int[][] prerequisites) {\n        List<List<Integer>> adj= new ArrayList<>();\n        for(int i=0;i<numCourses;i++){\n            adj.add(new ArrayList<>());\n        }\n        for(int[] i : prerequisites){\n            adj.get(i[1]).add(i[0]);\n        }\n        return isCyclic(numCourses,adj);\n        \n    }\n    public int[] isCyclic(int V, List<List<Integer>> adj) {\n        int[] ans= new int[V];\n        int idx=0;\n       int[] indegree= new int[V];\n       for(int i=0;i<V;i++){\n           for(int j: adj.get(i)){\n               indegree[j]++;\n           }\n       }\n       Queue<Integer> que= new LinkedList<>();\n       for(int i=0;i<V;i++){\n           if(indegree[i]==0){\n               que.add(i);\n           }\n       }\n       int cnt=0;\n       while(que.size()!=0){\n           \n           cnt++;\n           int curr=que.poll();\n           ans[idx]=curr;\n           idx++;\n           for(int i: adj.get(curr)){\n               indegree[i]--;\n               if(indegree[i]==0){\n                   que.add(i);\n               }\n           }\n           \n       }\n       if(cnt==V){\n           return ans;\n       }\n       return new int[0];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"course-schedule-ii","has_notes":false}