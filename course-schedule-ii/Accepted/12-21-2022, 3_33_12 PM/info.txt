{"id":863162417,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1671616992,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/863162417/","is_pending":"Not Pending","title":"Course Schedule II","memory":"43.8 MB","code":"class Solution {\n   // do topological sorting and check if cycle is there if no cycle then return topo else false\n// no of topo != edges\npublic int[] findOrder(int numCourses, int[][] prerequisites) {\n    ArrayList<Integer>[] graph = new ArrayList[numCourses];\n    for(int i = 0; i < numCourses; i++) {\n        graph[i] = new ArrayList<>();\n    }\n    for (int[] pre : prerequisites) {\n        graph[pre[1]].add(pre[0]);\n    }\n\n\n    boolean[] visited = new boolean[numCourses];\n    boolean[] onStack = new boolean[numCourses];\n\n    Deque<Integer> reversePost = new LinkedList<>();\n\n    if (hasCircle(graph, visited, onStack, reversePost)) {\n        return new int[0];\n    }\n\n    int[] res = new int[numCourses];\n    for (int i = 0; i < numCourses; i++) {\n        res[i] = reversePost.pop();\n    }\n\n    return res;\n\n\n}\n\nprivate boolean hasCircle(ArrayList<Integer>[] graph, boolean[] visited, boolean[] onStack, Deque<Integer> reversePost) {\n    for(int i = 0; i < graph.length; i++) {\n        if (!visited[i]) {\n            if (dfs(graph, visited, onStack, i, reversePost)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nprivate boolean dfs(ArrayList<Integer>[] graph, boolean[] visited, boolean[] onStack, int i, Deque<Integer> reversePost) {\n    onStack[i] = true;\n    visited[i] = true;\n    for (int j : graph[i]) {\n        if (!visited[j]) {\n            if (dfs(graph, visited, onStack, j, reversePost)) {\n                return true;\n            }\n        } else if (onStack[j]) {\n            return true;\n        }\n    }\n    onStack[i] = false;\n    reversePost.push(i);\n    return false;\n}\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"course-schedule-ii","has_notes":false}