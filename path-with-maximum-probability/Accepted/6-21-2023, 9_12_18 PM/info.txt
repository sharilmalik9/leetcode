{"id":976444380,"lang":"java","lang_name":"Java","time":"1Â week","timestamp":1687362138,"status":10,"status_display":"Accepted","runtime":"46 ms","url":"/submissions/detail/976444380/","is_pending":"Not Pending","title":"Path with Maximum Probability","memory":"56 MB","code":"class Solution {\n    static class pair{\n        int node;\n        double probability;\n        pair(int node,double probability){\n            this.node=node;\n            this.probability=probability;\n        }\n    }\n    public double maxProbability(int n, int[][] edges, double[] succProb, int start, int end) {\n         ArrayList<ArrayList<pair>> adj=new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            adj.add(new ArrayList<>());\n        }\n\n        for (int i = 0; i < edges.length; i++) {\n            adj.get(edges[i][0]).add(new pair(edges[i][1],succProb[ i]));\n            adj.get(edges[i][1]).add(new pair(edges[i][0],succProb[ i ]));\n        }\n\n        double[] ans=new double[n];\n        Arrays.fill(ans, 0.0);\n        ans[start]=1;\n        PriorityQueue<pair> q = new PriorityQueue<>((a,b)->{\n            if(b.probability>a.probability){\n                return 1;\n            }\n            return -1;\n\n        });\n        q.add(new pair(start,1));\n        while (!q.isEmpty()){\n            pair temp=q.poll();\n            int node= temp.node;\n            double prob= temp.probability;\n            for (pair k: adj.get(node)){\n                int cnode=k.node;\n                double cprob=k.probability;\n                if (ans[cnode]==0.0) {\n                    ans[cnode] = cprob*prob;\n                    q.add(new pair(cnode,ans[cnode]));\n                }\n                else if (prob * cprob > ans[cnode]){\n                    ans[cnode]=prob * cprob;\n                    q.add(new pair(cnode,ans[cnode]));\n                }\n            }\n        }\n        if (ans[end]==0.0)\n            return 0.0;\n        return ans[end];\n    }\n}","compare_result":"111111111111111111","title_slug":"path-with-maximum-probability","has_notes":false}