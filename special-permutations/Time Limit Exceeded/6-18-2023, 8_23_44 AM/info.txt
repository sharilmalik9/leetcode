{"id":973712883,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1687056824,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/973712883/","is_pending":"Not Pending","title":"Special Permutations","memory":"N/A","code":"class Solution {\n    static int mod=1000000007;\n    public int specialPerm(int[] nums){\n        return permute(nums);\n        \n        \n    }\n     public int permute(int[] letters) {\n       \n        int ans=dfs(0,-1, new boolean[letters.length] ,letters);\n        return ans;\n    }\n\n    private static int dfs(int idx,int prev, boolean[] used,  int[] letters) {\n        if (idx == used.length) {\n            return 1;\n          \n        }\n        int ans=0;\n        for (int i = 0; i < used.length; i++) {\n            if (used[i]) continue;\n            if(prev==-1){\n            used[i] = true;\n           ans+= dfs(idx+1,letters[i], used,  letters);\n            used[i] = false;\n                \n            }\n            if(prev!=-1 && (prev%letters[i]==0 || letters[i]%prev==0)){\n           \n            used[i] = true;\n            ans+=dfs(idx+1,letters[i], used,  letters);\n          \n            used[i] = false;\n                \n            }\n        }\n        return ans%mod;\n    }    \n}","compare_resulttitle_slug":"special-permutations","has_notes":false}