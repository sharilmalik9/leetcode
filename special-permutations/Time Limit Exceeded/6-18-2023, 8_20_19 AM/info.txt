{"id":973707740,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1687056619,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/973707740/","is_pending":"Not Pending","title":"Special Permutations","memory":"N/A","code":"class Solution {\n    static int mod=1000000007;\n    public int specialPerm(int[] nums){\n        return permute(nums);\n        \n        \n    }\n     public int permute(int[] letters) {\n       \n        int ans=dfs(new ArrayList<>(), new boolean[letters.length] ,letters);\n        return ans;\n    }\n\n    private static int dfs(List<Integer> path, boolean[] used,  int[] letters) {\n        if (path.size() == used.length) {\n            return 1;\n          \n        }\n        int ans=0;\n        for (int i = 0; i < used.length; i++) {\n            \n         \n            if (used[i]) continue;\n            if(path.size()==0){\n                path.add(letters[i]);\n            used[i] = true;\n           ans+= dfs(path, used,  letters);\n    \n            path.remove(path.size() - 1);\n            used[i] = false;\n                \n            }\n            if(path.size()!=0 && (path.get(path.size()-1)%letters[i]==0 || letters[i]%path.get(path.size()-1)==0)){\n             path.add(letters[i]);\n            used[i] = true;\n            ans+=dfs(path, used,  letters);\n    \n            path.remove(path.size() - 1);\n            used[i] = false;\n                \n            }\n        }\n        return ans%mod;\n    }    \n}","compare_resulttitle_slug":"special-permutations","has_notes":false}