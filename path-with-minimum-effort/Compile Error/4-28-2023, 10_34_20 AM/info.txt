{"id":940933893,"lang":"java","lang_name":"Java","time":"2Â months","timestamp":1682658260,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/940933893/","is_pending":"Not Pending","title":"Path With Minimum Effort","memory":"N/A","code":"public int minimumEffortPath(int[][] heights) {\r\n        int left = 0, right = (int) 10e6;\r\n        while (left < right) {\r\n            int middle = (right + left) / 2;\r\n            if (dfs(heights, new boolean[heights.length][heights[0].length], 0, 0, heights[0][0], middle))\r\n                right = middle;\r\n            else\r\n                left = middle + 1;\r\n        }\r\n        return right;\r\n    }\r\n\r\n\r\n    private boolean dfs(int[][] heights, boolean[][] visited, int row, int column, int lastHeight, int threshold) {\r\n        if (row < 0 || row >= heights.length || column < 0 || column >= heights[0].length ||\r\n                visited[row][column] || Math.abs(heights[row][column] - lastHeight) > threshold)\r\n            return false;\r\n\r\n        visited[row][column] = true;\r\n\r\n        return ((row == heights.length - 1 && column == heights[0].length - 1)\r\n                || dfs(heights, visited, row + 1, column, heights[row][column], threshold)\r\n                || dfs(heights, visited, row - 1, column, heights[row][column], threshold)\r\n                || dfs(heights, visited, row, column + 1, heights[row][column], threshold)\r\n                || dfs(heights, visited, row, column - 1, heights[row][column], threshold));\r\n    }","compare_result":null,"title_slug":"path-with-minimum-effort","has_notes":false}