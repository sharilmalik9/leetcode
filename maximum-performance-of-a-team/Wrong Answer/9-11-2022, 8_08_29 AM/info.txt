{"id":796723843,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1662863909,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/796723843/","is_pending":"Not Pending","title":"Maximum Performance of a Team","memory":"N/A","code":"class Solution {\n    public int maxPerformance(int n, int[] speed, int[] efficiency, int k) {\n        int[][] nn= new int[speed.length][2];\n        for(int i=0;i<speed.length;i++){\n            \n            nn[i][0]= efficiency[i];\n            nn[i][1]=speed[i];\n            \n        }\n        Arrays.sort(nn,(a,b) -> b[0] - a[0]);\n        PriorityQueue<Integer> pq= new PriorityQueue<>();\n        int sum=0;\n        int max=0;\n        for(int[] arr:nn){\n            sum+=arr[1];\n            pq.add(arr[1]);\n            if(pq.size()>k){\n                sum-=pq.poll();\n                    \n                    max=Math.max(max,sum*arr[0]);\n            }\n        }\n        \n        \n        \n        return max;\n        \n    }\n}","compare_result":"1100001000000100000010000000000000000000000000000000000","title_slug":"maximum-performance-of-a-team","has_notes":false}