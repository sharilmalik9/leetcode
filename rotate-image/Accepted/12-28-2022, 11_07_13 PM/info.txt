{"id":867067553,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1672249033,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/867067553/","is_pending":"Not Pending","title":"Rotate Image","memory":"42.4 MB","code":"class Solution {\n    public void rotate(int[][] matrix) {\n         List<Integer> res = spiralOrder(matrix);\n         if(matrix.length==0){\n             return;\n         }\n\n        int idx=0;\n        \n        int top = 0;\n        int bottom = matrix.length-1;\n        int left = 0;\n        int right = matrix[0].length-1;\n        \n        while(true){\n            for(int i = top; i <= bottom; i++) \n            {matrix[i][right]=res.get(idx);\n            idx++;\n            }\n            right--;\n         \n            if(left > right || top > bottom) break;\n            \n            for(int i = right; i >= left; i--) {\n            matrix[bottom][i]=res.get(idx);\n            idx++;\n            }\n            bottom--;\n          \n            if(left > right || top > bottom) break;\n            \n            for(int i = bottom; i >= top; i--) {\n            matrix[i][left]=res.get(idx);\n            idx++;\n            }\n            left++;\n          \n            if(left > right || top > bottom) break;\n            for(int i = left; i <= right; i++) {\n            matrix[top][i]=res.get(idx);\n            idx++;\n            }\n            top++;\n            if(left > right || top > bottom) break;\n        }\n     \n    }\n   \n    public List<Integer> spiralOrder(int[][] matrix) {\n        List<Integer> res = new ArrayList<Integer>();\n        if(matrix.length == 0 || matrix[0].length == 0) return res;\n        \n        int top = 0;\n        int bottom = matrix.length-1;\n        int left = 0;\n        int right = matrix[0].length-1;\n        \n        while(true){\n            for(int i = left; i <= right; i++) res.add(matrix[top][i]);\n            top++;\n            if(left > right || top > bottom) break;\n            \n            for(int i = top; i <= bottom; i++) res.add(matrix[i][right]);\n            right--;\n            if(left > right || top > bottom) break;\n            \n            for(int i = right; i >= left; i--) res.add(matrix[bottom][i]);\n            bottom--;\n            if(left > right || top > bottom) break;\n            \n            for(int i = bottom; i >= top; i--) res.add(matrix[i][left]);\n            left++;\n            if(left > right || top > bottom) break;\n        }\n        \n        return res;\n    }\n    \n\n\n}","compare_result":"111111111111111111111","title_slug":"rotate-image","has_notes":false}