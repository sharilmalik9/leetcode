{"id":781340302,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1661270304,"status":10,"status_display":"Accepted","runtime":"119 ms","url":"/submissions/detail/781340302/","is_pending":"Not Pending","title":"Path with Maximum Gold","memory":"41.7 MB","code":"class Solution {\n    int max = 0;\n    public int getMaximumGold(int[][] grid) {\n        int r = grid.length;\n        int c = grid[0].length;\n        int[][] visited = new int[r][c];\n        for(int i = 0; i < r; i++) {\n            for(int j = 0; j < c; j++) {\n                if(grid[i][j] != 0) {\n                    getMaximumGold(grid, i, j, 0, visited);\n                }\n            }\n        }\n        return max;\n    }\n\n    private void getMaximumGold(int[][] grid, int row, int col, int sum, int[][]visited) {\n        if(row < 0 || row >= grid.length || col >= grid[0].length || col < 0 || grid[row][col] == 0 || visited[row][col] == 1){\n            max = Math.max(max, sum);\n            return;\n        }\n\n        visited[row][col] = 1;\n        getMaximumGold(grid, row+1, col, sum + grid[row][col], visited);\n        getMaximumGold(grid, row-1, col, sum + grid[row][col], visited);\n        getMaximumGold(grid, row, col+1, sum + grid[row][col], visited);\n        getMaximumGold(grid, row, col-1, sum + grid[row][col], visited);\n        visited[row][col] = 0;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"path-with-maximum-gold","has_notes":false}