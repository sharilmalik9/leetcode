{"id":922229203,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1679808601,"status":10,"status_display":"Accepted","runtime":"81 ms","url":"/submissions/detail/922229203/","is_pending":"Not Pending","title":"Minimum Operations to Make All Array Elements Equal","memory":"62.5 MB","code":"class Solution {\n    public List<Long> minOperations(int[] nums, int[] queries) {\n        List<Long> res = new ArrayList<>();\n        int n = nums.length;\n        long[] record = new long[n];\n        Arrays.sort(nums);      \n        record[0] = nums[0];\n        for(int i = 1; i < n; i++){\n            record[i] = record[i-1] + nums[i];\n        }\n        \n        \n        for(int i = 0; i < queries.length; i++){\n            long cur = 0;\n            int tmp = search(nums, queries[i]);\n            if(tmp == -1)tmp = 0;\n            cur += Math.abs(record[tmp] - (long)queries[i] * (tmp+1));\n            cur += Math.abs(record[n-1] - record[tmp] - (long)queries[i] * (n-tmp-1)); \n            res.add(cur);\n        }\n        return res;\n    }\n    \n    public int search(int[] arr, int target){\n        int left = 0, right = arr.length - 1;\n        while (left <= right) {\n            int mid = left + (right-left) / 2;\n            \n            if (arr[mid] == target) {\n                return mid;\n            } else if (arr[mid] < target) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return right;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"minimum-operations-to-make-all-array-elements-equal","has_notes":false}