{"id":787394060,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1661884943,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/787394060/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"45.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> largestValues(TreeNode root) {\n       \n        Queue<TreeNode> que= new LinkedList<>();\n        List<Integer> ans= new ArrayList<>();\n         if(root==null){\n            return ans;\n        }\n        que.add(root);\n        while(que.size()!=0){\n            int size= que.size();\n            int max=Integer.MIN_VALUE;\n            while(size!=0){\n                TreeNode curr=que.poll();\n                if(curr.val>max){\n                    max=curr.val;\n                }\n                if(curr.left!=null){\n                    que.add(curr.left);\n                }\n                if(curr.right!=null){\n                    que.add(curr.right);\n                }\n                size--;\n                \n            }\n            ans.add(max);\n        }\n        return ans;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row","has_notes":false}