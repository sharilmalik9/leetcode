{"id":709694491,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1653817924,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/709694491/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"46.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root==null){\n            return null;\n        }\n        if(root.val==p.val|| root.val==q.val){\n            return root;\n        }\n        TreeNode left= lowestCommonAncestor(root.left,p,q);\n        TreeNode right= lowestCommonAncestor(root.right,p,q);\n        \n        if(left==null){\n            return right;\n        }\n        if(right==null){\n            return left;\n        }\n        return root;\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false}