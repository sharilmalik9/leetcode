{"id":759250433,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1659032573,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/759250433/","is_pending":"Not Pending","title":"Simplify Path","memory":"N/A","code":"class Solution {\n    public String simplifyPath(String path) {\n        StringBuilder sb= new StringBuilder();\n        Stack<Character> st= new Stack<>();\n        for(int i=0;i<path.length();i++){\n            char curr= path.charAt(i);\n            if(curr=='/'  && st.size()==0){\n                st.push(curr);\n            }\n            else if(curr-'a'>=0 && curr-'a'<=26){\n                st.push(curr);\n            }\n            else if(curr=='/'  && st.size()>0){\n                StringBuilder now= new StringBuilder();\n                while(st.size()>0){\n                    \n                    now.insert(0,st.pop());\n}\n                sb.append(now);\n                \n            }\n            else if(curr=='.' && path.charAt(i+1)=='.'){\n                while(st.size()>0 && st.peek()!='/'){\n                    st.pop();\n                }\n            }\n          \n            \n            \n        }\n        return sb.toString();\n        \n    }\n}","compare_result":"11100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"simplify-path","has_notes":false}