{"id":759252849,"lang":"java","lang_name":"Java","time":"11Â months","timestamp":1659032741,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/759252849/","is_pending":"Not Pending","title":"Simplify Path","memory":"43.7 MB","code":"class Solution {\n    public String simplifyPath(String path) {\n        StringBuilder canonicalPath = new StringBuilder();\n        \n        Stack<String> pathItems = new Stack<>();\n        String[] folders = path.split(\"/\");\n        \n        for(int i=0;i<folders.length;i++){\n                if(folders[i].equals(\".\") || folders[i].isEmpty()){\n                   continue;\n                }\n                \n                else if(folders[i].equals(\"..\") ){\n                    if(!pathItems.isEmpty()){\n                        pathItems.pop();\n                    }      \n                }else{\n                    pathItems.push(folders[i]);\n                }\n            }\n        \n        \n        for(String s:pathItems){\n            canonicalPath.append(\"/\");\n            canonicalPath.append(s);\n        }\n        \n        return canonicalPath.length() > 0 ? canonicalPath.toString() : \"/\";\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"simplify-path","has_notes":false}