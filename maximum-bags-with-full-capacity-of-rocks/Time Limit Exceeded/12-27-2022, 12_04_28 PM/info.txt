{"id":866183845,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1672122868,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/866183845/","is_pending":"Not Pending","title":"Maximum Bags With Full Capacity of Rocks","memory":"N/A","code":"class Solution {\n    public int maximumBags(int[] capacity, int[] rocks, int additionalRocks) {\n        return help(capacity,rocks,additionalRocks,0);\n        \n    }\n    public int help(int[] capacity,int[] rocks,int additionalRocks,int i){\n        if(i==rocks.length){\n            return 0;\n        }\n        \n        if(capacity[i]==rocks[i]){\n            return help(capacity,rocks,additionalRocks,i+1)+1;\n        }\n        int needed=capacity[i]-rocks[i];\n        if(needed>additionalRocks){\n            return help(capacity,rocks,additionalRocks,i+1);\n        }\n        return Math.max(help(capacity,rocks,additionalRocks,i+1),help(capacity,rocks,additionalRocks-(capacity[i]-rocks[i]),i+1)+1);\n\n    }\n}","compare_result":"1111111100000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-bags-with-full-capacity-of-rocks","has_notes":false}