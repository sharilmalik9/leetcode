{"id":866184375,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1672122929,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/866184375/","is_pending":"Not Pending","title":"Maximum Bags With Full Capacity of Rocks","memory":"50.8 MB","code":"class Solution {\n    public int maximumBags(int[] capacity, int[] rocks, int additionalRocks) {\n        List<Integer> list = new ArrayList<>();\n        for(int i=0; i<rocks.length; i++){\n            list.add(capacity[i]-rocks[i]);\n        }\n        Collections.sort(list);\n        int ans=0,count=0;\n        for(int a:list){\n            count += a;\n            if(count > additionalRocks) break;\n            ans++;\n        }\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-bags-with-full-capacity-of-rocks","has_notes":false}