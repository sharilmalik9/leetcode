{"id":887269943,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1674969766,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/887269943/","is_pending":"Not Pending","title":"Ones and Zeroes","memory":"N/A","code":"class Solution {\n    public int findMaxForm(String[] strs, int m, int n) {\n        return help(strs,0,m,n);\n    }\n    public int help(String[] strs,int idx,int m,int n ){\n        if(idx==strs.length){\n            return 0;\n        }\n        if(m==0 && n==0){\n            return 0;\n        }\n        int ones=0;\n        int zeros=0;\n        for(int i=0;i<strs[idx].length();i++){\n            if(strs[idx].charAt(i)=='0'){\n                zeros++;\n            }\n            else{\n                ones++;\n            }\n\n        }\n        int include=0;\n        if(m-zeros>=0 && n-ones>=0){\n            include=1+help(strs,idx+1,m-zeros,n-ones);\n\n\n        }\n        int dont=help(strs,idx+1,m,n);\n        return Math.max(include,dont);\n    }\n}","compare_result":"111111111111111111111100000000000000000000000000000000000000000000000000","title_slug":"ones-and-zeroes","has_notes":false}