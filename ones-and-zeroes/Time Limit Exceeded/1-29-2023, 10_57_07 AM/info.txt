{"id":887271838,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1674970027,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/887271838/","is_pending":"Not Pending","title":"Ones and Zeroes","memory":"N/A","code":"class Solution {\n    HashMap<Integer,Integer> one= new HashMap<>();\n    HashMap<Integer,Integer> zero=new HashMap<>();\n    public int findMaxForm(String[] strs, int m, int n) {\n\n        for(int i=0;i<strs.length;i++){\n            int cntone=0;\n            int cntzero=0;\n            for(int j=0;j<strs[i].length();j++){\n                if(strs[i].charAt(j)=='1'){\n                    cntone++;\n                }\n                else{\n                    cntzero++;\n                }\n            }\n            one.put(i,cntone);\n            zero.put(i,cntzero);\n            \n        }\n        return help(strs,0,m,n);\n    }\n    public int help(String[] strs,int idx,int m,int n ){\n        if(idx==strs.length){\n            return 0;\n        }\n        if(m==0 && n==0){\n            return 0;\n        }\n        int ones=one.get(idx);\n        int zeros=zero.get(idx);\n        \n        int include=0;\n        if(m-zeros>=0 && n-ones>=0){\n            include=1+help(strs,idx+1,m-zeros,n-ones);\n\n\n        }\n        int dont=help(strs,idx+1,m,n);\n        return Math.max(include,dont);\n    }\n}","compare_result":"111111111111111111110000000000000000000000000000000000000000000000000000","title_slug":"ones-and-zeroes","has_notes":false}