{"id":715131797,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1654451643,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/715131797/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"43.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n   // List<Integer> ans1= new ArrayList<Integer>();\n    public List<Integer> returnlevel(TreeNode root,int level,List<Integer> ans1){\n        if(root== null){\n            return null;\n        }\n       // List<Integer> ans1= new ArrayList<Integer>();\n        if(level==1){\n          //  System.out.println(root.val);\n            ans1.add(root.val);\n          //  System.out.println(ans1);\n            \n        }\n        returnlevel(root.left,level-1,ans1);\n        returnlevel(root.right,level-1,ans1);\n       \n        return ans1;\n    }\n    \n    public int height(TreeNode root){\n        if(root==null){\n            return 0;\n        }\n        return Math.max(height(root.left),height(root.right))+1;\n    }\n    public List<List<Integer>> levelOrder(TreeNode root) {\n        List<List<Integer>> ans= new ArrayList<>();\n       // System.out.println(returnlevel(root,3));\n       // System.out.println(returnlevel(root,2));\n      //  System.out.println(returnlevel(root,1));\n        \n         for(int i=1;i<height(root)+1;i++){\n             List<Integer> ans1=new ArrayList<Integer>();\n            // System.out.println(returnlevel(root,i,ans1));\n             ans.add(returnlevel(root,i,ans1));\n         }\n        return ans;\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false}