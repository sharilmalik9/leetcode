{"id":786172898,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1661765253,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/786172898/","is_pending":"Not Pending","title":"Arithmetic Subarrays","memory":"54.1 MB","code":"class Solution {\n    public List<Boolean> checkArithmeticSubarrays(int[] nums, int[] l, int[] r) {\n        List<Boolean> ans= new ArrayList<>();\n        for(int i=0;i<l.length;i++){\n            int start=l[i];\n            int end=r[i];\n            ans.add(check(nums,start,end));\n           // System.out.println(Arrays.toString(nums));\n        }\n        return ans;\n    }\n    public boolean check(int[] nums, int start,int end){\n        int[] arr= new int[end-start+1];\n        int index=0;\n        for(int i=start;i<=end;i++){\n            arr[index]=nums[i];\n            index++;\n        }\n      //   System.out.println(Arrays.toString(arr));\n       Arrays.sort(arr);\n    //   System.out.println(Arrays.toString(arr));\n        if(arr.length==0){\n            return true;\n        }\n        if(arr.length==1){\n            return true;\n        }\n        int difference=arr[1]-arr[0];\n        for(int i=1;i<arr.length-1;i++){\n            int currd=arr[i+1]-arr[i];\n            if(difference!=currd){\n                return false;\n            }\n            \n        }\n        \n        \n        \n        return true;\n        \n                }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-subarrays","has_notes":false}