{"id":754784175,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1658603075,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/754784175/","is_pending":"Not Pending","title":"Path Sum II","memory":"44.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n   public List<List<Integer>> pathSum(TreeNode root, int sum) {\n        List<List<Integer>> paths = new ArrayList<>();\n        helper(paths, new ArrayList<>(), root, 0, sum);\n        return paths;\n    }\n    \n    public void helper(List<List<Integer>> paths, List<Integer> path, TreeNode node, int sum, int target){\n        if(node == null) return;\n        path.add(node.val);\n        sum += node.val;\n        helper(paths, path, node.left, sum, target);\n        helper(paths, path, node.right, sum, target);\n        if(sum == target && node.left == null && node.right == null) paths.add(new ArrayList<>(path));\n        path.remove(path.size() - 1);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false}