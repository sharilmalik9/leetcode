{"id":825975081,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666192079,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/825975081/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"51.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nimport java.math.*;\nclass Solution {\n    List<ListNode> ans = new ArrayList<>();\n    public Solution(ListNode head) {\n        while(head!=null){\n            ans.add(head);\n            head = head.next;\n        }\n    }\n    \n    public int getRandom() {\n        return ans.get((new Random()).nextInt(ans.size())).val;\n    }\n}\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(head);\n * int param_1 = obj.getRandom();\n */","compare_result":"11111111","title_slug":"linked-list-random-node","has_notes":false}