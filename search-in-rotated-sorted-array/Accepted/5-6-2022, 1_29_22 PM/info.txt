{"id":694183019,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1651823962,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/694183019/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"41.6 MB","code":"class Solution {\n    public int search(int[] nums, int target) {\n       \n        int start = 0;\n        int end = nums.length - 1;\n\n        while(start <= end) {\n            int mid = (start + end)/2;\n\n            if(target == nums[mid]) {\n                return mid;\n            }\n\n            if(nums[start] <= nums[mid]) { // left array is sorted\n                if(target >= nums[start] && target < nums[mid]) { // target lies between start and mid index\n                    end = mid-1;\n                } else {\n                    start = mid+1;\n                }\n            } else { // right array is sorted\n                if(target > nums[mid] && target <= nums[end]) { // target lies between mid and end index\n                    start = mid+1;\n                } else {\n                    end = mid-1;\n                }\n            }\n        }\n\n        return -1;\n    \n\n\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false}