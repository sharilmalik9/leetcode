{"id":815480664,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1664943814,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/815480664/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"45.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\npublic TreeNode addOneRow(TreeNode root, int val, int depth) {\nif (depth == 1) {\nTreeNode t = new TreeNode(val);\nt.left = root;\nreturn t;\n}\n\n    helper(root, val, depth, 1);\n    return root;\n}\n\nprivate void helper(TreeNode root, int v, int d, int currLevel) {\n    if (currLevel == d-1) {\n        TreeNode t1 = new TreeNode(v);\n        TreeNode t2 = new TreeNode(v);\n        \n        t1.left = root.left;\n        t2.right = root.right;\n        root.left = t1;\n        root.right = t2;\n        \n        return;\n    }\n    \n    if (root.left != null) {\n        helper(root.left, v, d, currLevel + 1);\n    }\n    \n    if (root.right != null) {\n        helper(root.right, v, d, currLevel + 1);\n    }\n}\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"add-one-row-to-tree","has_notes":false}