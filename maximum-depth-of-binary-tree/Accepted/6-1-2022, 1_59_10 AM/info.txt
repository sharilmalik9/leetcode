{"id":711537775,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1654028950,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/711537775/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"43.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxDepth(TreeNode root) {\n                if(root==null){\n            return 0;\n        }\n        int left=maxDepth(root.left);\n        int right=maxDepth(root.right);\n        return Math.max(left,right)+1;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false}