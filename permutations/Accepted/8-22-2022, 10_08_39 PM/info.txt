{"id":780459657,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1661186319,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/780459657/","is_pending":"Not Pending","title":"Permutations","memory":"44.4 MB","code":"class Solution {\n    public void combo(List<List<Integer>> ans,int[] nums,int idx){\n        \n        if(idx>=nums.length){\n            List<Integer> ls= new ArrayList<>();\n            for(int i=0;i<nums.length;i++){\n                ls.add(nums[i]);\n            }\n            ans.add(ls);\n            return;\n            \n        }\n        for(int i=idx;i<nums.length;i++){\n            swap(nums,i,idx);\n            combo(ans,nums,idx+1);\n            swap(nums,i,idx);\n        }\n        \n        \n        \n        \n        \n        \n    }\n    public void swap(int[] nums,int i,int idx){\n        int curr= nums[i];\n        nums[i]=nums[idx];\n        nums[idx]=curr;\n    }\n    \n    public List<List<Integer>> permute(int[] nums) {\n        List<List<Integer>> ans = new ArrayList<>();\n        combo(ans,nums,0);\n        return ans ;\n        \n        \n        \n    }\n}","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false}