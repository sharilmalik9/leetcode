{"id":969563107,"lang":"java","lang_name":"Java","time":"2 weeks, 2 days","timestamp":1686571309,"status":10,"status_display":"Accepted","runtime":"47 ms","url":"/submissions/detail/969563107/","is_pending":"Not Pending","title":"Largest Merge Of Two Strings","memory":"44.3 MB","code":"class Solution {\n    public String largestMerge(String word1, String word2) {\n        int n1 = word1.length();\n        int n2 = word2.length();\n        int i = 0;\n        int j = 0;\n        StringBuilder sb = new StringBuilder();\n        while(i < n1 && j < n2){\n          if(word1.charAt(i) < word2.charAt(j)){\n            sb.append(word2.charAt(j));\n            j++;\n          }else if(word1.charAt(i) > word2.charAt(j)){\n            sb.append(word1.charAt(i));\n            i++;\n          }else{\n            if(word1.substring(i).compareTo(word2.substring(j)) > 0){\n              sb.append(word1.charAt(i));\n              i++;\n            }else{\n              sb.append(word2.charAt(j));\n              j++;\n            }\n          }\n        }\n        if(word1.substring(i).isEmpty()){\n          sb.append(word2.substring(j));\n        }else{\n          sb.append(word1.substring(i));\n        }\n        return sb.toString();\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-merge-of-two-strings","has_notes":false}