{"id":708869126,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1653727561,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/708869126/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"41.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode invertTree(TreeNode root) {\n        if(root==null){\n            return null;\n        }\n        TreeNode left=invertTree(root.left);\n        TreeNode right=invertTree(root.right);\n        root.left=right;\n        root.right=left;\n        return root;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false}