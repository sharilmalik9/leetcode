{"id":756634238,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1658779968,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/756634238/","is_pending":"Not Pending","title":"Binary Search Tree to Greater Sum Tree","memory":"42.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode bstToGst(TreeNode root) {\n                replace(root,true);\n    return root;\n    }\n    \n    ArrayList<Integer> inOrderList = new ArrayList<>();\n    \n    public void inOrder(TreeNode root){\n        if(root == null){\n            return;\n        }\n        \n        inOrder(root.left);\n        inOrderList.add(root.val);\n        inOrder(root.right);\n    }\n    \n    \n    public int sumGreater(TreeNode root){\n        int sum = 0;\n        for(int i = 0; i<inOrderList.size(); i++){\n            if(inOrderList.get(i)>=root.val){\n                sum+= inOrderList.get(i);\n            }\n        }\n    return sum;\n    }\n    public void replace(TreeNode root , boolean value)\n    {\n        if(root == null){\n            return;\n        }\n        if(value){\n            inOrder(root);\n        }\n        int temp = sumGreater(root);\n        // System.out.println(\"Temp = \" + temp);\n        // System.out.println(\"Temp = \" + inOrderList);\n        root.val = temp;\n        replace(root.left,false);\n        replace(root.right,false);\n    }\t\n}","compare_result":"1111111111111111111111111111","title_slug":"binary-search-tree-to-greater-sum-tree","has_notes":false}