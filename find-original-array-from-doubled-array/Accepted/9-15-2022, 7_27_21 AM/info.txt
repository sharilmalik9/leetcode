{"id":800077621,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1663207041,"status":10,"status_display":"Accepted","runtime":"259 ms","url":"/submissions/detail/800077621/","is_pending":"Not Pending","title":"Find Original Array From Doubled Array","memory":"146.4 MB","code":"class Solution {\n    public int[] findOriginalArray(int[] changed) {\n\t\t//if length of array is odd it can't be doubled array\n        if(changed.length%2==1)\n            return new int[0];\n        \n        int n = changed.length/2;\n        int[] result = new int[n];\n\t\t// sort the array because we want to check if double of element exists from smaller to greater\n        Arrays.sort(changed);\n        \n\t\t// HashMap because we want to keep track of considered element \n        HashMap<Integer,Integer> map = new HashMap<>();\n        for(int c : changed){\n            map.put(c,map.getOrDefault(c,0)+1);\n        }\n        \n        int index = 0;\n        for(int i : changed){\n            int doubled = i*2;\n\t\t\t// i=0 have the same doubled value so handled explicitly\n            if(i==0 && map.getOrDefault(i,0)>1){\n                result[index++] = i;\n                map.put(i,map.get(doubled)-2);\n            }\n\t\t\t// check if element and doubled both exists in remaining element\n            else if(i!=0 && map.get(i)>0 && map.getOrDefault(doubled,0)>0){\n                result[index++] = i;\n                map.put(doubled,map.get(doubled)-1);\n                map.put(i,map.get(i)-1);\n            }\n        }\n        \n\t\t// n is half the length of input array and if index is same then it is doubled array\n        if(index==n)\n            return result;\n        \n        return new int[0];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-original-array-from-doubled-array","has_notes":false}