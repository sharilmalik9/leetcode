{"id":794360779,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1662604261,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/794360779/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"42.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer> result = new ArrayList<Integer>();\n    public List<Integer> inorderTraversal(TreeNode root) {\n       \n        if(root==null){\n            return result;\n        }\n        \n      //  result.add(root.val);\n        inorderTraversal(root.left);\n        result.add(root.val);\n        inorderTraversal(root.right);\n        return result;\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false}