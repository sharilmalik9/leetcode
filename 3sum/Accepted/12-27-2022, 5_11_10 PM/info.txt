{"id":866312140,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1672141270,"status":10,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/866312140/","is_pending":"Not Pending","title":"3Sum","memory":"46.5 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        Arrays.sort(nums);\n        List<List<Integer>> ans= new ArrayList<>();\n        for(int i=0;i<nums.length;i++){\n            if(i>0 && nums[i]==nums[i-1]){\n                continue;\n            }\n            int sum=0-nums[i];\n            int start=i+1;\n            int end=nums.length-1;\n            while(start<end){\n                int currsum=nums[start]+nums[end];\n                if(currsum==sum){\n                    List<Integer> ls= new ArrayList<>();\n                    ls.add(nums[i]);\n                    ls.add(nums[start]);\n                    ls.add(nums[end]);\n                    ans.add(ls);\n                    start++;\n                    end--;\n                 while(start<end && nums[start]==nums[start-1]){\n                    start++;\n                }\n                while(start<end && nums[end]== nums[end+1]){\n                    end--;\n                }\n                }\n               \n                else if(currsum>sum){\n                    end--;\n                }\n                else{\n                    start++;\n                }\n            }\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false}