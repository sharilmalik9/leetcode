{"id":974233579,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1687111516,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/974233579/","is_pending":"Not Pending","title":"3Sum","memory":"50.4 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        Arrays.sort(nums);\n        List<List<Integer>> result = new ArrayList<>();\n        for(int i=0;i<nums.length && nums[i]<=0;i++){\n            if(i==0 || nums[i-1] != nums[i]){\n                solve(nums,i,result);\n            }\n        }\n        return result;\n    }\n    public static void solve(int[] nums,int i,List<List<Integer>> result){\n        int low=i+1;\n        int high=nums.length-1;\n        while(low<high){\n            int sum=nums[i]+nums[low]+nums[high];\n            if(sum<0){\n                low++;\n            }\n            else if(sum>0){\n                high--;\n            }\n            else{\n                result.add(Arrays.asList(nums[i],nums[low++],nums[high--]));\n                while(low<high && nums[low]==nums[low-1]){\n                    low++;\n                }\n            }\n        }\n    }\n}\n//time complexity:O(n^2)\n//space complexity:o(n)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false}