{"id":798403969,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1663033648,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/798403969/","is_pending":"Not Pending","title":"UTF-8 Validation","memory":"42.9 MB","code":"// dont even know the question \n\nclass Solution {\n    public boolean validUtf8(int[] data) {\n\t\t// Create precomputed arrays with the mask and prefixes.\n\t\t// Bitwise representation: [ [10000000,00000000],\n\t\t//                           [11100000,11000000],\n\t\t//                           [11110000,11100000],\n\t\t//                           [11111000,11110000]]\n        int[][] headers = new int[][]{{128,0},{224,192},{240,224},{248,240}};\n\t\t\n\t\t// Bitwise representation: [11000000,10000000]\n        int[] tail = new int[]{192,128};\n        \n        for(int i = 0; i < data.length; ++i){\n\t\t\t// Find which header matches\n            int num = -1;\n            for(int j = 0; j < 4; ++j){\n                if((data[i]&headers[j][0])==headers[j][1]){\n                    num=j;\n                    break;\n                }\n            }\n\t\t\t// No match or there isn't enough data left\n            if(num==-1 || i+num>=data.length)\n                return false;\n            \n\t\t\t// Check the remaining tail bytes\n            for(int j = 0; j < num; ++j){\n                if((data[++i]&tail[0])!=tail[1])\n                    return false;\n            }\n        }\n        \n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"utf-8-validation","has_notes":false}