{"id":790679676,"lang":"java","lang_name":"Java","time":"9 months, 4 weeks","timestamp":1662230032,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/790679676/","is_pending":"Not Pending","title":"N-Queens II","memory":"41.3 MB","code":"class Solution {\n    int cnt=0;\n    public int totalNQueens(int n) {\n        String[][] board= new String[n][n];\n        for(int i=0; i< n; i++){\n            for(int j=0; j< n; j++){\n                board[i][j] = \".\";\n            }\n        }\n        backTrack(n,0,board);\n        return cnt;\n        \n    }\n      public void backTrack(int n,int r,String[][] board){\n        if(r==n){\n            cnt++;\n            return;\n}\n        for(int i=0;i<n;i++){\n            if(check(board,r,i,n)){\n                board[r][i]=\"Q\";\n                backTrack(n,r+1,board);\n                board[r][i]=\".\";\n            }\n            \n}\n    }\n    public boolean check(String[][] board,int r,int c,int n ){\n        for(int i=0;i<r;i++){\n            if(board[i][c]==\"Q\"){\n                return false;\n            }\n        }\n        for(int i=r-1 ,j=c-1;i>=0 &&j>=0;i--,j--){\n            if(board[i][j]==\"Q\"){\n                return false;\n            }\n        }\n         for(int i=r-1,j=c+1; i>=0 && j<n; i--,j++){\n            if(board[i][j] == \"Q\"){\n                return false;\n            }\n        }\n        return true;\n}\n}","compare_result":"111111111","title_slug":"n-queens-ii","has_notes":false}