{"id":867870650,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1672374775,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/867870650/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"44.5 MB","code":"class Solution {\n    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {\n        List<List<Integer>> res = new LinkedList();\n        List<Integer> curr = new ArrayList();\n        curr.add(0);\n        dfs(0, curr, graph, graph.length - 1, res);\n        return res;\n    }\n    void dfs(int source, List<Integer> curr, int graph[][], int n, List<List<Integer>> res){\n        if(source == n) {\n            res.add(new ArrayList(curr));\n            return;\n        }\n        for(int a : graph[source]){\n            curr.add(a);\n            dfs(a, curr, graph, n, res);\n            curr.remove(curr.size()-1);\n        }\n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target","has_notes":false}