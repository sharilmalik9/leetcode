{"id":740238211,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1657128390,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/740238211/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"55.4 MB","code":"class Solution {\n    int target;\n    List<List<Integer>> ll=new ArrayList<List<Integer>>();\n    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {\n        target=graph.length-1;\n        for(int i=0;i<graph[0].length;i++)\n            dfs(graph[0][i],Arrays.asList(0),graph);\n        return ll;\n        \n    }\n     void dfs(int node, List l, int[][] graph){\n        if(node==target){\n            List<Integer> newList=new ArrayList<>(l);\n            newList.add(node);\n            ll.add(newList);\n            return;\n        }\n        for(int i=0;i<graph[node].length;i++){\n            List<Integer> newList=new ArrayList<>(l);\n            newList.add(node);\n            dfs(graph[node][i],newList,graph);\n        }\n    }\n    \n}","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target","has_notes":false}