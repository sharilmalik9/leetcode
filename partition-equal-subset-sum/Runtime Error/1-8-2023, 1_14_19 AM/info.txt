{"id":873557892,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1673120659,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/873557892/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"class Solution {\npublic:\n   bool helper(vector<int>& nums,int index,int target,vector<vector<int>>& dp){\n      \n        if(target==0){\n            dp[index][0]=1;\n            return true;\n        }\n        if(index==0){\n            if(target==nums[0]){\n                dp[0][nums[0]]=1;\n                return true;\n            }\n            else{\n                dp[0][nums[0]]=0;\n                return false;\n            }\n        }\n           if(dp[index][target]!=-1){\n            return dp[index][target];\n        }\n       \n\n        else{\n            bool take=false;\n            if(nums[index]<=target){\n            take=helper(nums,index-1,target-nums[index],dp);\n            }\n            bool nottake=helper(nums,index-1,target,dp);\n            if(take||nottake){\n                dp[index][target]=1;\n                return true;\n            }\n            else{\n                dp[index][target]=0;\n                return false;\n            }\n        }\n    }\n\n\n\n\n\n    bool canPartition(vector<int>& nums) {\n        int sum=0;\n        \n        for(int i=0;i<nums.size();i++){\n            sum+=nums[i];\n        }\n        if(sum%2==1){\n            return 0;\n        }\n        else{\n            int m=nums.size();\n            vector<vector<int>>dp(m,vector<int>(sum/2+1,-1));\n            return helper(nums,m-1,sum/2,dp);\n        }\n    }\n};","compare_result":"111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-equal-subset-sum","has_notes":false}