{"id":850940823,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1669601891,"status":10,"status_display":"Accepted","runtime":"277 ms","url":"/submissions/detail/850940823/","is_pending":"Not Pending","title":"Sliding Window Median","memory":"56.5 MB","code":"class Solution {\n   public double[] medianSlidingWindow(int[] nums, int k) {\n\tdouble[] result = new double[nums.length - k + 1];\n\tPriorityQueue<Integer> minHeap = new PriorityQueue<>();\n\tPriorityQueue<Integer> maxHeap = new PriorityQueue<>(Collections.reverseOrder());\n\n\tfor(int i=0; i<nums.length; i++){\n\t\tminHeap.add(nums[i]);\n\t\tmaxHeap.add(minHeap.poll());\n\t\tif(minHeap.size()<maxHeap.size()){\n\t\t\tminHeap.add(maxHeap.poll());\n\t\t}\n\n\t\tif(minHeap.size()+maxHeap.size() == k){\n\t\t\tdouble median;\n\t\t\tif(minHeap.size() == maxHeap.size()){\n\t\t\t\tmedian = ((long)minHeap.peek()+(long)maxHeap.peek())/2.0;\n\t\t\t}else{\n\t\t\t\tmedian = minHeap.peek();\n\t\t\t}\n\n\t\t\tint start = i-k+1;\n\t\t\tresult[start] = median;\n\t\t\tif(!minHeap.remove(nums[start])){\n\t\t\t\tmaxHeap.remove(nums[start]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n}","compare_result":"111111111111111111111111111111111111111111","title_slug":"sliding-window-median","has_notes":false}