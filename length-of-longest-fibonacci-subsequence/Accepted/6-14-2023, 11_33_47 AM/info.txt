{"id":970866567,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1686722627,"status":10,"status_display":"Accepted","runtime":"368 ms","url":"/submissions/detail/970866567/","is_pending":"Not Pending","title":"Length of Longest Fibonacci Subsequence","memory":"55.4 MB","code":"class Solution {\n    public int lenLongestFibSubseq(int[] arr) {\n        //dp[i][j] = dp[j][index of (Ni+Nj)] + 1 \n        int n= arr.length , max= 0;\n        Map<Integer,Integer> map = new HashMap();\n        for (int i=0;i<arr.length;i++) map.put(arr[i],i);\n        int dp[][] = new int[n][n];\n        for (int i=n-1;i>=1;i--){\n            for (int j=i-1;j>=0;j--){\n                dp[j][i] = 2;\n                if (map.containsKey(arr[i]+arr[j])){\n                    dp[j][i] = 1 + dp[i][map.get(arr[i]+arr[j])];\n                } \n                max = Math.max (max, dp[j][i]);\n            }\n        }\n        return (max<3)?0:max;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"length-of-longest-fibonacci-subsequence","has_notes":false}