{"id":812625209,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1664623080,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/812625209/","is_pending":"Not Pending","title":"Target Sum","memory":"N/A","code":"class Solution {\n\npublic int countOfSubsetSum(int []arr,int sum,int n){\n    int[][] t = new int[n+1][sum+1];\n    for(int i=0;i<sum+1;i++){\n        t[0][i]=0;\n    }\n    for(int i=0;i<n+1;i++){\n        t[i][0]=1;\n    }\n    for(int i=1;i<n+1;i++){\n        for(int j=0;j<sum+1;j++){\n            if(arr[i-1]<=j){\n                t[i][j] = t[i-1][j] + t[i-1][j-arr[i-1]];\n            }\n            else{\n                t[i][j]=t[i-1][j];\n            }\n        }\n    }\n    return t[n][sum];\n}\n\npublic int findTargetSumWays(int[] nums, int target) {\n    int sum=0;\n    int n=nums.length;\n    for(int i=0;i<n;i++){\n        sum+=nums[i];\n    }\n    if(target>sum){\n        return 0;\n    }\n    if((target+sum)%2!=0){\n        return 0;\n    }\n    sum = (target+sum)/2;\n    \n    return countOfSubsetSum(nums,sum,n);\n}\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100","title_slug":"target-sum","has_notes":false}