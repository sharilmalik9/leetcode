{"id":921719343,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1679730316,"status":10,"status_display":"Accepted","runtime":"711 ms","url":"/submissions/detail/921719343/","is_pending":"Not Pending","title":"Target Sum","memory":"42.5 MB","code":"class Solution {\n    int ans=0;\n    public int findTargetSumWays(int[] nums, int target) {\n        int sum=0;\n        for(int i=0;i<nums.length;i++){\n            sum+=nums[i];\n        }\n        int[][] dp= new int[nums.length+1][2*sum+1];\n        for(int i=0;i<dp.length;i++){\n            Arrays.fill(dp[i],-1);\n        }\n        rec(nums,target,0,0,dp,sum);\n        return ans;\n        \n    }\n    public void rec(int[] nums,int target,int i,int curr,int[][] dp,int sum){\n        if(curr==target && i==nums.length){\n            ans++;\n            return;\n        }\n        if(i>=nums.length){\n            return;\n        }\n        if(dp[i][curr+sum]!=-1){\n            return;\n        }\n        rec(nums,target,i+1,curr+nums[i],dp,sum);\n        rec(nums,target,i+1,curr-nums[i],dp,sum);\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"target-sum","has_notes":false}