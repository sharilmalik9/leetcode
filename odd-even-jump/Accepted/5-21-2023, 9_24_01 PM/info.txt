{"id":954586105,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1684684441,"status":10,"status_display":"Accepted","runtime":"94 ms","url":"/submissions/detail/954586105/","is_pending":"Not Pending","title":"Odd Even Jump","memory":"49.3 MB","code":"class Solution {\n    public int oddEvenJumps(int[] arr){\n        int n=arr.length;\n        TreeMap<Integer,Integer> map= new TreeMap<>();\n        int[] odd=new int[n];\n        int[] even=new int[n];\n        for(int i=n-1;i>=0;i--){\n           int no = arr[i];\n            Map.Entry<Integer, Integer> higher = map.higherEntry(no - 1);\n            odd[i] = -1;\n            if(higher != null) odd[i] = higher.getValue();\n            Map.Entry<Integer, Integer> lower = map.lowerEntry(no + 1);\n            even[i] = -1;\n            if(lower != null) even[i] = lower.getValue();\n            map.put(no, i);\n        }\n        boolean[] oddo=new boolean[n];\n        boolean[] eveno=new boolean[n];\n        System.out.println(Arrays.toString(odd));\n         System.out.println(Arrays.toString(even));\n        oddo[n-1]=true;\n        eveno[n-1]=true;\n        for(int i=n-2;i>=0;i--){\n            if(odd[i]!=-1){\n                oddo[i]=eveno[odd[i]];\n            }\n            if(even[i]!=-1){\n                eveno[i]=oddo[even[i]];\n\n            }\n        }\n        int ans=0;\n        for(boolean curr:oddo){\n            if(curr){\n                ans++;\n            }\n        }\n        return ans;\n    }\n    // public int[] findodd(int[] arr){\n    //     // grater than me \n    //     // and min amoung them \n    //     int[] ans=new int[arr.length];\n    //     Arrays.fill(ans,Integer.MAX_VALUE);\n    //     for(int i=0;i<arr.length-1;i++){\n    //         for(int j=i+1;j<arr.length;j++){\n    //             if(arr[i]<=arr[j]){\n    //                 if(ans[i]==Integer.MAX_VALUE){\n    //                     ans[i]=j;\n\n    //                 }\n    //                 else if(arr[ans[i]]>arr[j]){\n    //                     ans[i]=j;\n    //                 }\n                   \n    //             }\n    //         }\n    //     }\n    //     for(int i=0;i<arr.length;i++){\n    //         if(ans[i]==Integer.MAX_VALUE){\n    //             ans[i]=-1;\n    //         }\n    //     }\n    //     return ans;\n\n\n    // }\n    // public int[] findeven(int[] arr){\n    //     int[] ans= new int[arr.length];\n    //     Arrays.fill(ans,Integer.MIN_VALUE);\n    //      for(int i=0;i<arr.length-1;i++){\n    //         for(int j=i+1;j<arr.length;j++){\n    //             if(arr[i]>=arr[j]){\n    //                 if(ans[i]==Integer.MIN_VALUE){\n    //                     ans[i]=j;\n\n    //                 }\n    //               else if(arr[ans[i]]<arr[j]){\n    //                     ans[i]=j;\n    //                 }\n    //             }\n    //         }\n    //     }\n    //     for(int i=0;i<arr.length;i++){\n    //         if(ans[i]==Integer.MIN_VALUE){\n    //             ans[i]=-1;\n    //         }\n    //     }\n    //     return ans;\n\n    // }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-jump","has_notes":false}