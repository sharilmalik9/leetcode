{"id":810256431,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1664332850,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/810256431/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    int size;\n    int grp=0;\n    public ListNode reverseKGroup(ListNode head, int k) {\n         size=size(head);\n        return reverse(head,k);\n       \n        \n        \n    }\n    public ListNode reverse(ListNode head,int k){\n        if(head==null){\n            return null;\n        }\n        grp++;\n        ListNode next=null;\n        ListNode prev=null;\n        ListNode curr=head;\n        int cnt=0;\n        while(cnt<k && curr!=null){\n            next=curr.next;\n            curr.next=prev;\n            prev=curr;\n            curr=next;\n            cnt++;\n            \n            \n        }\n        if(next!=null && grp<=size/k){\n            head.next=reverse(next,k);\n        }\n        else if(next!=null && grp>size/k){\n            head.next=next;\n        }\n        return prev;\n        \n    } \n    public int size(ListNode head){\n        int cnt=0;\n        ListNode save=head;\n        while(save!=null){\n            cnt++;\n            save=save.next;\n            \n        }\n        return cnt;\n    }\n}","compare_result":"10111111111111111101111100111111111111110101001001100000000000","title_slug":"reverse-nodes-in-k-group","has_notes":false}