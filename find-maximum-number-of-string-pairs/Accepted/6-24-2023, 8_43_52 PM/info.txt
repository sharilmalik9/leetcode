{"id":978585423,"lang":"java","lang_name":"Java","time":"4 days, 4 hours","timestamp":1687619632,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/978585423/","is_pending":"Not Pending","title":"Find Maximum Number of String Pairs","memory":"41.1 MB","code":"class Solution {\n    public int maximumNumberOfStringPairs(String[] words) {\n        int ans=0;\n        for(int i=0;i<words.length;i++){\n            for(int j=i+1;j<words.length;j++){\n                if(check(words[i],words[j])){\n                    ans++;\n                }\n            }\n            \n        }\n        return ans;\n        \n    }\n    public boolean check(String one,String two){\n        if(one.length()!=two.length()){\n            return false;\n        }\n        int start=0;\n        int end=two.length()-1;\n        while(start<two.length()){\n            if(one.charAt(start)!=two.charAt(end)){\n                return false;\n            }\n            start++;\n            end--;\n        }\n        return true;\n    }\n}","compare_resulttitle_slug":"find-maximum-number-of-string-pairs","has_notes":false}