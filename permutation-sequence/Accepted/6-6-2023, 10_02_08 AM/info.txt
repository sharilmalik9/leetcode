{"id":964865027,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1686025928,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/964865027/","is_pending":"Not Pending","title":"Permutation Sequence","memory":"40 MB","code":"class Solution {\n    public String getPermutation(int n, int k) {\n        int[] fact = new int[]{1,1,2,6,24,120,720,5040,40320};\n        ArrayList<Integer> list = new ArrayList<>();\n        for(int i=1;i<=n;i++){\n            list.add(i);\n        }\n        return calc(fact,n,k-1,list,0)+\"\";\n    }\n    private int calc(int[] fact,int n,int k,ArrayList<Integer> list,int res){\n        if(n==0)\n           return res;\n        res=res*10+list.remove(k/fact[n-1]);\n        return calc(fact,n-1,k%fact[n-1],list,res);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-sequence","has_notes":false}