{"id":964852563,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1686024621,"status":10,"status_display":"Accepted","runtime":"1115 ms","url":"/submissions/detail/964852563/","is_pending":"Not Pending","title":"Permutation Sequence","memory":"43.6 MB","code":"class Solution {\n    int cnt ;\n    StringBuilder s;\n    boolean[] visited;\n    int n;\n    public String getPermutation(int n, int k) {\n        this.n = n;\n        cnt = k;\n        s = new StringBuilder();\n        visited = new boolean[n+1];\n        return f(0);\n    }\n    public String f(int idx){\n        if(idx == n){\n            cnt--;\n            if(cnt == 0){\n                return s.toString();\n            }\n            return \"\";\n        }\n        for(int i = 1; i<=n; i++){\n            if(!visited[i]){\n                visited[i] = true;\n                s.append(i+\"\");\n                String curr = f(idx+1);\n                s.delete(s.length()-1, s.length());\n                visited[i] = false;\n                if(curr.length()!=0){\n                    return curr;\n                }\n            }\n        }\n        return \"\";  \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-sequence","has_notes":false}