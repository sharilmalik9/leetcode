{"id":981723385,"lang":"java","lang_name":"Java","time":"3 hours, 19 minutes","timestamp":1687968826,"status":10,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/981723385/","is_pending":"Not Pending","title":"Super Egg Drop","memory":"45.4 MB","code":"class Solution {\n    Integer[][] dp;\n    public int superEggDrop(int k, int n){\n        dp=new Integer[k+1][n+1];\n        return rec(k,n);\n    }\n    public int rec(int eggs,int n){\n        if(n<=1){\n            return n;\n        }\n        if(eggs==1){\n            return n;\n        }\n        if(dp[eggs][n]!=null){\n            return dp[eggs][n];\n        }\n        int ans=Integer.MAX_VALUE;\n        int start=0;\n        int end=n;\n        while(start<=end){\n            int mid=(start+end)/2;\n            int lower=0;\n            int higher=0;\n            if(dp[eggs-1][mid-1]!=null){\n                lower=dp[eggs-1][mid-1];\n            }\n            else{\n                lower=rec(eggs-1,mid-1);\n                dp[eggs-1][mid-1]=lower;\n            }\n            if(dp[eggs][n-mid]!=null){\n                higher=dp[eggs][n-mid];\n            }\n            else{\n                higher=rec(eggs,n-mid);\n                dp[eggs][n-mid]=higher;\n\n            }\n            if(lower>higher){\n                end=mid-1;\n        }\n            else{\n                start=mid+1;\n            }\n            int temp=Math.max(lower,higher);\n            ans=Math.min(ans,temp);\n        }\n        return dp[eggs][n]=ans+1;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"super-egg-drop","has_notes":false}