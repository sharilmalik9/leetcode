{"id":794148357,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1662578937,"status":10,"status_display":"Accepted","runtime":"236 ms","url":"/submissions/detail/794148357/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"124.9 MB","code":"class MedianFinder {\n\n    PriorityQueue<Integer> small;\n    PriorityQueue<Integer> large;\n    public MedianFinder() {\n        large= new PriorityQueue<>();\n        small= new PriorityQueue<>((a,b)->b-a);\n        \n    }\n    \n    public void addNum(int num) {\n        small.add(num);\n        large.add(small.poll());\n        if(small.size()<large.size()){\n            small.add(large.poll());\n        }\n        \n    }\n    \n    public double findMedian() {\n        if(small.size()==large.size()){\n            return (small.peek()+large.peek())/2.0;\n        }\n        return small.peek();\n        \n    }\n}\n\n/**\n * Your MedianFinder object will be instantiated and called as such:\n * MedianFinder obj = new MedianFinder();\n * obj.addNum(num);\n * double param_2 = obj.findMedian();\n */","compare_result":"111111111111111111111","title_slug":"find-median-from-data-stream","has_notes":false}