{"id":794143585,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1662578504,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/794143585/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"N/A","code":"class MedianFinder {\nPriorityQueue<Integer> small;\n    PriorityQueue<Integer> large;\n    public MedianFinder() {\n        large= new PriorityQueue<>();\n        small= new PriorityQueue<>((a,b)->b-a);\n        \n    }\n    \n    public void addNum(int num) {\n        if(small.size()==0){\n            small.add(num);\n            return;\n        }\n        else if(large.size()==0){\n            large.add(num);\n            return;\n            \n        }\n        if(small.size()!=0 && large.size()!=0){\n\n        int prev=small.peek();\n        int upcoming=large.peek();\n        if(num<prev){\n            small.add(num);\n        }\n        else{\n            large.add(num);\n        }\n        }\n        if(small.size()>large.size()){\n            large.add(small.poll());\n        }\n        else if (large.size()-small.size()>1){\n            small.add(large.poll());\n        }\n        \n    }\n    \n    public double findMedian() {\n        double ans=0;\n        if(small.size()==large.size()){\n            return (small.peek()+large.peek())/2.0;\n        }\n        return large.peek();\n        \n        \n       \n        \n    }\n}\n\n/**\n * Your MedianFinder object will be instantiated and called as such:\n * MedianFinder obj = new MedianFinder();\n * obj.addNum(num);\n * double param_2 = obj.findMedian();\n */","compare_result":"100000000000000000000","title_slug":"find-median-from-data-stream","has_notes":false}