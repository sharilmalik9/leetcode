// https://leetcode.com/problems/minimize-malware-spread

class Solution {
    TreeSet<Integer> malwares = new TreeSet<>();
    public int minMalwareSpread(int[][] graph, int[] initial) {
        int ans = graph.length+1,maxSaves = 0;
        for(int mal:initial) malwares.add(mal);

        for(int mal : initial){
            malwares.remove(mal);
            int totalSaves = dfs(mal,graph,new HashSet<>());
            malwares.add(mal);
            if(maxSaves<totalSaves){
                maxSaves = totalSaves;
                ans = mal;
            }
            else if(maxSaves == totalSaves) ans = Math.min(ans,mal);
        }

        return ans == graph.length +1 ? malwares.first() : ans;
    }

    int dfs(int node,int[][] arr,Set<Integer> seen) {
        if(seen.contains(node)) return 0;
        seen.add(node);
        if(malwares.contains(node)){
            return Integer.MIN_VALUE;
        }
        
        int saveCount = 1;
        for(int next=0;next<arr.length;next++){
            if(next == node) continue;
            
            if(arr[node][next] == 1){
                int x = dfs(next,arr,seen);
                if(x == Integer.MIN_VALUE){
                    return x;
                }
                saveCount+= x;
            }
        }
        return saveCount;
    }
}