{"id":814755384,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1664860378,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/814755384/","is_pending":"Not Pending","title":"Count Submatrices With All Ones","memory":"N/A","code":"class Solution {\n    public int numSubmat(int[][] mat) {\n        return maximalRectangle(mat);\n        \n        \n    }\n    public int maximalRectangle(int[][] matrix) {\n        int[] dp= new int[matrix[0].length];\n        int ans=0;\n        for(int i=0;i<matrix.length;i++){\n            for(int j=0;j<matrix[0].length;j++){\n                if(matrix[i][j]==1){\n                    dp[j]=dp[j]+1;\n                }\n                else{\n                    dp[j]=0;\n                }\n            }\n            ans+=largestRectangleArea(dp);\n            \n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        return ans;\n        \n        \n    }\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n     public int largestRectangleArea(int[] heights) {\n    int[] rb = new int[heights.length];\n    Stack<Integer> st = new Stack<>();\n        \n    st.push(heights.length-1);\n    rb[heights.length-1] = heights.length;\n        \n    for(int i=heights.length-2;i>=0;i--){\n       while(!st.isEmpty() && heights[i]<=heights[st.peek()]){\n          st.pop();\n       }\n       rb[i]= st.isEmpty()?heights.length:st.peek();\n       st.push(i);\n    }\n\n    int[] lb = new int[heights.length];\n    st = new Stack<>();\n        \n    st.push(0);\n    lb[0] = -1;\n        \n    for(int i=1;i<heights.length;i++){\n       while(!st.isEmpty() && heights[i]<=heights[st.peek()]){\n          st.pop();\n       }\n       lb[i]= st.isEmpty()?-1:st.peek();\n       st.push(i);\n    }\n        \n    int maxArea = 0;\n        \n    for(int i=0;i<heights.length;i++){\n       int width = rb[i] - lb[i] -1;\n       int area = width*heights[i];\n       maxArea+=area;\n    }\n        return maxArea;\n  }\n}","compare_result":"1001111001000011000000000000000000000000000000000000000000000000000000000","title_slug":"count-submatrices-with-all-ones","has_notes":false}