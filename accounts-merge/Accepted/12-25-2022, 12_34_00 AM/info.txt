{"id":864913464,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1671908640,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/864913464/","is_pending":"Not Pending","title":"Accounts Merge","memory":"47.8 MB","code":"class Solution {\n    public List<List<String>> accountsMerge(List<List<String>> accounts) {\n        List<List<String>> result = new ArrayList<>();\n        if (accounts == null || accounts.size() == 0) {\n            return result;\n        }\n        \n        int[] parent = new int[accounts.size()];\n        for (int i=0;i<accounts.size(); i++) {\n            parent[i] = i; \n        }\n        \n        // union find\n        Map<String, Integer> emailToIdxMap = new HashMap<>();\n        for (int i=0; i<accounts.size(); i++) {\n            List<String> account = accounts.get(i);\n            for (int j=1; j<account.size(); j++) {\n                String email = account.get(j);\n                if (emailToIdxMap.containsKey(email)) {\n                    int givenIdx = emailToIdxMap.get(email);\n                    int r1 = find(givenIdx, parent);\n                    int r2 = find(i, parent);\n                    parent[r2] = r1;\n                } else {\n                    emailToIdxMap.put(email, i);\n                }\n            }\n        }\n        \n        // merge accounts   \n        Map<Integer, Set<String>> idxToEmailMap = new HashMap<>();\n        for (int i=0;i <accounts.size(); i++) {\n            for (int j=1; j<accounts.get(i).size(); j++) {\n                idxToEmailMap.putIfAbsent(find(i, parent), new TreeSet<>());\n                idxToEmailMap.get(find(i, parent)).add(accounts.get(i).get(j));\n            }\n        }\n        \n        // convert into required output format\n        for (Map.Entry<Integer, Set<String>> entry : idxToEmailMap.entrySet()) {\n            List<String> currentAccount = new ArrayList<>();\n            currentAccount.add(accounts.get(entry.getKey()).get(0));\n            for (String email : entry.getValue()) {\n                currentAccount.add(email);\n            }\n            result.add(currentAccount);\n        }\n        return result;\n    }\n    \n    private int find(int i, int[] parent) {\n        if (parent[i] != i) {\n            return find(parent[i], parent);\n        }\n        return parent[i];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"accounts-merge","has_notes":false}