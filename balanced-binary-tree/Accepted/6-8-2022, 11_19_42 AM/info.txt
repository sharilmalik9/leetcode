{"id":717087090,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1654667382,"status":10,"status_display":"Accepted","runtime":"54 ms","url":"/submissions/detail/717087090/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"44.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n     public int height(TreeNode nn){\n        if(nn==null){\n            return -1;\n        }\n        int left=height(nn.left);\n        int right=height(nn.right);\n        return Math.max(left,right)+1;\n    }\n    \n    public boolean isBalanced(TreeNode root) {\n        if(root==null){\n            return true;\n        }\n       boolean left=isBalanced(root.left);\n        boolean right=isBalanced(root.right);\n       boolean curr=Math.abs(height(root.left)-height(root.right))<=1;\n           return left&&right&&curr;\n    \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false}