{"id":789468008,"lang":"java","lang_name":"Java","time":"9 months, 4 weeks","timestamp":1662104536,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/789468008/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"47.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Double> averageOfLevels(TreeNode root) {\n        Queue<TreeNode> que= new LinkedList<>();\n        List<Double> ans= new ArrayList<>();\n        que.add(root);\n        que.add(null);\n        Double sum=0.0;\n        int cnt = 0;\n        while(que.size()!=0){\n                TreeNode curr=que.poll();\n            if(curr == null){\n                ans.add(sum/cnt);\n                if(que.isEmpty()){\n                    break;\n                }\n                que.add(null);\n                cnt=0;\n                sum = 0D;\n                curr = que.poll();\n            }\n            \n                sum+=curr.val;\n                cnt++;\n                \n                if(curr.left!=null){\n                    que.add(curr.left);\n                }\n                if(curr.right!=null){\n                    que.add(curr.right);\n                }\n        }\n        return ans;\n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"average-of-levels-in-binary-tree","has_notes":false}