{"id":885779665,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1674752437,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/885779665/","is_pending":"Not Pending","title":"Longest Turbulent Subarray","memory":"N/A","code":"class Solution {\n    public int maxTurbulenceSize(int[] arr) {\n        boolean curr=false;\n        boolean next=false;\n        int ans=0;\n      \n        int start=0;\n        int end=2;\n\n        if(arr.length==1){\n            return 1;\n        }\n        if(arr.length==2){\n            return 2;\n        }\n        if(arr[0]>arr[1]){\n            curr=true;\n        }\n      \n\n\n        while(end<arr.length){\n            if(arr[end-1]>arr[end]){\n                next=true;\n            }\n            else{\n                next=false;\n            }\n            if(curr==next){\n                ans=Math.max(ans,end-start);\n                start=end-1;\n               \n                \n            }\n            end++;\n            curr=next;\n\n\n        }\n        return ans;\n\n     \n    }\n}","compare_result":"1110010101111011010101111011111011111111111111111111111111101111111111111111111111111111110","title_slug":"longest-turbulent-subarray","has_notes":false}