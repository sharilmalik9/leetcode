{"id":885788772,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1674753359,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/885788772/","is_pending":"Not Pending","title":"Longest Turbulent Subarray","memory":"67.1 MB","code":"class Solution {\n    public int maxTurbulenceSize(int[] arr) {\n        boolean curr=false;\n        boolean next=false;\n        int ans=0;\n      \n        int start=0;\n        int end=2;\n\n        if(arr.length==1){\n            return 1;\n        }\n        if(arr.length==2){\n            if(arr[0]==arr[1]){\n                return 1;\n            }\n            return 2;\n        }\n        if(arr[0]>arr[1]){\n            \n            curr=true;\n        }\n        if(arr[0]==arr[1]){\n            start=1;\n        }\n      \n\n\n        while(end<arr.length){\n            if(arr[end-1]>arr[end]){\n                next=true;\n            }\n            else if(arr[end-1]<arr[end]){\n                next=false;\n            }\n            if(curr==next){\n                ans=Math.max(ans,end-start);\n                 if(arr[end-1]==arr[end]){\n                     start=end;\n                    \n                }\n                else{\n                    start=end-1; \n                }\n                \n               \n                \n            }\n            end++;\n            curr=next;\n\n\n        }\n       \n             ans=Math.max(ans,end-start);\n\n      \n         \n         \n        return ans;\n\n     \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-turbulent-subarray","has_notes":false}