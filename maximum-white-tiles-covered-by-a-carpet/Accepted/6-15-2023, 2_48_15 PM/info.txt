{"id":971763927,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1686820695,"status":10,"status_display":"Accepted","runtime":"73 ms","url":"/submissions/detail/971763927/","is_pending":"Not Pending","title":"Maximum White Tiles Covered by a Carpet","memory":"66.2 MB","code":"class Solution {\n    public int maximumWhiteTiles(int[][] tiles, int carpetLen) {\n        Arrays.sort(tiles,(a,b)->a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]);\n        int sum=0;\n        int ans=0;\n        Queue<int[]> que=new LinkedList<>();\n        for(int i=0;i<tiles.length;i++){\n            int[] curr=tiles[i];\n            sum+=curr[1]-curr[0]+1;\n            que.add(curr);\n            while(que.size()!=0 && que.peek()[1]<=curr[1]-carpetLen){\n                int[] tileremoved=que.poll();\n                sum=sum-(tileremoved[1]-tileremoved[0]+1);\n            }\n            int covertillhere=sum-Math.max(0,curr[1]-carpetLen-que.peek()[0]+1);\n            ans=Math.max(ans,covertillhere);\n\n        }\n        return ans;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"maximum-white-tiles-covered-by-a-carpet","has_notes":false}