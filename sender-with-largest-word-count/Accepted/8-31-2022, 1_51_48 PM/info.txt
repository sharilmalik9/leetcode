{"id":787837868,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1661934108,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/787837868/","is_pending":"Not Pending","title":"Sender With Largest Word Count","memory":"72.9 MB","code":"class Solution {\n    public String largestWordCount(String[] messages, String[] senders) {\n        HashMap<String,Integer> hp= new HashMap<>();\n        int max=Integer.MIN_VALUE;\n        String maxstr=\"\";\n        for(int i=0;i<senders.length;i++){\n            int cnt=cntWords(messages[i]);\n            hp.put(senders[i],hp.getOrDefault(senders[i],0)+cnt);\n           if(hp.get(senders[i])>max){\n               max=hp.get(senders[i]);\n               maxstr=senders[i];\n           } \n            else if(hp.get(senders[i])==max){\n                if(maxstr.compareTo(senders[i])<0){\n                    maxstr=senders[i];\n}\n            }\n       }\n        return maxstr;\n        \n        \n    }\n    public int cntWords(String message){\n        int cnt=1;\n        for(int i=0;i<message.length();i++){\n            if(message.charAt(i)==' '){\n                cnt++;\n                }\n          }\n        return cnt;\n      }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sender-with-largest-word-count","has_notes":false}