{"id":816373568,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1665046759,"status":10,"status_display":"Accepted","runtime":"635 ms","url":"/submissions/detail/816373568/","is_pending":"Not Pending","title":"Maximal Square","memory":"54.1 MB","code":"class Solution {\n    public int maximalSquare(char[][] matrix) {\n        int m=matrix.length;\n        int n = matrix[0].length;\n        int[][] dp= new int[m][n];\n        for(int i=0;i<m;i++){\n           dp[i][0]=matrix[i][0]-'0';\n        }\n        for(int i=0;i<n;i++){\n          dp[0][i]=matrix[0][i]-'0';\n        }\n        for(int i=1;i<m;i++){\n            for(int j=1;j<n;j++){\n                if(matrix[i][j]-'0'==0){\n                    dp[i][j]=0;\n                }\n                else{\n                    dp[i][j]=1+Math.min(dp[i][j-1],Math.min(dp[i-1][j-1],dp[i-1][j]));\n                }\n            }\n        }\n        int ans=0;\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n               System.out.print(dp[i][j]);\n               ans= Math.max(dp[i][j],ans);\n            }\n             System.out.println();\n        }\n      //  System.out.println();\n        \n        return ans*ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square","has_notes":false}