{"id":825566115,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666141467,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/825566115/","is_pending":"Not Pending","title":"Top K Frequent Words","memory":"44.8 MB","code":"class Solution {\n    static class Pair implements Comparable<Pair>{\n        String word;\n        int f;\n        public Pair(String word,int f){\n            this.word=word;\n            this.f=f;\n        }\n        public int compareTo(Pair o){\n            if(o.f==this.f)return (this.word).compareTo(o.word);\n            return o.f-this.f;\n        }\n    }\n    public List<String> topKFrequent(String[] words, int k) {\n        HashMap<String,Integer> map=new HashMap<>();\n        \n        for(String word:words){\n            if(map.containsKey(word))map.put(word,map.get(word)+1);\n            else map.put(word,1);\n        }\n        \n        List<Pair> l=new ArrayList<>();\n        for(String key:map.keySet()){\n            l.add(new Pair(key,map.get(key)));\n        }\n\t\t\n        Collections.sort(l);\n\t\t\n        List<String> ans=new ArrayList<>();\n        for(int i=0;i<k;i++)ans.add(l.get(i).word);\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"top-k-frequent-words","has_notes":false}