{"id":958404574,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1685201798,"status":10,"status_display":"Accepted","runtime":"277 ms","url":"/submissions/detail/958404574/","is_pending":"Not Pending","title":"Extra Characters in a String","memory":"44.5 MB","code":"class Solution {\n    HashSet<String> hs ;\n    HashMap<Pair<Integer, String>, Integer> dp;\n    String s;\n    public int minExtraChar(String s, String[] dictionary) {\n        this.s=s;\n        hs = new HashSet<>();\n         dp = new HashMap<>();\n        for(String i: dictionary) hs.add(i);\n        return rec(0,\"\");\n    }\n    \n    public int rec(int i, String curr){\n        if(i >= s.length()) {\n                return curr.length();\n        }\n        if(dp.containsKey(new Pair<Integer, String>(i, curr))) {\n            return dp.get(new Pair<Integer, String>(i, curr));\n        }\n         int ans2 = 0;\n        int ans = 0;\n        if(!hs.contains(curr + s.charAt(i))){\n            ans2 += 1+ curr.length();\n            ans2 += rec(i+1, \"\");\n           \n        }else{\n            \n            ans2 = rec(i+1, \"\");\n        }\n        ans = rec(i+1, curr + s.charAt(i));\n       \n        ans = Math.min(ans,ans2);\n        dp.put(new Pair<Integer, String>(i, curr), ans);\n        return ans;\n    }\n    \n}","compare_resulttitle_slug":"extra-characters-in-a-string","has_notes":false}