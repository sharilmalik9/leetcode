{"id":925962953,"lang":"java","lang_name":"Java","time":"2 months, 4 weeks","timestamp":1680360352,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/925962953/","is_pending":"Not Pending","title":"Find the Substring With Maximum Cost","memory":"43.5 MB","code":"class Solution {\n    public int maximumCostSubstring(String s, String chars, int[] vals) {\n        HashMap<Character,Integer> hm= new HashMap<>();\n        for(int i=0;i<chars.length();i++){\n            hm.put(chars.charAt(i),vals[i]);\n        }\n        int[] nums= new int[s.length()];\n        for(int i=0;i<s.length();i++){\n            if(hm.containsKey(s.charAt(i))){\n                nums[i]=hm.get(s.charAt(i));\n                continue;\n            }\n            nums[i]=s.charAt(i)-'a'+1;\n            \n            \n        }\n        int curval=nums[0];\n        int maxval=nums[0];\n        for(int i=1;i<nums.length;i++){\n            if(curval>0){\n                curval=curval+nums[i];\n            }\n            else{\n                curval=nums[i];\n            }\n            maxval=Math.max(curval,maxval);\n        }\n        if(maxval<0){\n            return 0;\n        }\n        return maxval;\n        \n        \n    }\n}","compare_resulttitle_slug":"find-the-substring-with-maximum-cost","has_notes":false}