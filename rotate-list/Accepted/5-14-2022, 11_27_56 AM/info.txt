{"id":699087978,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1652507876,"status":10,"status_display":"Accepted","runtime":"432 ms","url":"/submissions/detail/699087978/","is_pending":"Not Pending","title":"Rotate List","memory":"43 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode rotate(ListNode head, int k,int count){\n         \n        \n        if(k==count){\n           return head;\n            \n            \n        }\n        if(k==0){\n            return head;\n        }\n        ListNode curr=head;\n        ListNode prev=head;\n        ListNode secondlast=head;\n       for(int i=1;i<count-k;i++){\n           prev=prev.next;\n       }\n    secondlast=prev.next;\n        while(curr.next!=null){\n            curr=curr.next;\n        }\n        prev.next=null;\n        curr.next=head;\n        return secondlast;\n        \n        \n    }\n    \n    public ListNode rotateRight(ListNode head, int k) {\n        if(head==null){\n            return null;\n            \n        }\n        if(head.next==null){\n            return head;\n        }\n        \n        \n        int count =0;\n        if(k==0){\n            return head;\n        }\n        ListNode nn= head;\n        while(nn!=null){\n            count++;\n            nn=nn.next;\n        }\n        ListNode newhead=head;\n        if(k==count){\n            return head;\n        }\n        if(k<count){\n            return rotate(head,k,count);\n        }\n        int i= k-count;\n        while(i>count){\n            i=i-count;\n        }\n        \n        return rotate(head,i,count);\n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false}