{"id":811043319,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1664420595,"status":10,"status_display":"Accepted","runtime":"197 ms","url":"/submissions/detail/811043319/","is_pending":"Not Pending","title":"Find K Closest Elements","memory":"44.9 MB","code":"class Solution {\n    public List<Integer> findClosestElements(int[] arr, int k, int x) {\n        // in this question we need to find k closest element\n        //therefore we will use hashmap and priority queue in this question\n        HashMap<Integer,Integer> hm = new HashMap<>();\n        for (int i = 0; i < arr.length; i++)\n        {\n            hm.put(arr[i], Math.abs(x - arr[i]));\n        }\n        PriorityQueue<Integer> ab = new PriorityQueue<>((a,b) -> hm.get(a) == hm.get(b) ? (a - b) : (hm.get(a) - hm.get(b)));\n         \n        List<Integer> list = new ArrayList<>();\n        for (int i = 0; i < arr.length; i++)\n        {\n            ab.add(arr[i]);\n        }\n        while (!ab.isEmpty() && k != 0)\n        {\n            list.add(ab.remove());\n            k--;\n        }\n        Collections.sort(list);\n        return list;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-k-closest-elements","has_notes":false}