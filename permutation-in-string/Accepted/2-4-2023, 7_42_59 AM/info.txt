{"id":891012016,"lang":"java","lang_name":"Java","time":"4Â months, 3Â weeks","timestamp":1675476779,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/891012016/","is_pending":"Not Pending","title":"Permutation in String","memory":"41.9 MB","code":"class Solution {\n       public boolean checkInclusion(String s1, String s2) {\n        if (s1.length() > s2.length())\n            return false;\n        int[] s1count = new int[26];\n        int[] s2count = new int[26];\n        int k = s1.length();\n        for(int i = 0;i<k;i++){\n            s1count[s1.charAt(i) - 'a']++;\n            s2count[s2.charAt(i) - 'a']++;\n        }\n        if(matches(s1count,s2count)) return true;\n        for(int i = k;i<s2.length();i++){\n            s2count[s2.charAt(i)- 'a']++;\n            s2count[s2.charAt(i-k) - 'a']--;\n            if(matches(s1count,s2count)) return true;\n        }\n        return matches(s1count, s2count);\n    }\n    \n     public boolean matches(int[] s1count, int[] s2count) {\n        for (int i = 0; i < 26; i++) {\n            if (s1count[i] != s2count[i])\n                return false;\n        }\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-in-string","has_notes":false}