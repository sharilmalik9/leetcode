{"id":974661468,"lang":"java","lang_name":"Java","time":"1 week, 2 days","timestamp":1687169386,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/974661468/","is_pending":"Not Pending","title":"Move Pieces to Obtain a String","memory":"44.6 MB","code":"class Solution {\n    public boolean canChange(String start, String target) {\n        int ptr1=0;\n        int ptr2=0;\n        int n = target.length();\n\n        while(ptr1 <= n && ptr2 <= n){\n            while(ptr1 < n && start.charAt(ptr1) == '_') ptr1++;\n            while(ptr2 < n && target.charAt(ptr2) == '_') ptr2++;\n\n            if(ptr1 == n ||ptr2 == n){\n                return ptr1 == n && ptr2 == n;\n            }\n\n            if(target.charAt(ptr2) != start.charAt(ptr1)) return false;\n\n            if(start.charAt(ptr1) == 'L'){\n                if(ptr2 > ptr1) return false;\n\n            }\n\n            if(start.charAt(ptr1) == 'R'){\n                if(ptr2 < ptr1) return false;\n            }\n            ptr1++;\n            ptr2++;\n        }\n\n        return ptr1 == n && ptr2 == n;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"move-pieces-to-obtain-a-string","has_notes":false}