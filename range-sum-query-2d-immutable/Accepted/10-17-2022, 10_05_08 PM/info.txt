{"id":824554090,"lang":"java","lang_name":"Java","time":"8 months, 2 weeks","timestamp":1666024508,"status":10,"status_display":"Accepted","runtime":"258 ms","url":"/submissions/detail/824554090/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"131.1 MB","code":"class NumMatrix {\n    int matrix[][];\n    public NumMatrix(int[][] matrix) {\n        \n        for(int i = 0; i < matrix.length; i++)\n        {\n            int sum = 0;\n            for(int j = 0; j < matrix[i].length; j++)\n            {\n                sum = sum + matrix[i][j];\n                matrix[i][j] = sum;\n            }\n        }\n        \n        for(int j = 0; j < matrix[0].length; j++)\n        {\n            int sum = 0;\n            for(int i = 0; i < matrix.length; i++)\n            {\n                sum = sum + matrix[i][j];\n                matrix[i][j] = sum;\n            }\n        }\n                \n        this.matrix = matrix;\n        \n    }\n    \n    public int sumRegion(int row1, int col1, int row2, int col2) {\n         \n        int ans = matrix[row2][col2];\n        if(row1 - 1 >= 0)\n        {\n            ans = ans - matrix[row1 - 1][col2];\n        }\n        if(col1 - 1 >= 0)\n        {\n            ans = ans - matrix[row2][col1 - 1];\n        }\n        if(row1 - 1 >= 0 && col1 - 1 >= 0)\n        {\n            ans = ans + matrix[row1 - 1][col1 -1];\n        }\n        return ans;\n    }\n}","compare_result":"1111111111111111111111","title_slug":"range-sum-query-2d-immutable","has_notes":false}