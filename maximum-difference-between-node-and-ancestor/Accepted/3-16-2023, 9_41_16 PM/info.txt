{"id":916364523,"lang":"java","lang_name":"Java","time":"3 months, 2 weeks","timestamp":1678983076,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/916364523/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"42.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\nint ans=-1;\n    public int maxAncestorDiff(TreeNode root) {\n     \n        if(root==null){\n            return 0;\n        }\n        help(root,-1,Integer.MAX_VALUE);\n        return ans;\n        \n    }\n    public void help(TreeNode root,int max,int min){\n        if(root==null){\n            return;\n        }\n         \n         max=Math.max(root.val,max);\n         min=Math.min(root.val,min);\n         if(root.left==null && root.right==null){\n             ans=Math.max(max-min,ans);\n         }\n         help(root.left,max,min);\n         help(root.right,max,min);\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor","has_notes":false}