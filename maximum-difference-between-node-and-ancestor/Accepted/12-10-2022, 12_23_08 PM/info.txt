{"id":857449223,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1670655188,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/857449223/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"43.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int m=0;\n    public int maxAncestorDiff(TreeNode root) {\n        \n        if(root==null) return 0;\n        dfs(root);\n        return m;\n    }\n    \n    int[] dfs(TreeNode root)\n    {\n        if(root==null) return null;\n        int[] left=dfs(root.left);\n        int[] right=dfs(root.right);\n        if(left==null&&right==null) return new int[]{root.val,root.val};\n        int min=root.val;\n        int max=root.val;\n        if(left!=null)\n        {\n            m=Math.max(m,Math.abs(left[0]-root.val));\n            m=Math.max(m,Math.abs(left[1]-root.val));\n            min=Math.min(min,left[0]);\n            max=Math.max(max,left[1]);\n        }\n        if(right!=null)\n        {\n            m=Math.max(m,Math.abs(right[0]-root.val));\n            m=Math.max(m,Math.abs(right[1]-root.val));\n            min=Math.min(min,right[0]);\n            max=Math.max(max,right[1]);\n        }\n        \n        return new int[]{min,max};\n    }\n    \n}","compare_result":"1111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor","has_notes":false}