{"id":874542063,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1673245054,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/874542063/","is_pending":"Not Pending","title":"Maximal Score After Applying K Operations","memory":"N/A","code":"class Solution {\n    public long maxKelements(int[] nums, int k) {\n        PriorityQueue<Integer> pq= new PriorityQueue<>((a,b)-> a>b ?-1 :1);\n        for(int i=0;i<nums.length;i++){\n            pq.add(nums[i]);\n        }\n        int ans=0;\n        while(k!=0){\n            int val=pq.poll();\n            ans+=val;\n            if(val%3==0){\n                val=val/3;\n            }\n            else{\n                val=val/3+1;\n            }\n            System.out.println(val);\n            pq.add(val);\n            k--;\n        }\n        return ans;\n\n    }\n}","compare_result":"111101000100000100000000000000000010011","title_slug":"maximal-score-after-applying-k-operations","has_notes":false}