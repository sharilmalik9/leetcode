{"id":825810099,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666170964,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/825810099/","is_pending":"Not Pending","title":"Frog Jump","memory":"N/A","code":"class Solution {\n    public boolean canCross(int[] stones){\n        HashMap<Integer,Integer> hm= new HashMap<>();\n        for(int i=0;i<stones.length;i++){\n            hm.put(stones[i],i);\n        }\n        return help(hm,1,1,stones);\n        \n        \n    }\n    public boolean help(HashMap<Integer,Integer> hm,int idx,int steps,int[] stones){\n        if(idx==stones.length-1){\n            return true;\n        }\n        if(idx>=stones.length || steps<=0){\n            return false;\n        }\n        // if(steps==-1){\n        //     return false;\n        // }\n        \n        boolean ans=false;\n        for(int i=steps-1;i<steps+2;i++){\n            if(hm.containsKey(i+stones[idx])){\n                ans=ans||help(hm,hm.get(i+stones[idx]),i,stones);  \n                System.out.println(\"heyy\");\n            }\n            else{\n                continue;\n            }\n        }\n        return ans;\n    }\n}","compare_result":"1111011111101111000000000000000000000000000000000000","title_slug":"frog-jump","has_notes":false}