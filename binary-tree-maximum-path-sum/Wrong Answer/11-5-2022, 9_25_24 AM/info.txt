{"id":837118821,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1667620524,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/837118821/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n     int ans=0;\n    public int maxPathSum(TreeNode root) {\n       \n        help(root);\n        return ans;\n        \n        \n    }\n    public int help(TreeNode root){\n        if(root==null){\n            return 0;\n        }\n        int left=Math.max(0,help(root.left));\n        int right=Math.max(0,help(root.right));\n        ans=Math.max(ans,root.val+left+right);\n        return Math.max(left,right)+root.val;\n    }\n}","compare_result":"1111011100111101111111111111111111111111111111111111111111111111111111101111111101111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false}