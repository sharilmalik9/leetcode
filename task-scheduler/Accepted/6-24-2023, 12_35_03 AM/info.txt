{"id":978072507,"lang":"java","lang_name":"Java","time":"5Â days","timestamp":1687547103,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/978072507/","is_pending":"Not Pending","title":"Task Scheduler","memory":"44.7 MB","code":"class Tuple{\n    char ch;\n    int cnt;\n    int cooldown;\n    Tuple(char ch, int cnt, int cooldown){\n        this.cnt = cnt;\n        this.ch = ch;\n        this.cooldown =cooldown ;\n    }\n}\n\nclass Solution {\n    static int leastInterval(char tasks[], int K) {\n        // code here\n        PriorityQueue<Tuple> pq = new PriorityQueue<>((a,b)-> a.cooldown == b.cooldown ? b.cnt - a.cnt : a.cooldown - b.cooldown );\n\n        HashMap<Character,Integer> mp = new HashMap<>();\n        \n        for(char i : tasks){\n            mp.put(i, mp.getOrDefault(i,0) + 1);\n        }\n        System.out.println(mp);\n        for(char c : mp.keySet()){\n            pq.add(new Tuple(c, mp.get(c), 1));\n        }\n        // A,3,0\n        // B,3,0\n\n\n        int days = 1;\n        \n        while(!pq.isEmpty()){\n            Tuple curr = pq.peek();\n            // System.out.print(days  + \" \");\n            if(curr.cooldown <= days){\n                pq.poll();\n                // System.out.print(curr.ch);\n                int cnt = curr.cnt;\n                int cooldown = curr.cooldown;\n                if(cnt >  1){\n                    pq.add(new Tuple(curr.ch, cnt-1, cooldown + K+1));\n                }\n            }\n            // System.out.println();\n            days ++;\n        }\n        \n        return days-1;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"task-scheduler","has_notes":false}