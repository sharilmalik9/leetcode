{"id":815663066,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1664964195,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/815663066/","is_pending":"Not Pending","title":"Merge Nodes in Between Zeros","memory":"80.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeNodes(ListNode head) {\n        ListNode temp = head;\n        ListNode new_head = new ListNode(0);\n        ListNode z = new_head;\n        while(temp!=null){\n            \n            if(temp.val==0){\n                temp=temp.next;\n                continue;\n            }else{\n                int sum=0;\n                while(temp.val!=0){\n                    sum=sum+temp.val;\n                    temp=temp.next;\n                }\n                new_head.next= new ListNode(sum);\n                new_head=new_head.next;\n                continue;\n            }\n        }\n        return z.next;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"merge-nodes-in-between-zeros","has_notes":false}