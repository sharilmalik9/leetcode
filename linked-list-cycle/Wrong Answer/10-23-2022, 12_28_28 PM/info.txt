{"id":828460707,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666508308,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/828460707/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        if(head==null|| head.next==null){\n            return false;\n        }\n        \n        ListNode fast=head;\n        ListNode slow= head;\n        while(fast!=null && fast.next!=null){\n           if(fast==slow){\n               return true;\n           }\n            else{\n                fast=fast.next.next;\n                slow=slow.next;\n            }\n        }\n        return false;\n        \n    }\n}","compare_result":"11111101110111011001000","title_slug":"linked-list-cycle","has_notes":false}