{"id":742729683,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1657387816,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/742729683/","is_pending":"Not Pending","title":"Number of Closed Islands","memory":"46.9 MB","code":"class Solution {\n\npublic int closedIsland(int[][] grid) {\n    if(grid.length==0) return 0;\n    int row = grid.length;\n    int col = grid[0].length;\n    int closedIsland = 0;    \n    \n    for(int i=1; i<row-1; i++){\n        for(int j=1; j<col-1; j++){\n            if(grid[i][j]==0){\n                if(isClosedIsland(grid, i, j, row, col))\n                    closedIsland++;\n            }\n        }\n    }\n    return closedIsland;\n}\n\nprivate boolean isClosedIsland(int[][] grid, int i, int j, int row, int col){\n    \n    //-1: visited, 1: water, 0: land\n    if(grid[i][j]==-1 || grid[i][j]==1) \n        return true;\n    if(isOnParamenter(i,j,row,col)) return false;\n    grid[i][j] = -1; //Mark -1 if visited once\n\n    boolean up=true, down=true, left=true, right=true;\n    up = isClosedIsland(grid, i-1, j, row, col);//up\n    left = isClosedIsland(grid, i, j-1, row, col);//left\n    down = isClosedIsland(grid, i+1, j, row, col);//down\n    right = isClosedIsland(grid, i, j+1, row, col);//right\n    \n    return up && left && down && right;\n}\n\nprivate boolean isOnParamenter(int i, int j, int row, int col){\n    return i==0 || j==0 || i==row-1 || j==col-1;\n}\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-closed-islands","has_notes":false}