{"id":962460166,"lang":"java","lang_name":"Java","time":"3 weeks, 5 days","timestamp":1685724755,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/962460166/","is_pending":"Not Pending","title":"Maximum Alternating Subsequence Sum","memory":"N/A","code":"class Solution {\r\n    public long maxAlternatingSum(int[] nums) {\r\n        return rec(nums,0,0,0,0);\r\n    }\r\n    public long rec(int[] nums,int idx,int len,int oddsum,int evensum){\r\n        if(idx==nums.length){\r\n            return Math.abs(oddsum-evensum);\r\n        }\r\n        long include=0;\r\n        \r\n        if(len%2==0){\r\n            include=rec(nums,idx+1,len+1,oddsum+nums[idx],evensum);\r\n        }\r\n        else{\r\n            include=rec(nums,idx+1,len+1,oddsum,evensum+nums[idx]);\r\n        }\r\n        long dont=rec(nums,idx+1,len,oddsum,evensum);\r\n        return Math.max(include,dont);\r\n        \r\n\r\n    }\r\n}","compare_result":"11111111111110000000000000000000000000000000000000000000000000000","title_slug":"maximum-alternating-subsequence-sum","has_notes":false}