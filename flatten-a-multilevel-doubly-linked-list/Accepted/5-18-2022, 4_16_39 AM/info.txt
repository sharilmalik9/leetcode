{"id":701713558,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1652827599,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/701713558/","is_pending":"Not Pending","title":"Flatten a Multilevel Doubly Linked List","memory":"42.2 MB","code":"import java.util.*;\n/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public Node prev;\n    public Node next;\n    public Node child;\n};\n*/\n                                                                            \n\nclass Solution {\n    public Node flatten(Node head) {\n     if(head == null) return null;\n        Node current = head;\n        \n        while(current != null){\n            if(current.child != null){\n                Node nextNode = current.next;\n                Node childNode = flatten(current.child); //get recursive child\n                \n                current.child = null;\n                current.next = childNode;\n                childNode.prev = current;\n                \n                while(current.next != null) current = current.next;\n                current.next = nextNode;\n                \n                if(nextNode != null) nextNode.prev = current;\n            }\n            current = current.next;\n        }\n        return head;\n        \n    }\n}","compare_result":"11111111111111111111111111","title_slug":"flatten-a-multilevel-doubly-linked-list","has_notes":false}