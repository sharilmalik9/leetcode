{"id":917861530,"lang":"java","lang_name":"Java","time":"3 months, 1 week","timestamp":1679197583,"status":10,"status_display":"Accepted","runtime":"801 ms","url":"/submissions/detail/917861530/","is_pending":"Not Pending","title":"Design Add and Search Words Data Structure","memory":"99.9 MB","code":"class WordDictionary {\n    private WordDictionary[] children;\n    boolean isCompleteWord;\n\n    public WordDictionary() {\n        children = new WordDictionary[26];\n        isCompleteWord = false;\n    }\n    \n    public void addWord(String word) {\n        WordDictionary curr = this;\n        for(char c: word.toCharArray()){\n            if(curr.children[c - 'a'] == null)\n                curr.children[c - 'a'] = new WordDictionary();\n            curr = curr.children[c - 'a'];\n        }\n        curr.isCompleteWord = true;\n    }\n    \n    public boolean search(String word) {\n        WordDictionary curr = this;\n        for(int i = 0; i < word.length(); ++i){\n            char c = word.charAt(i);\n            if(c == '.'){\n                for(WordDictionary ch: curr.children)\n                    if(ch != null && ch.search(word.substring(i+1))) return true;\n                return false;\n            }\n            if(curr.children[c - 'a'] == null) return false;\n            curr = curr.children[c - 'a'];\n        }\n        return curr != null && curr.isCompleteWord;\n    }\n}","compare_result":"11111111111111111111111111111","title_slug":"design-add-and-search-words-data-structure","has_notes":false}