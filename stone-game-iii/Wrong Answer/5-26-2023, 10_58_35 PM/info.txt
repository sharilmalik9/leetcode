{"id":957820727,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1685122115,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/957820727/","is_pending":"Not Pending","title":"Stone Game III","memory":"N/A","code":"class Solution {\n    int[] dp;\n    public String stoneGameIII(int[] stoneValue) {\n        int[] piles=stoneValue;\n         //if (piles.length == 0) return 0;\n         dp = new int[piles.length];\n\n        int[] suffixSum = new int[piles.length];\n        suffixSum[suffixSum.length - 1] = piles[piles.length - 1];\n        for (int i = piles.length - 2; i >= 0; --i) suffixSum[i] = piles[i] + suffixSum[i + 1];\n        int ans= helper(piles, suffixSum, 0);\n        if(ans>suffixSum[0]-ans){\n            return \"Alice\";\n        }\n        else if(ans==suffixSum[0]-ans){\n            return \"Tie\";\n        }\n        else{\n            return \"Bob\";\n        }\n    }\n    public int helper(int[] piles, int[] suffixSum, int i) {\n        if (i == piles.length) return 0;\n        if (i + 3 >= piles.length) return suffixSum[i];\n\n        if (dp[i] != 0) return dp[i];\n\n        int result = 0;\n        for (int x = 1; x <= 3; ++x) {\n            result = Math.max(result, suffixSum[i] - helper(piles, suffixSum, i + x));\n        }\n\n        dp[i] = result;\n        return result;\n    }\n}","compare_result":"11110111111111111011111110110111101110111111111011111010111111101111111011110110001111101001110111101111101111011100100111001011101110111111110011111001110000110000000000000000000000000","title_slug":"stone-game-iii","has_notes":false}