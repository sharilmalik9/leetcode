{"id":697807823,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1652323672,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/697807823/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"42 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head,ListNode end){\n        if(head!=null&& head.next!=null){\n           ListNode prev=head;\n          ListNode curr=head.next;\n         while(curr!=end){\n           ListNode after=curr.next;\n           curr.next=prev;\n           prev=curr;\n           curr=after;\n       }\n        head.next=end;\n        head=prev;\n        \n        return head;\n        }\n        else{\n            return head;\n        }\n        \n        \n        \n    }\n    public ListNode reverseBetween(ListNode head, int left, int right) {\n        if(right==left){\n            return head;\n        }\n        ListNode nn = head;\n        ListNode tobegiven=head;\n        ListNode ending=head;\n        for(int i=2;i<=left;i++){\n            tobegiven=tobegiven.next;\n        }\n        for(int i=1;i<=right;i++){\n            ending=ending.next;\n        }\n        \n        \n        \n        ListNode newhead= reverseList(tobegiven,ending);\n        if(left==1){\n            return newhead;\n        }\n        ListNode hey= head;\n        \n        for(int i=2;i<left;i++){\n            hey=hey.next;\n            \n        }\n        hey.next=newhead;\n        \n     return head; \n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii","has_notes":false}