{"id":850544185,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1669535086,"status":10,"status_display":"Accepted","runtime":"173 ms","url":"/submissions/detail/850544185/","is_pending":"Not Pending","title":"Arithmetic Slices II - Subsequence","memory":"77.7 MB","code":"class Solution {\n    public int numberOfArithmeticSlices(int[] A) {\n        long ans = 0;\n        int n = A.length;\n        HashMap<Integer, Integer>[] maps = new HashMap[n];\n        for(int i=0; i < n; i++) {\n            maps[i] = new HashMap<>();\n            for(int j=0; j < i; j++) {\n                long diff = (long)A[i] - (long)A[j];\n                if(diff < Integer.MIN_VALUE || diff > Integer.MAX_VALUE) continue;\n                int delta = (int)diff;\n                int apsEndingOnJ = maps[j].getOrDefault(delta, 0);\n                int apsEndingOnI = maps[i].getOrDefault(delta, 0);\n                ans += apsEndingOnJ;\n                maps[i].put(delta, apsEndingOnJ + apsEndingOnI + 1);\n            }\n        }\n        return (int)ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-slices-ii-subsequence","has_notes":false}