{"id":959087488,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1685291561,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/959087488/","is_pending":"Not Pending","title":"Can You Eat Your Favorite Candy on Your Favorite Day?","memory":"85.6 MB","code":"class Solution {\n    // T = O(n) S=O(n)\n    public boolean[] canEat(int[] candiesCount, int[][] queries) {\n        // calculate prefix sum\n        long[] prefix = new long[candiesCount.length+1];\n        boolean[] res = new boolean[queries.length];\n        prefix[0] = 0;\n        \n        for(int i=1; i< prefix.length; i++)\n            prefix[i] = prefix[i-1]+candiesCount[i-1];\n        \n        for(int i=0; i< res.length; i++) {\n            int type = queries[i][0];\n            int day  = queries[i][1];\n            int cap  = queries[i][2];\n            \n            // max and min day required to eat\n            // if we eat one candy per day including type candy (prefix[type+1]). we decrement by 1 since we need atleast one candy of type\n            long maxDay = prefix[type+1]-1; \n            // if we eat upto capacity each day upto previous candy\n            long minDay = prefix[type]/cap; \n        \n            // check if query day is within the limits (minDay and maxDay inclusive)\n            res[i] = (minDay <= day && day <= maxDay);            \n        }\n        \n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"can-you-eat-your-favorite-candy-on-your-favorite-day","has_notes":false}