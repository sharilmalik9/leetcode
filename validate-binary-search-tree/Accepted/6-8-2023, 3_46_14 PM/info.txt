{"id":966538597,"lang":"java","lang_name":"Java","time":"2 weeks, 6 days","timestamp":1686219374,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/966538597/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"44.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n       return helper(root,Long.MIN_VALUE,Long.MAX_VALUE);\n    }\n    public boolean helper(TreeNode root,Long min,Long max){\n        if(root==null){\n            return true;\n        }\n        else if(root.val<=min || root.val>=max){\n            return false;\n        }\n        return helper(root.left,min,(long)root.val) && helper(root.right,(long)root.val,max);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false}