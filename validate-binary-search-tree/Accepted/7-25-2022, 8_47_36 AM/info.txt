{"id":755942589,"lang":"java","lang_name":"Java","time":"11 months, 1 week","timestamp":1658719056,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/755942589/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"43.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    public boolean isValidBST(TreeNode root) {\n        \n        TreeNode left = null;\n        TreeNode right = null;\n        \n        return isValidBST(root, left, right);\n    }\n    \n    public boolean isValidBST(TreeNode root, TreeNode left, TreeNode right){\n        \n        if(root==null){\n            return true;\n        }\n        \n        if(left!=null && left.val>=root.val){\n            return false;\n        }\n        \n        if(right!=null && right.val<=root.val){\n            return false;\n        }\n        \n        return isValidBST(root.left, left, root) && isValidBST(root.right, root, right); \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false}