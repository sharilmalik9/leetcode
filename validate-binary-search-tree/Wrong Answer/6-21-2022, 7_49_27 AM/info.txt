{"id":727228877,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1655777967,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/727228877/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    static boolean isBSTutil(TreeNode nn,int max,int min){\n        if(nn==null){\n            return true;\n        }\n        if(nn.val<min||nn.val>max){\n            return false;\n        }\n        return (isBSTutil(nn.left,nn.val,min) && isBSTutil(nn.right,max,nn.val));\n    }\n    public boolean isValidBST(TreeNode root) {\n        \n        return isBSTutil(root, Integer.MAX_VALUE,Integer.MIN_VALUE);\n        \n    }\n}","compare_result":"11110001111111111011111111111111111111110111111111111111101111000011111111111001","title_slug":"validate-binary-search-tree","has_notes":false}