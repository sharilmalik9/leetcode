{"id":787407857,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1661886016,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/787407857/","is_pending":"Not Pending","title":"N-ary Tree Preorder Traversal","memory":"45.2 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n    public List<Integer> preorder(Node root) {\n    List<Integer> list = new ArrayList<>();\n        preorder(root, list);\n        return list;\n    }\n    void preorder(Node root, List<Integer> list){\n        if(root == null) return;\n        list.add(root.val);\n        for(int i = 0; i < root.children.size(); i++){  //accessing each child using a for loop\n            preorder(root.children.get(i), list);\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"n-ary-tree-preorder-traversal","has_notes":false}