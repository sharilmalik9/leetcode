{"id":962222831,"lang":"java","lang_name":"Java","time":"3 weeks, 5 days","timestamp":1685697425,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/962222831/","is_pending":"Not Pending","title":"Next Greater Element III","memory":"39.1 MB","code":"class Solution {\n    public int nextGreaterElement(int n) {\n        char arr[] = (Integer.toString(n)).toCharArray();\n        \n        int i=arr.length-2;\n        StringBuilder ans = new StringBuilder();\n        while(i>=0 && arr[i] >= arr[i+1])\n            i--;\n        \n        if(i == -1)\n            return -1;\n        \n        int k = arr.length-1;\n        \n        while(arr[k] <= arr[i])\n            k--;\n        \n        swap(arr,i,k);\n        \n        for(int j=0;j<=i;j++)\n            ans.append(arr[j]);\n        \n        for(int j=arr.length-1;j>i;j--)\n            ans.append(arr[j]);\n        \n        long ans_ = Long.parseLong(ans.toString());\n        \n        return (ans_ > Integer.MAX_VALUE) ? -1 : (int)ans_;\n        \n        \n    }\n    void swap(char[] arr,int i,int j)\n    {\n        char temp = arr[j];\n        arr[j] = arr[i];\n        arr[i] = temp;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"next-greater-element-iii","has_notes":false}