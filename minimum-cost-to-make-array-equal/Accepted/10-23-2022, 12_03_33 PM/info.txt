{"id":828446647,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666506813,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/828446647/","is_pending":"Not Pending","title":"Minimum Cost to Make Array Equal","memory":"77.7 MB","code":"class Solution {\n    public long minCost(int[] nums, int[] cost) {\n\n        int min = nums[0];\n        int max = nums[0];\n\n        for(int i=0; i<nums.length; i++){\n            if(nums[i] < min) min = nums[i];\n            if(nums[i] > max) max = nums[i];\n        }\n\n        long res =getcost(nums, cost, min);\n\n        while(min < max){\n            int mid = min + (max-min)/2;\n\n            long t1 = getcost(nums, cost, mid);\n            long t2 = getcost(nums, cost, mid+1);\n\n            res = Math.min(t1, t2);\n\n            if(t1 < t2){\n                max = mid;\n            }\n            else{\n                min = mid+1;\n            }\n        }\n\n        return res;\n    }\n\n    public long getcost(int [] nums, int [] cost, int x){\n        long ans = 0;\n        for(int i=0; i<nums.length; i++){\n            ans += (long)Math.abs(nums[i]-x)*cost[i];\n        }\n        return ans;\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-make-array-equal","has_notes":false}