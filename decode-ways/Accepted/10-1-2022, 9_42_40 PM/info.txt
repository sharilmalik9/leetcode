{"id":812835996,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1664640760,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/812835996/","is_pending":"Not Pending","title":"Decode Ways","memory":"42.2 MB","code":"class Solution {\n    public int numDecodings(String s) {\n        if (s.charAt(0)  == '0') return 0;\n\n        int[] dp = new int[s.length()];\n        dp[0] = 1;\n\n        for (int i = 1; i < dp.length; i++) {\n            if (s.charAt(i - 1) == '0' && s.charAt(i) == '0') {\n                dp[i] = 0;\n            }\n            else if (s.charAt(i - 1) == '0' && s.charAt(i) != '0') {\n                dp[i] = dp[i - 1];\n            }\n            else if (s.charAt(i - 1) != '0' && s.charAt(i) == '0') {\n                if (s.charAt(i - 1) == '1' || s.charAt(i - 1) == '2') {\n                    dp[i] = (i >= 2 ? dp[i - 2] : 1);\n                }\n                else dp[i] = 0;\n            }\n            else {\n                if (Integer.parseInt(s.substring(i - 1, i + 1)) <= 26) {\n                    dp[i] = dp[i - 1] + (i >= 2 ? dp[i - 2] : 1);\n                }\n                else dp[i] = dp[i - 1];\n            }\n        }\n\n        return dp[dp.length - 1];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"decode-ways","has_notes":false}