{"id":967569830,"lang":"java","lang_name":"Java","time":"2 weeks, 5 days","timestamp":1686335490,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/967569830/","is_pending":"Not Pending","title":"Split Array into Fibonacci Sequence","memory":"40.8 MB","code":"class Solution {\n    public List<Integer> splitIntoFibonacci(String num) {\n        List<Integer> list = new ArrayList<>();\n        dfs(num.toCharArray(), list, 0);\n        return list;\n    }\n    public boolean dfs(char[] digit, List<Integer> list, int index) {\n        if (index == digit.length && list.size() >= 3) {\n            return true;\n        }\n        for (int i = index; i < digit.length; i++) {\n            if (digit[index] == '0' && i > index) {\n                break;\n            }\n            long num = subDigit(digit, index, i + 1);\n            if (num > Integer.MAX_VALUE) {\n                break;\n            }\n            int size = list.size();\n            if (size >= 2 && num > list.get(size - 1) + list.get(size - 2)) {\n                break;\n            }\n            if (size <= 1 || num == list.get(size - 1) + list.get(size - 2)) {\n                list.add((int) num);\n                if (dfs(digit, list, i + 1))\n                    return true;\n                list.remove(list.size() - 1);\n            }\n        }\n        return false;\n    }\n    private long subDigit(char[] digit, int start, int end) {\n        long res = 0;\n        for (int i = start; i < end; i++) {\n            res = res * 10 + digit[i] - '0';\n        }\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"split-array-into-fibonacci-sequence","has_notes":false}