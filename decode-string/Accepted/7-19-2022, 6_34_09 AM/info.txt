{"id":750669204,"lang":"java","lang_name":"Java","time":"11 months, 2 weeks","timestamp":1658192649,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/750669204/","is_pending":"Not Pending","title":"Decode String","memory":"43 MB","code":"class Solution {\n    public String decodeString(String s) {\n        Stack<Integer> count = new Stack<>();\n        Stack<String> result = new Stack<>();\n        String res = \"\";\n        int i = 0;\n        while(i < s.length()){\n            if(Character.isDigit(s.charAt(i))){\n                int num = 0;\n                while(Character.isDigit(s.charAt(i))){\n                    num = num * 10 + (s.charAt(i) - '0');\n                    i++;\n                }\n                count.push(num);\n            }else if(s.charAt(i) == '['){\n                result.push(res);\n                res = \"\";\n                i++;\n            }else if(s.charAt(i) == ']'){\n                StringBuilder temp = new StringBuilder(result.pop());\n                int num = count.pop();\n                for(int j = 0; j < num; j++){\n                    temp.append(res);\n                }\n                res = temp.toString();\n                i++;\n            }else{\n                res += s.charAt(i);\n                i++;\n            }\n        }\n        return res;\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"decode-string","has_notes":false}