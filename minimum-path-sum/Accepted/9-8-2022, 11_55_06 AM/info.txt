{"id":794511953,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1662618306,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/794511953/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"45.6 MB","code":"class Solution {\n    public int minPathSum(int[][] input) {\n        \n        int[][] dp = new int[input.length][input[0].length];\n        \n        dp[0][0] = input[0][0];\n        \n        for(int i = 0; i< input.length ; i++){\n            for(int j = 0 ; j<input[0].length ; j++){\n                int ans1 = Integer.MAX_VALUE;\n        \t\tint ans2 = Integer.MAX_VALUE;\n                if( i == 0&& j == 0){\n                    continue;\n                }\n                \n                if(i > 0){\n            \t\tans1 = dp[i-1][j] ;     \n                }\n                if(j > 0){\n            \t\tans2 = dp[i][j-1] ;     \n                }\n               \n                \n                dp[i][j] = Math.min(ans1, ans2) + input[i][j];\n            }\n        }\n        \n        return dp[input.length - 1][input[0].length -1];\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false}