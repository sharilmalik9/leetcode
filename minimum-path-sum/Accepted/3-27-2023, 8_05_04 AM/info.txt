{"id":922750222,"lang":"java","lang_name":"Java","time":"3Â months","timestamp":1679884504,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/922750222/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"45.5 MB","code":"class Solution {\n    public int minPathSum(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int[][] dp= new int[m][n];\n       for(int i=m-1;i>=0;i--){\n           for(int j=n-1;j>=0;j--){\n               if(i==m-1 && j==n-1){\n                   dp[i][j]=grid[i][j];            \n                             }\n               else if(i==m-1){\n                   dp[i][j]=dp[i][j+1]+grid[i][j];\n                   \n               }\n               else if(j==n-1){\n                   dp[i][j]=dp[i+1][j]+grid[i][j];\n                   \n               }\n               else{\n                   dp[i][j]=Math.min(dp[i+1][j]+grid[i][j],dp[i][j+1]+grid[i][j]);\n               }\n               \n               \n               \n               \n               \n               \n          }\n       }\n        return dp[0][0];\n        \n        \n        \n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false}