{"id":882881250,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1674365486,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/882881250/","is_pending":"Not Pending","title":"Reorder Routes to Make All Paths Lead to the City Zero","memory":"N/A","code":"class Solution {\n    int ans=0;\n     boolean[] vis;\n    public int minReorder(int n, int[][] connections){\n        List<HashSet<Integer>> ls= new ArrayList<>();\n        vis=new boolean[n];\n        boolean[] cs=new boolean[n];\n        for(int i=0;i<n;i++){\n            ls.add(new HashSet<>());\n        }\n        Queue<Integer> que= new LinkedList<>();\n        for(int[] curr : connections ){\n            ls.get(curr[0]).add(curr[1]);\n            if(curr[1]==0){\n                vis[curr[0]]=true;\n                cs[curr[0]]=true;\n                que.add(curr[0]);\n            }\n        }\n        vis[0]=true;\n        cs[0]=true;\n        for(int i:ls.get(0)){\n            ans++;\n            vis[i]=true;\n            cs[i]=true;\n            que.add(i);\n        }\n        while(que.size()!=0){\n            int curr=que.poll();\n          \n            for(int i=0;i<n;i++){\n                if(ls.get(i).contains(curr)){\n                    if(!cs[i]){\n                         que.add(i);\n                         cs[i]=true;\n\n                    }\n                   \n                    vis[i]=true;\n                }\n\n\n            }\n            for(int i: ls.get(curr)){\n                if(!vis[i]){\n                    ans++;\n                    vis[i]=true;\n                }\n                if(!cs[i]){\n                         que.add(i);\n                         cs[i]=true;\n\n                    }\n\n            }\n            \n        }  \n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111110000000","title_slug":"reorder-routes-to-make-all-paths-lead-to-the-city-zero","has_notes":false}