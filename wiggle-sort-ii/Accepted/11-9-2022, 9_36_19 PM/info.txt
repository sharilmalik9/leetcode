{"id":840170748,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1668009979,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/840170748/","is_pending":"Not Pending","title":"Wiggle Sort II","memory":"56.4 MB","code":"class Solution {\n  public void wiggleSort(int[] nums) {\n        int n = nums.length - 1;\n        int[] sortedNums = Arrays.copyOf(nums, nums.length);\n        Arrays.sort(sortedNums);\n\n        // copy 2nd half of sorted array (reverse order) into original nums array at odd position\n        for (int i = 1; i < nums.length; i+=2){\n            nums[i] = sortedNums[n];\n            n--;\n        }\n\n        // copy 1st half of sorted array (reverse order) into original nums array at even position\n        for (int i = 0; i < nums.length; i+=2){\n            nums[i] = sortedNums[n];\n            n--;\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"wiggle-sort-ii","has_notes":false}