{"id":730651451,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1656138891,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/730651451/","is_pending":"Not Pending","title":"Reorganize String","memory":"42.3 MB","code":"class Solution {\n    public String reorganizeString(String s) {\n        \n        StringBuilder st= new StringBuilder();\n        Map<Character,Integer> mp= new HashMap<>();\n        for(char c: s.toCharArray()){\n            mp.put(c, mp.getOrDefault(c,0)+1);\n        }\n        PriorityQueue<Character> pq= new PriorityQueue<>((a,b)->mp.get(b)-mp.get(a));\n        pq.addAll(mp.keySet());\n       \n       \n            while(pq.size()>1){\n                char current=pq.poll();\n                char next= pq.poll();\n                st.append(current);\n                st.append(next);\n                \n                    mp.put(current,mp.get(current)-1);\n                mp.put(next,mp.get(next)-1);\n                if(mp.get(current)>0){\n                    pq.add(current);\n                }\n                if(mp.get(next)>0){\n                    pq.add(next);\n                }\n                    \n\n                \n            }\n        \n        if(pq.size()>0){\n            char last=pq.poll();\n            if(mp.get(last)>1){\n                return \"\";\n            }\n            \n            st.append(last);\n        }\n        return st.toString();\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reorganize-string","has_notes":false}