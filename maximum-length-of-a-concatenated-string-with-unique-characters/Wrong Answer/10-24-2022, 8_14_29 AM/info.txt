{"id":828998638,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666579469,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/828998638/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"N/A","code":"class Solution {\n    public int maxLength(List<String> arr) {\n        int[] dp= new int[arr.size()+1];\n        String ans=\"\";\n        for(int idx=arr.size()-1;idx>=0;idx--){\n             int len=0+dp[idx+1];        \n            if(checkSub(ans,arr.get(idx))){\n               \n                    len=arr.get(idx).length()+dp[idx+1];\n                    ans=ans+arr.get(idx);\n                \n               \n         \n                \n        }\n             dp[idx]=len;\n            \n        }\n        return dp[0];\n        // return help(arr,0,\"\");\n        \n    }\n//     public int help(List<String> arr,int idx,String ans){\n//         if(idx==arr.size()){\n//             return 0;\n// }\n//         int len=0+help(arr,idx+1,ans);\n//         if(checkSub(ans,arr.get(idx))){\n//            len=Math.max(len,arr.get(idx).length()+help(arr,idx+1,ans+arr.get(idx)));\n//         }\n//         return len;\n//     }\n    public boolean checkSub(String s, String t){\n        HashMap<Character,Integer> hm= new HashMap<>();\n        for(int i=0;i<s.length();i++){\n            if(hm.containsKey(s.charAt(i))){\n                return false;\n            }\n            hm.put(s.charAt(i),1);\n        }\n        for(int i=0;i<t.length();i++){\n            if(hm.containsKey(t.charAt(i))){\n                return false;\n            }\n            hm.put(t.charAt(i),1);\n        }\n        return true;\n    }\n}","compare_result":"11111111110101110110101100101011011000000110101110001001010100000110000000010010000001100","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false}