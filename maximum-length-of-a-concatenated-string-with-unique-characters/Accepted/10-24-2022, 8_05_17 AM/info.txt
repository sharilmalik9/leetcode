{"id":828994928,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666578917,"status":10,"status_display":"Accepted","runtime":"79 ms","url":"/submissions/detail/828994928/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"66.3 MB","code":"class Solution {\n    public int maxLength(List<String> arr) {\n        return help(arr,0,\"\");\n        \n    }\n    public int help(List<String> arr,int idx,String ans){\n        if(idx==arr.size()){\n            return 0;\n}\n        int len=0+help(arr,idx+1,ans);\n        if(checkSub(ans,arr.get(idx))){\n           len=Math.max(len,arr.get(idx).length()+help(arr,idx+1,ans+arr.get(idx)));\n        }\n        return len;\n    }\n    public boolean checkSub(String s, String t){\n        HashMap<Character,Integer> hm= new HashMap<>();\n        for(int i=0;i<s.length();i++){\n            if(hm.containsKey(s.charAt(i))){\n                return false;\n            }\n            hm.put(s.charAt(i),1);\n        }\n        for(int i=0;i<t.length();i++){\n            if(hm.containsKey(t.charAt(i))){\n                return false;\n            }\n            hm.put(t.charAt(i),1);\n        }\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false}