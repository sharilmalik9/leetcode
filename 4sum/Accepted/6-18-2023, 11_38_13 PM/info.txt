{"id":974235441,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1687111693,"status":10,"status_display":"Accepted","runtime":"94 ms","url":"/submissions/detail/974235441/","is_pending":"Not Pending","title":"4Sum","memory":"44.9 MB","code":"class Solution {\n    public List<List<Integer>> fourSum(int[] nums, int target) {\n        HashSet<List<Integer>> st = new HashSet<>();\n        Arrays.sort(nums);\n\n        for(int i = 0;i < nums.length - 3;i++) {\n            for(int j = i + 1;j < nums.length - 2;j++){\n                int l = j + 1;\n                int r = nums.length - 1;\n                while(l < r) {\n                    long sum = (long) nums[i] + nums[j] + nums[l] + nums[r];\n                    \n                    if(sum == target) {\n                        ArrayList<Integer> tmap = new ArrayList<>();\n                        tmap.add(nums[i]);\n                        tmap.add(nums[j]);\n                        tmap.add(nums[l]);\n                        tmap.add(nums[r]);\n                        st.add(tmap);\n                        l++;\n                        r--;\n                    } else if(sum < target) {\n                        l++;\n                    } else {\n                        r--;\n                    }\n                }\n            }\n        }\n        List<List<Integer>> res = new ArrayList<>();\n        for(List<Integer> i : st){\n            res.add(i);\n        }\n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"4sum","has_notes":false}