{"id":871764009,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1672903899,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/871764009/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array II","memory":"41.9 MB","code":"class Solution {\n    public boolean search(int[] nums, int target) {\n      int start = 0;\n        int end = nums.length - 1;\n\n        while(start <= end) {\n            int mid = (start + end)/2;\n             if(target == nums[mid]) {\n                return true;\n            }\n\n             if(nums[start]==nums[mid] && nums[mid]==nums[end]){\n                start++;\n                end--;\n            }\n\n            else if(nums[start] <= nums[mid]) { // left array is sorted\n                if(target >= nums[start] && target < nums[mid]) { // target lies between start and mid index\n                    end = mid-1;\n                } else {\n                    start = mid+1;\n                }\n            } else { // right array is sorted\n                if(target > nums[mid] && target <= nums[end]) { // target lies between mid and end index\n                    start = mid+1;\n                } else {\n                    end = mid-1;\n                }\n            }\n        }\n       return false ;  \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array-ii","has_notes":false}