{"id":901980482,"lang":"java","lang_name":"Java","time":"4 months, 1 week","timestamp":1676950925,"status":10,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/901980482/","is_pending":"Not Pending","title":"Reverse Odd Levels of Binary Tree","memory":"45.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n // bfs i know \n // so task is to do dfs\nclass Solution {\n    public TreeNode reverseOddLevels(TreeNode root) {\n       help(root.left,root.right,1);\n        return root;\n        \n    }\n    public void  help(TreeNode left,TreeNode right,int level){\n        if(left==null || right==null){\n            return ;\n        }\n        if(level%2==1){\n            System.out.println(level + \" \"+ left.val+ \" \" + right.val);\n           int vale=left.val;\n           left.val=right.val;\n           right.val=vale;\n\n        }\n           help(left.left,right.right,level+1);\n           help(left.right,right.left,level+1);\n      \n    \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-odd-levels-of-binary-tree","has_notes":false}