{"id":814801730,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1664864830,"status":10,"status_display":"Accepted","runtime":"445 ms","url":"/submissions/detail/814801730/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"69.9 MB","code":"class Solution {\n    public String longestPalindrome(String s) {\n        int mf=0;\n        int jf=0;\n        boolean[][] dp= new boolean[s.length()][s.length()];\n        for(int gap=0;gap<s.length();gap++){\n            \n            for(int j=gap,i=0;j<s.length();j++,i++){\n                if(gap==0){\n                    dp[i][j]=true;\n}\n                else if(gap==1 && s.charAt(i)==s.charAt(j)){\n                    dp[i][j]=true;\n                }\n                else{\n                    if(s.charAt(i)==s.charAt(j) && dp[i+1][j-1]==true){\n                        dp[i][j]=true;\n                    }\n                }\n                if(dp[i][j]){\n                    mf=i;\n                    jf=j;\n                }\n}\n        }\n        return s.substring(mf,jf+1);\n        \n        \n    }\n     \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false}