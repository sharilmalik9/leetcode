{"id":975223066,"lang":"java","lang_name":"Java","time":"1 week, 1 day","timestamp":1687231567,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/975223066/","is_pending":"Not Pending","title":"K Radius Subarray Averages","memory":"63.8 MB","code":"class Solution {\n    public int[] getAverages(int[] nums, int k) {\n        int n=nums.length;\n        int[] arr=new int[n];\n        long[] prefixSum=new long[n];\n        long sum=0;\n        long sumAvg=0;\n        long avg=0;\n        for(int i=0;i<n;i++){\n            sum+=nums[i];\n            prefixSum[i]=sum;\n        }\n        for(int i=0;i<n;i++){\n            if(i<k || i>=(n-k)){\n                arr[i]=-1;\n            }else{\n                if(i-k-1>=0){\n                sumAvg=prefixSum[i+k]-prefixSum[i-k-1];\n                }else{\n                    sumAvg=prefixSum[i+k];\n                }\n\n                avg=sumAvg/(2*k +1);\n                \n                arr[i]=(int)avg;\n            }\n        }\n        return arr;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"k-radius-subarray-averages","has_notes":false}