{"id":959098538,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1685292847,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/959098538/","is_pending":"Not Pending","title":"Maximum Erasure Value","memory":"56 MB","code":"class Solution {\n    public int maximumUniqueSubarray(int[] nums) {\n        int[] sum=new int[nums.length];\n        sum[0]=nums[0];\n        for(int i=1;i<nums.length;i++){\n            sum[i]=sum[i-1]+nums[i];\n            \n        }\n        int start=0;\n        int end=0;\n        HashMap<Integer,Integer> hm= new HashMap<>();\n        hm.put(nums[0],0);\n        int ans=0;\n        while(end<nums.length-1){\n            end++;\n            if(hm.containsKey(nums[end]) && hm.get(nums[end])>=start){\n                ans=Math.max(ans,sum(start,end-1,sum,nums));\n                start=hm.get(nums[end])+1;\n                hm.remove(nums[end]);\n\n            }\n            hm.put(nums[end],end);\n\n        }\n        ans=Math.max(sum(start,end,sum,nums),ans);\n        return ans;\n    }\n    public int sum(int start,int end,int[] sum,int[] nums){\n          return sum[end]-sum[start]+nums[start];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-erasure-value","has_notes":false}