{"id":977901021,"lang":"java","lang_name":"Java","time":"5 days, 4 hours","timestamp":1687530956,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/977901021/","is_pending":"Not Pending","title":"Exclusive Time of Functions","memory":"44.4 MB","code":"class Solution {\n    public int[] exclusiveTime(int n, List<String> logs) {\n        Stack<Integer> stack = new Stack<>();\n        int[] ans = new int[n];\n        int prevTime=0;\n        int last=0;\n        for(String log : logs){\n            String[] logarr = log.split(\":\");\n            int id = Integer.parseInt(logarr[0]);\n            int time = Integer.parseInt(logarr[2]);\n            \n            if(logarr[1].equals(\"start\")){\n                if(!stack.isEmpty()){\n                    ans[stack.peek()]+=time-prevTime;\n                }\n                stack.push(id);\n                prevTime=time;\n            }else{\n                int topind = stack.pop();                \n                ans[topind]+=time-prevTime+1;   \n                prevTime=time+1; \n            }            \n        }\n        return ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"exclusive-time-of-functions","has_notes":false}