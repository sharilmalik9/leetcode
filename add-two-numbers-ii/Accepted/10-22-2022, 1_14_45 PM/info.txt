{"id":827792036,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666424685,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/827792036/","is_pending":"Not Pending","title":"Add Two Numbers II","memory":"48.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\npublic class Solution {\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n\n        ListNode head1 = rev(l1);\n        ListNode head2 = rev(l2);\n        ListNode dummy = new ListNode(-1);\n        ListNode pre = dummy;\n        int carry=0;\n        \n        while (head1 != null || head2 != null || carry >0) {\n            int sum = 0;\n            if (head1 != null) {\n                sum += head1.val;\n                head1 = head1.next;\n            }\n            if (head2 != null) {\n                sum += head2.val;\n                head2 = head2.next;\n            }\n            sum=sum+carry;\n            dummy.next = new ListNode(sum%10);\n            dummy = dummy.next;\n            carry=sum/10;\n        }\n        return rev(pre.next);\n    }\n\n    public ListNode rev(ListNode head){\n        ListNode prev=null;\n        ListNode curr=head;\n\n        while(curr!=null){\n            ListNode after=curr.next;\n            curr.next=prev;\n\n            prev=curr;\n            curr=after;\n\n        }\n        return prev;\n    }\n}","compare_resulttitle_slug":"add-two-numbers-ii","has_notes":false}