{"id":812495138,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1664604987,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/812495138/","is_pending":"Not Pending","title":"Partition Array Into Two Arrays to Minimize Sum Difference","memory":"N/A","code":"class Solution {\n    public int minimumDifference(int[] nums) {\n        int sum=0;\n        for(int i:nums){\n            sum+=i;\n        }\n        boolean[][] dp=new boolean[nums.length][sum+1];\n        int k=sum;\n         if(nums[0]<k){\n             dp[0][nums[0]]=true;\n        }\n    \n       for(int i=0;i<nums.length;i++){\n           dp[i][0]=true;\n       }\n        for(int i=1;i<nums.length;i++){\n            for(int j=1;j<k+1;j++){\n                boolean notinclude=dp[i-1][j];\n                boolean include=false;\n                if(nums[i]<=j){\n                    include=dp[i-1][j-nums[i]];\n                    \n                }\n                dp[i][j]=include || notinclude;\n                \n                \n                \n}\n        }\n      \n       int[] rem= new int[sum+1];\n        for(int i=0;i<sum+1;i++){\n            if(dp[nums.length-1][i]){\n                 rem[i]=Math.abs(i-sum);\n            }\n            else{\n                  rem[i]=Integer.MAX_VALUE;\n            }\n            \n         \n        }\n        int[] sem= new int[sum+1];\n        for(int i=0;i<sum+1;i++){\n            if(dp[nums.length-1][i]){\n                sem[i]=Math.abs(i-rem[i]);\n            }\n            else{\n                sem[i]=Integer.MAX_VALUE;\n            }\n}\n        \n        \n        int min=sem[0];\n        for(int i:sem){\n            min=Math.min(min,i);\n        }\n       \n        \n        \n        return min;\n        \n        \n    }\n}","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-array-into-two-arrays-to-minimize-sum-difference","has_notes":false}