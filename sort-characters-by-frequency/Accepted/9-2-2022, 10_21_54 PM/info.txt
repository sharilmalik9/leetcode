{"id":789772300,"lang":"java","lang_name":"Java","time":"9 months, 4 weeks","timestamp":1662137514,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/789772300/","is_pending":"Not Pending","title":"Sort Characters By Frequency","memory":"54.2 MB","code":"class Solution {\n\tpublic String frequencySort(String s) {\n\t\tMap<Character,Integer> map= new HashMap<>();\n\t\tfor(char c: s.toCharArray())\n\t\t{\n\t\t\tmap.put(c,map.getOrDefault(c,0)+1);\n\t\t}\n\n\t\tPriorityQueue<Map.Entry<Character,Integer>> pq= new PriorityQueue<>(\n\t\t(a,b)-> b.getValue()-a.getValue());\n\n\t\tfor(Map.Entry<Character,Integer> entry: map.entrySet())\n\t\t{\n\t\t\tpq.offer(entry);\n\t\t}\n\n\t\tStringBuilder sb=new StringBuilder();\n\t\twhile(!pq.isEmpty())\n\t\t{\n\t\t\tint n=pq.peek().getValue();\n\t\t\twhile(n-->0)\n\t\t\t{\n\t\t\t\tsb.append(pq.peek().getKey());\n\t\t\t}\n\t\t\tpq.remove();\n\t\t}\n\n\t\treturn sb.toString();\n\t}\n}","compare_result":"111111111111111111111111111111111","title_slug":"sort-characters-by-frequency","has_notes":false}