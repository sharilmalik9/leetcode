{"id":882186516,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1674277457,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/882186516/","is_pending":"Not Pending","title":"Restore IP Addresses","memory":"43.1 MB","code":"class Solution {\n    public List<String> restoreIpAddresses(String s) {\n        List<String> res = new ArrayList<>();\n        if (s.length() > 12) return res;\n\n        backtrack(s, 0, 0, \"\", res);\n        return res;\n    }\n    \n    public void backtrack(String s, int i, int dots, String currIp, List<String> res) {\n        if (dots == 4 && i == s.length()) {\n            res.add(currIp.substring(0, currIp.length() - 1));\n            return;\n        }\n        if (dots > 4) return;\n\n        for (int j = i; j < Math.min(i+3, s.length()); j++) {\n            if (Integer.parseInt(s.substring(i, j+1)) < 256 && (i == j || s.charAt(i) != '0')) {\n                backtrack(s, j+1, dots+1, currIp + s.substring(i, j+1) + \".\", res);\n            }\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"restore-ip-addresses","has_notes":false}