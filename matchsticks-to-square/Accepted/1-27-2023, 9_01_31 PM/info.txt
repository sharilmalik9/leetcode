{"id":886336916,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1674833491,"status":10,"status_display":"Accepted","runtime":"206 ms","url":"/submissions/detail/886336916/","is_pending":"Not Pending","title":"Matchsticks to Square","memory":"42.6 MB","code":"class Solution {\n    public boolean makesquare(int[] matchsticks) {\n        \n        int total = 0;\n        \n        for (int i : matchsticks) {\n            total += i;\n        }\n        \n        if (total % 4 != 0) return false; // if we cant make 4 equals sides then theres no way to make a square\n        // sort the array and place the largest sides first. required optimization to not TLE\n        Arrays.sort(matchsticks); \n        return match(matchsticks, matchsticks.length - 1, 0, 0, 0, 0, total / 4);\n    }\n    \n    public boolean match(int[] matchsticks, int index, int top, int bottom, int left, int right, int target) {\n        \n        if (top == target && bottom == target && left == target && right == target) return true;\n\n        if (top > target || bottom > target || left > target || right > target) return false;\n                        \n        int val = matchsticks[index];\n        \n        boolean t = match(matchsticks, index - 1, top + val, bottom, left, right, target);\n        if (t) return true;\n        boolean b = match(matchsticks, index - 1, top, bottom + val, left, right, target);\n        if (b) return true;\n        boolean l = match(matchsticks, index - 1, top, bottom, left + val, right, target);\n        if (l) return true;\n        boolean r = match(matchsticks, index - 1, top, bottom, left, right + val, target);\n        if (r) return true;\n        \n        return false;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"matchsticks-to-square","has_notes":false}