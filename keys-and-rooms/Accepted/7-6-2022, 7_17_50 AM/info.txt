{"id":739616177,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1657072070,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/739616177/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"44.6 MB","code":"class Solution {\n    public boolean canVisitAllRooms(List<List<Integer>> rooms) {\n         ArrayDeque<Integer> q = new ArrayDeque<>();\n        int n = rooms.size();\n        boolean [] visited = new boolean[n];\n        visited[0] = true;\n        List<Integer> r0 = rooms.get(0);\n        for(int val : r0){\n            q.add(val);\n        }\n        while(q.size() > 0){\n            int idx = q.remove();\n            if(visited[idx] == true){\n                continue;\n            }\n            List<Integer> room = rooms.get(idx);\n            for(int val : room){\n                q.add(val);\n            }\n            visited[idx] = true;\n        }\n        for(boolean val : visited){\n            if(val == false){\n                return false;\n            }\n        }\n        return true;\n       \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms","has_notes":false}