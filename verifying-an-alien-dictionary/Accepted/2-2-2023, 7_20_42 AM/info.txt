{"id":889761799,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1675302642,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/889761799/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"42 MB","code":"class Solution {\n    public boolean isAlienSorted(String[] W, String O) {\n        Map<Character,Integer> order = new HashMap<>();\n        for (int i = 0; i < O.length(); i++)\n            order.put(O.charAt(i), i);\n        for (int i = 1; i < W.length; i++) {\n            String a = W[i-1];\n            String b = W[i];\n            for (int j = 0; j < a.length(); j++) {\n                if (j == b.length()){\n                    return false;\n                }\n                char cha = a.charAt(j);\n                char chb = b.charAt(j);\n                if (order.get(cha) < order.get(chb)){\n                    break;\n                }\n                if (order.get(cha) > order.get(chb)){\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary","has_notes":false}