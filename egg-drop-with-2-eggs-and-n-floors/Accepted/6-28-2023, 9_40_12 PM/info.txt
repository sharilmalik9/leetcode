{"id":981721285,"lang":"java","lang_name":"Java","time":"3 hours, 23 minutes","timestamp":1687968612,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/981721285/","is_pending":"Not Pending","title":"Egg Drop With 2 Eggs and N Floors","memory":"40.3 MB","code":"class Solution \n{\n    public int solve(int f,int e,int[][] dp)\n    {\n        if(f<2 || e==1) return f;\n        if(dp[f][e]!=-1) return dp[f][e];\n        \n        int min=f;\n        \n        for(int i=1;i<=f;++i)\n        {\n            int Break=solve(i-1,e-1,dp);\n            int notBreak=solve(f-i,e,dp);\n            int worstCase=1+Math.max(Break,notBreak);\n            min=Math.min(min,worstCase);\n        }\n        \n        return dp[f][e]=min;\n    }\n    public int twoEggDrop(int n) \n    {\n        int eggs=2;\n        int[][] dp=new int[n+1][3];\n        /*for(int[] row : dp)\n            Arrays.fill(row,-1);\n        \n        return solve(n,2,dp);\n        */\n        for(int f=1;f<=n;++f)\n        {\n            for(int e=1;e<=2;++e)\n            {\n                if(f<=2 || e==1)\n                {\n                    dp[f][e]=f;\n                    continue;\n                }\n                int min=(int)Math.pow(10,9);\n        \n                for(int i=1;i<f;++i)\n                {\n                    int Break=dp[i-1][e-1];\n                    int notBreak=dp[f-i][e];\n                    int worstCase=1+Math.max(Break,notBreak);\n                    min=Math.min(min,worstCase);\n                }\n        \n                dp[f][e]=min;\n            }\n        }\n        return dp[n][2];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"egg-drop-with-2-eggs-and-n-floors","has_notes":false}