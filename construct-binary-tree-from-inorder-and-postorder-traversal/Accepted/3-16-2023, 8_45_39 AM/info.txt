{"id":916019355,"lang":"java","lang_name":"Java","time":"3 months, 2 weeks","timestamp":1678936539,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/916019355/","is_pending":"Not Pending","title":"Construct Binary Tree from Inorder and Postorder Traversal","memory":"42.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode buildTree(int[] inorder, int[] postorder) {\n        HashMap<Integer,Integer> map=new HashMap<>();\n        for(int i=0;i<postorder.length;i++){\n            map.put(inorder[i],i);\n        }\n        int postStart=0;\n        int postEnd=postorder.length-1;\n        int inStart=0;\n        int inEnd=inorder.length-1;\n        return helper(postStart,postEnd,inStart,inEnd,postorder,inorder,map);\n    }\n    public TreeNode helper(int postStart,int postEnd,int inStart,int inEnd,int[] postorder,int[] inorder,\n    HashMap<Integer,Integer> map){\n        if(inStart>inEnd||postStart>postEnd){\n            return null;\n        }\n        TreeNode root=new TreeNode(postorder[postEnd]);\n        int posOfRoot=map.get(root.val);\n        int numsLeft=posOfRoot-inStart;\n        root.left=helper(postStart,postStart+numsLeft-1,inStart,posOfRoot-1,postorder,inorder,map);\n        root.right=helper(postStart+numsLeft,postEnd-1,posOfRoot+1,inEnd,postorder,inorder,map);\n        return root;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-inorder-and-postorder-traversal","has_notes":false}