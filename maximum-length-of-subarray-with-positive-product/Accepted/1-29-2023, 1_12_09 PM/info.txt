{"id":887335524,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1674978129,"status":10,"status_display":"Accepted","runtime":"67 ms","url":"/submissions/detail/887335524/","is_pending":"Not Pending","title":"Maximum Length of Subarray With Positive Product","memory":"59.4 MB","code":"class Solution {\n    public int getMaxLen(int[] nums) {\n        int start=0;\n        int end=0;\n        int ans=0;\n       while(end<nums.length){\n           if(nums[end]==0){\n               ans=Math.max(fnc(nums,start,end),ans);\n               start=end+1;\n           }\n           end++;\n       }\n\n       ans=Math.max(ans,fnc(nums,start,end));\n       return ans;\n    }\n  \n\n   public int fnc(int[] nums,int start,int end){\n       System.out.println(start +\" \" + end);\n       List<Integer> ls=new ArrayList<>();\n       for(int i=start;i<end;i++){\n           if(nums[i]<0){\n               ls.add(i);\n           }\n       }\n      \n       if(ls.size()%2==0){\n           return end-start;\n       }\n       else{\n           return Math.max(end-ls.get(0)-1,ls.get(ls.size()-1)-start);\n       }\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-subarray-with-positive-product","has_notes":false}