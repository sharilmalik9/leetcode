{"id":962067703,"lang":"java","lang_name":"Java","time":"3 weeks, 5 days","timestamp":1685679248,"status":10,"status_display":"Accepted","runtime":"103 ms","url":"/submissions/detail/962067703/","is_pending":"Not Pending","title":"Detonate the Maximum Bombs","memory":"43.8 MB","code":"class Solution {\n    int count = 0; // global variable, otherwise use an array\n    public int maximumDetonation(int[][] bombs) {\n        int n = bombs.length;\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            count = 0; // Start a new search, reset count\n            dfs(i, new boolean[n], bombs);\n            ans = Math.max(ans, count);\n        }\n        return ans;\n    }\n\n    private void dfs(int idx, boolean[] v, int[][] bombs) {\n        count++;\n        v[idx] = true;\n        int n = bombs.length;\n        for (int i = 0; i < n; i++) {\n            if (!v[i] && inRange(bombs[idx], bombs[i])) {\n                v[i] = true;\n                dfs(i, v, bombs);\n            }\n        }\n    }\n\n    private boolean inRange(int[] a, int[] b) {\n        long dx = a[0] - b[0], dy = a[1] - b[1], r = a[2];\n        return dx * dx + dy * dy <= r * r;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"detonate-the-maximum-bombs","has_notes":false}