{"id":827067708,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666326792,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/827067708/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"43.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    TreeNode prev;\n    public void flatten(TreeNode root) {\n        if(root==null){\n            return;\n        }\n        flatten(root.right);\n        flatten(root.left);\n        root.right=prev;\n        root.left=null;\n        prev=root;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false}