{"id":825804595,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666170228,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/825804595/","is_pending":"Not Pending","title":"Minimum Difficulty of a Job Schedule","memory":"42.3 MB","code":"class Solution {\n    \n    Integer[][] dp;\n    int n;\n    \n    public int Helper(int idx, int[] arr, int d){\n        \n        if(idx == n && d == 0)    return 0;\n        if(n - idx < d)           return (int)1e5;          // only for optimization not necessary\n        if(d < 0)                 return (int)1e5;\n\t\t\n        if(dp[idx][d] != null)      return dp[idx][d];\n        \n        int max = 0;\n        int res = Integer.MAX_VALUE;\n        \n        for(int i = idx; i < n; ++i){\n            max = Math.max(arr[i], max);\n            res = Math.min(res, max + Helper(i + 1, arr, d - 1));\n        }\n    \n        return dp[idx][d] = res;\n    }\n    \n    public int minDifficulty(int[] jobDifficulty, int d) {\n        this.n = jobDifficulty.length;\n\t\tthis.dp = new Integer[n][d + 1]; \n\t\t\n        if(n < d)   return -1;\n       \n        return Helper(0, jobDifficulty, d);\n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"minimum-difficulty-of-a-job-schedule","has_notes":false}