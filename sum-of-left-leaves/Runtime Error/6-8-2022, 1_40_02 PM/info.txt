{"id":717170450,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1654675802,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/717170450/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumOfLeftLeaves(TreeNode root) {\n        if(root==null){\n            return 0;\n        }\n        int sum=0;\n        TreeNode left=root.left;\n        TreeNode right=root.right;\n        while(left.left!=null){\n            left=left.left;\n        }\n        while(right.left!=null){\n            right=right.left;\n        }\n        if(left.left==null && left.right==null){\n            sum+=left.val;\n        }\n        if(right.left==null && right.right==null){\n            sum+=right.val;\n        }\n        return sum;\n    }\n}","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"sum-of-left-leaves","has_notes":false}