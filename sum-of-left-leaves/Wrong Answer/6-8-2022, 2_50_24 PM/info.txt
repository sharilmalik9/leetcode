{"id":717203500,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1654680024,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/717203500/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumOfLeftLeaves(TreeNode root) {\n        if(root==null){\n            return 0;\n        }\n        int sum=0;\n        if(root.left!=null){\n        TreeNode left1=root.left;\n             while(left1.left!=null){\n               left1=left1.left;\n        }\n            if(left1.left==null && left1.right==null){\n              sum+=left1.val;\n        }\n        }\n        else{\n            return 0;\n        }\n        if(root.right!=null){\n        TreeNode right1=root.right;\n            while(right1.left!=null){\n            right1=right1.left;\n        }\n            if(right1.left==null && right1.right==null){\n            sum+=right1.val;\n        }\n        }\n       \n        \n      \n       \n        return sum;\n    }\n}","compare_result":"1111001111101010000000000100100001111101011011110010010110111110010011111010001110010001000110010100","title_slug":"sum-of-left-leaves","has_notes":false}