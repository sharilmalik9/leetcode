{"id":726907039,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1655745911,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/726907039/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"39.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumOfLeftLeaves(TreeNode root) {\n       if(root==null){\n           return 0;\n       }\n        if(root.left!=null && root.left.left==null && root.left.right==null){\n            return root.left.val+sumOfLeftLeaves(root.left)+sumOfLeftLeaves(root.right);\n        }\n        return sumOfLeftLeaves( root.left)+sumOfLeftLeaves( root.right);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false}