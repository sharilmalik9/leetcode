{"id":968254353,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1686418513,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/968254353/","is_pending":"Not Pending","title":"Maximum Value at a Given Index in a Bounded Array","memory":"5.9 MB","code":"#define ll long long int\nclass Solution {\npublic:\nint maxValue(int n, int index, int maxSum) {\nint emptyR = n - index - 1;\nint emptyL = index;\nint h = maxSum, l = 1;\nll res = 0;\nwhile(l <= h){\nint mid = (h-l)/2 + l;\nll leftSum = 0, rightSum=0, el=mid-1;\nif(emptyR <= el)\n\nrightSum = (el*(el+1))/2 - ((el-emptyR)*(el-emptyR+1))/2;\nelse\nrightSum = (el*(el+1))/2 + (emptyR - el);\nif(emptyL <= el)\nleftSum = (el*(el+1))/2 - ((el-emptyL)*(el-emptyL+1))/2;\nelse\nleftSum = (el*(el+1))/2 + (emptyL - el);\nll sum = leftSum + mid + rightSum;\nif(sum <= maxSum){\nl = mid+1;\nres = mid;\n}else{\nh = mid-1;\n}\n}\nreturn res;\n}\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-value-at-a-given-index-in-a-bounded-array","has_notes":false}