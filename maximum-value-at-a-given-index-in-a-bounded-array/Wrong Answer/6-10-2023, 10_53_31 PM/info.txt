{"id":968247120,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1686417811,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/968247120/","is_pending":"Not Pending","title":"Maximum Value at a Given Index in a Bounded Array","memory":"N/A","code":"class Solution {\n    public int maxValue(int n, int index, int maxSum) {\n        int start=0;\n        int end=maxSum-n;\n        int ans=-1;\n        while(start<=end){\n            int mid=(end-start)/2+start;\n            if(check(index,n,maxSum,mid)){\n                ans=mid;\n                start=mid+1;\n            }\n            else{\n                end=mid-1;\n            }\n        }\n        return ans;\n    }\n    public boolean check(int index,int n,int maxSum,int mid){\n        int rightsum=0;\n        int emptyr=n-index-1;\n        int emptyl=index;\n        int el=mid-1;\n        if(emptyr>el){\n            rightsum=el*(el+1)/2+emptyr-el;\n            \n        }\n        else{\n            rightsum=el*(el+1)/2-(-emptyr+el)*(-emptyr+el+1)/2;\n\n        }\n        int leftsum=0;\n        if(emptyl>el){\n            leftsum=el*(el+1)/2+emptyl-el;\n\n        }\n        else{\n            leftsum=el*(el+1)/2-(-emptyl+el)*(-emptyl+el+1)/2;\n\n        }\n   \n        if(leftsum+rightsum+mid<=maxSum){\n            return true;\n        }\n        return false;\n    }\n}","compare_result":"1111100001011111110111111100111111101010111101111111100010101001000101100100001000000000010010000101000001000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-value-at-a-given-index-in-a-bounded-array","has_notes":false}