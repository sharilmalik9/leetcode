{"id":961478220,"lang":"java","lang_name":"Java","time":"3 weeks, 6 days","timestamp":1685605161,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/961478220/","is_pending":"Not Pending","title":"Longest Increasing Subsequence II","memory":"N/A","code":"class Solution {\n    public int lengthOfLIS(int[] nums, int k) {\n        int[] dp=new int[nums.length];\n        Arrays.fill(dp,1);\n        int ans=1;\n        for(int i=0;i<nums.length;i++){\n            for(int j=0;j<i;j++){\n                if(nums[j]<nums[i] && nums[i]-nums[j]<=k){\n                    dp[i]=Math.max(dp[i],1+dp[j]);\n                }\n            }\n            ans=Math.max(ans,dp[i]);\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111000000000000","title_slug":"longest-increasing-subsequence-ii","has_notes":false}