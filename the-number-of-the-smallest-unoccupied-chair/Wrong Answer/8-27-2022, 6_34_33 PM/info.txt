{"id":784692827,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1661605473,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/784692827/","is_pending":"Not Pending","title":"The Number of the Smallest Unoccupied Chair","memory":"N/A","code":"class Solution {\n    class pair{\n        boolean arrival;\n        int index;\n        int time;\n        pair(boolean arrival,int index,int time){\n            this.arrival=arrival;\n                this.index=index;\n            this.time=time;\n}\n    }\n    \n    public int smallestChair(int[][] times, int targetFriend) {\n        PriorityQueue<pair> pq= new PriorityQueue<>((a,b)->a.time-b.time);\n        for(int i=0;i<times.length;i++){\n            pair pp= new pair(true,i,times[i][0]);\n            pair pp1= new pair(false,i,times[i][1]);\n            pq.add(pp);\n            pq.add(pp1);  \n            \n}\n        HashMap<Integer,Integer> hp= new HashMap<>();\n        PriorityQueue<Integer> left= new PriorityQueue<>();\n        int[] arr= new int[times.length];\n        int end=0;\n        int empty=0;\n        while(pq.size()!=0){\n            pair curr= pq.poll();\n            if(curr.arrival){\n                if(left.size()!=0){\n                    empty=left.poll();\n                    arr[empty]=curr.index;\n                    hp.put(curr.index,empty);\n                    if(curr.index==targetFriend){\n                        return empty;\n                    }\n                              \n                    \n          }\n                else{\n                    arr[end]=curr.index;\n                    hp.put(curr.index,end);\n                     if(curr.index==targetFriend){\n                           return end;\n                     }\n                    \n                    end++;\n                  \n                   \n                    \n                }        \n                \n         }\n            else{\n               int hey= hp.get(curr.index);\n                hp.remove(curr.index);\n               left.add(hey);\n                \n            }\n            \n        }\n       return -1 ; \n      \n        \n        \n        \n    }\n}","compare_result":"11101111101111111111111111111111111110111011111111111111111100011","title_slug":"the-number-of-the-smallest-unoccupied-chair","has_notes":false}