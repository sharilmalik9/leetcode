{"id":697331280,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1652258512,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/697331280/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        ListNode a=headA;\n        ListNode b=headB;\n        int count1=0;\n        int count2=0;\n        if(a==null|| b==null){\n            return null;\n        }\n        while(a!=null){\n            count1++;\n            a=a.next;\n        }\n        while(b!=null){\n            count2++;\n            b=b.next;\n        }\n        ListNode a1=headA;\n        ListNode b1=headB;\n        \n    \n        if(count1>count2){\n            int difference= count1-count2;\n            while(difference!=0){\n                a1=a1.next;\n                difference--;\n                \n            }\n    \n        }\n        if(count2>count1){\n            int difference1= count2-count1;\n            while(difference1!=0){\n                b1=b1.next;\n                difference1--;\n            }\n            \n            \n        }\n        while(a1!=null && b1!=null){\n            if(a1.val==b1.val){\n                return a1;\n            }\n            else{\n                a1=a1.next;\n                b1=b1.next;\n            }\n        }\n        return null;\n        \n        \n    }\n}","compare_result":"011011111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false}