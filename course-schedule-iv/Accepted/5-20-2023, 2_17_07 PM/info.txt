{"id":953798918,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1684572427,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/953798918/","is_pending":"Not Pending","title":"Course Schedule IV","memory":"47.2 MB","code":"class Solution {\n    public List<Boolean> checkIfPrerequisite(int n, int[][] preReqs, int[][] queries){\n        int[] inDegree=new int[n];\n        List<List<Integer>> adj=new ArrayList<>();\n        for(int i=0;i<n;i++) adj.add(new ArrayList<>());\n        for(int i=0;i<preReqs.length;i++) {\n            adj.get(preReqs[i][0]).add(preReqs[i][1]);\n            inDegree[preReqs[i][1]]++;\n        }\n        boolean[][] isPreq=new boolean[n][n];\n        Queue<Integer> q=new LinkedList<>();\n        for(int i=0;i<n;i++){\n            if(inDegree[i]==0) q.add(i); \n        }\n        while(!q.isEmpty()){\n            int node=q.poll();\n            for(int adjNode:adj.get(node)){\n                isPreq[node][adjNode]=true;\n                for(int i=0;i<n;i++){\n                    if(isPreq[i][node]) isPreq[i][adjNode]=true;\n                }\n                inDegree[adjNode]--;\n                if(inDegree[adjNode]==0) q.add(adjNode);\n            }\n        }\n        List<Boolean> res=new ArrayList<>();\n        for(int i=0;i<queries.length;i++){\n            int first=queries[i][0];\n            int second=queries[i][1];\n            res.add(isPreq[first][second]);\n        }\n        return res;\n    }\n} \n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"course-schedule-iv","has_notes":false}