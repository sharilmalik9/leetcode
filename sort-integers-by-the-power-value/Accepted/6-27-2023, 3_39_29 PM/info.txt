{"id":980732907,"lang":"java","lang_name":"Java","time":"1 day, 9 hours","timestamp":1687860569,"status":10,"status_display":"Accepted","runtime":"46 ms","url":"/submissions/detail/980732907/","is_pending":"Not Pending","title":"Sort Integers by The Power Value","memory":"43.8 MB","code":"class Solution {\n    public int getKth(int lo, int hi, int k) {\n       HashMap<Integer,Integer> hm=new HashMap<>();\n      hm.put(1,0);\n     PriorityQueue<int[]> pq=new PriorityQueue<>((a,b)-> a[1]==b[1] ? a[0]-b[0] : a[1]-b[1]);\n       for(int i=lo;i<=hi;i++){\n           int hehe=help(i,hm);\n           pq.add(new int[]{i,hehe});\n          \n       }\n       int ans=-1;\n       while(k-->0){\n           ans=pq.poll()[0];\n       }\n       return ans;\n       \n       \n     \n    }\n    public int help(int ele,HashMap<Integer,Integer> hm){\n        if(ele==1){\n            return 0;\n        }\n        if(hm.containsKey(ele)){\n            return hm.get(ele);\n        }\n        int ans=0;\n        if(ele%2==0){\n            ans=help(ele/2,hm)+1;\n        }\n\n        else{\n            ans=help(3*ele+1,hm)+1;\n        }\n        hm.put(ele,ans);\n\n        return ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-integers-by-the-power-value","has_notes":false}