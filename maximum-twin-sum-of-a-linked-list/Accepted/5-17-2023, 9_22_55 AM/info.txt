{"id":951814696,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1684295575,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/951814696/","is_pending":"Not Pending","title":"Maximum Twin Sum of a Linked List","memory":"65.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public int pairSum(ListNode head) {\n        int n=0;\n        ListNode pp=head;\n        while(pp!=null){\n            pp=pp.next;\n            n++;\n        }\n        Stack<Integer> st= new Stack<>();\n        int end=n/2-1;\n        ListNode endn=head;\n        int idx=0;\n    \n        while(idx<=end){\n            st.push(endn.val);\n            endn=endn.next;\n            idx++;\n        }\n        System.out.println(endn.val+\" \" + n);\n        int ans=0;\n        while(endn!=null){\n            ans=Math.max(ans,st.pop()+endn.val);\n            head=head.next;\n            endn=endn.next;\n        }\n        return ans;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"maximum-twin-sum-of-a-linked-list","has_notes":false}