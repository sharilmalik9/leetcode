{"id":945848966,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1683432316,"status":10,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/945848966/","is_pending":"Not Pending","title":"Find the Longest Valid Obstacle Course at Each Position","memory":"55.4 MB","code":"class Solution {\n    public int[] longestObstacleCourseAtEachPosition(int[] obstacles) {\n        int[] stack = new int[obstacles.length];\n        int top = -1;\n        int[] res = new int[obstacles.length];\n        for (int i = 0; i < obstacles.length; i++) {\n            if (top == -1 || obstacles[i] >= stack[top]) {\n                stack[++top] = obstacles[i];\n                res[i] = top + 1;\n            } else {\n                int l = 0, r = top, m;\n                while (l < r) {\n                    m = l + (r - l) / 2;\n                    if (stack[m] <= obstacles[i]) {\n                        l = m + 1;\n                    } else {\n                        r = m;\n                    }\n                }\n                stack[r] = obstacles[i];\n                res[i] = r + 1;\n            }\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-longest-valid-obstacle-course-at-each-position","has_notes":false}