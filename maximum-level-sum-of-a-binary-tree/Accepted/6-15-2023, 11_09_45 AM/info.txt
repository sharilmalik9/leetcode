{"id":971634706,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1686807585,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/971634706/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"46.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxLevelSum(TreeNode root) {\n        if (root == null){\n            return 0;\n        }\n        int maxSum = -100000;\n        int level = 0;\n        int maxLevel = 0;\n        Queue<TreeNode> q = new LinkedList<TreeNode>();\n        q.add(root);\n        while(!q.isEmpty()){\n            int currentSum = 0;\n            int size = q.size();\n            for (int i = 0; i < size; i++){\n                TreeNode temp = q.remove();\n                if (temp.left != null){\n                    q.add(temp.left);\n                }\n                if (temp.right != null){\n                    q.add(temp.right);\n                }\n                currentSum += temp.val;\n            }\n            level++;\n            if (currentSum > maxSum){\n                maxSum = currentSum;\n                maxLevel = level;\n            }\n        }\n        return maxLevel;\n    }\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false}