{"id":955758667,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1684842608,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/955758667/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"49.1 MB","code":"class KthLargest {\n\n    private PriorityQueue<Integer> minHeap;\n    int heapSize;\n\n    public KthLargest(int k, int[] nums) {\n        minHeap = new PriorityQueue<>();\n        heapSize = k;\n\n        for (int num : nums) {\n            minHeap.offer(num);\n\n            if (minHeap.size() > heapSize) {\n                minHeap.poll();\n            }\n        }\n    }\n    \n    public int add(int val) {\n        minHeap.offer(val);\n\n        if (minHeap.size() > heapSize) {\n            minHeap.poll();\n        }\n\n        return minHeap.peek();\n    }\n}\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest obj = new KthLargest(k, nums);\n * int param_1 = obj.add(val);\n */","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false}