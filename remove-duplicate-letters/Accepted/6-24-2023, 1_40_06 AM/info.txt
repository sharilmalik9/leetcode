{"id":978106803,"lang":"java","lang_name":"Java","time":"4 days, 23 hours","timestamp":1687551006,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/978106803/","is_pending":"Not Pending","title":"Remove Duplicate Letters","memory":"41.1 MB","code":"class Solution {\n    public String removeDuplicateLetters(String s) {\n        char[] hm=s.toCharArray();\n        Stack<Integer> st=new Stack<>();\n        int[] arr=new int[26];\n        for(int i=0;i<s.length();i++){\n            arr[s.charAt(i)-'a']=i;\n        }\n\n        boolean[] vis=new boolean[26];\n        for(int i=0;i<hm.length;i++){\n            if(vis[hm[i]-'a']){\n                continue;\n            }\n\n        \n                while(st.size()!=0  && hm[st.peek()]-'a'>hm[i]-'a' && i<arr[hm[st.peek()]-'a']){\n                   \n                     vis[hm[st.pop()]-'a']=false;\n                   \n\n                }\n\n                \n                      st.add(i);\n                      vis[hm[i]-'a']=true;\n                \n            }\n        \n\n        StringBuilder sb=new StringBuilder();\n        while(st.size()!=0){\n            sb.append(hm[st.pop()]);\n        }\n        return sb.reverse().toString();\n        \n    }\n}\n// class Solution {\n//     public String removeDuplicateLetters(String s) {\n//         int[] lastIndex = new int[26];\n//         for (int i = 0; i < s.length(); i++){\n//             lastIndex[s.charAt(i) - 'a'] = i; // track the lastIndex of character presence\n//         }\n        \n//         boolean[] seen = new boolean[26]; // keep track seen\n//         Stack<Integer> st = new Stack();\n        \n//         for (int i = 0; i < s.length(); i++) {\n//             int curr = s.charAt(i) - 'a';\n//             if (seen[curr]) continue; // if seen continue as we need to pick one char only\n//             while (!st.isEmpty() && st.peek() > curr && i < lastIndex[st.peek()]){\n//                 seen[st.pop()] = false; // pop out and mark unseen\n//             }\n//             st.push(curr); // add into stack\n//             seen[curr] = true; // mark seen\n//         }\n\n//         StringBuilder sb = new StringBuilder();\n//         while (!st.isEmpty())\n//             sb.append((char) (st.pop() + 'a'));\n//         return sb.reverse().toString();\n//     }\n// }","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicate-letters","has_notes":false}