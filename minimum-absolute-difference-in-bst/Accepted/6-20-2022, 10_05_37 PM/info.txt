{"id":726869258,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1655742937,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/726869258/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"48 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    ArrayList<Integer> arr= new ArrayList<>();\n    public void returnarray(TreeNode root, ArrayList<Integer> arr){\n        if(root==null){\n            return ;\n        }\n         returnarray(root.left,arr);\n        arr.add(root.val);\n      \n        returnarray(root.right,arr);\n        \n    }\n    public int getMinimumDifference(TreeNode root) {\n         returnarray(root,arr);\n        int min=-arr.get(0)+arr.get(1);\n        int curr=0;\n      //  returnarray(root,arr);\n        for(int i=0;i<arr.size()-1;i++){\n            curr=-arr.get(i)+arr.get(i+1);\n            if(min>curr){\n                min=curr;\n            }\n            \n            \n            \n            \n        }\n        System.out.println(arr);\n        return min;\n        \n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-absolute-difference-in-bst","has_notes":false}