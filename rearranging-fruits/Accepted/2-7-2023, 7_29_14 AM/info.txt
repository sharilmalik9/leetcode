{"id":893015900,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1675735154,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/893015900/","is_pending":"Not Pending","title":"Rearranging Fruits","memory":"58.9 MB","code":"class Solution {\n    public long minCost(int[] basket1, int[] basket2) {\n        HashMap<Integer,Integer> hm= new HashMap<>();\n        for(int c: basket1){\n            hm.put(c,hm.getOrDefault(c,0)+1);\n        }\n         for(int c: basket2){\n            hm.put(c,hm.getOrDefault(c,0)-1);\n        }\n        List<Integer> last= new ArrayList<>();\n        for(Map.Entry<Integer,Integer> e: hm.entrySet()){\n            int v=e.getValue();\n            if(v%2!=0){\n                return -1;\n            }\n            for(int i=0;i<Math.abs(v)/2;i++){\n                last.add(e.getKey());\n            }\n        }\n        int min=Math.min(Arrays.stream(basket1).min().getAsInt(),Arrays.stream(basket2).min().getAsInt());\n        Collections.sort(last);\n        long res=0;\n        for(int i=0;i<last.size()/2;i++){\n        res+=Math.min(last.get(i),2*min);\n        }\n        return res;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"rearranging-fruits","has_notes":false}