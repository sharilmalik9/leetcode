{"id":958381496,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1685200890,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/958381496/","is_pending":"Not Pending","title":"Maximum Strength of a Group","memory":"N/A","code":"class Solution {\n    public long maxStrength(int[] nums) {\n        Arrays.sort(nums);\n       // int[] arr= new int[nums.length];\n        for(int i = 0; i < nums.length / 2; i++) {\n            // Swapping the elements\n            int j = nums[i];\n            nums[i] = nums[nums.length - i - 1];\n            nums[nums.length - i - 1] = j;\n        }\n     System.out.println(Arrays.toString(nums));\n        int neg=0;\n        long ans=1;\n        boolean contain=false;\n       \n        \n        for(int i:nums){\n            if(i<0){\n                neg++;\n            }\n        }\n        if(neg%2==0){\n            for(int i:nums){\n                if(i==0){\ncontinue;}\n                ans=ans*i;\n            }\n        }\n        else{\n            for(int i=0;i<nums.length;i++){\n                if(nums[i]==0 && !(neg ==1 && nums.length==2)){\n                    continue;\n                }\n                if(nums[i]<0 && !contain){\n                    contain=true;\n                    continue;\n                }\n                ans=ans*nums[i];\n            }\n        }\n        if(neg==1 && nums.length==1){\n            return nums[0];\n        }\n       \n        return ans; \n    }\n}","compare_resulttitle_slug":"maximum-strength-of-a-group","has_notes":false}