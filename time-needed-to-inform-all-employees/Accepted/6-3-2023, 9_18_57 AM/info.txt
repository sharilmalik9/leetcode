{"id":962711155,"lang":"java","lang_name":"Java","time":"3 weeks, 4 days","timestamp":1685764137,"status":10,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/962711155/","is_pending":"Not Pending","title":"Time Needed to Inform All Employees","memory":"64.6 MB","code":"class Solution {\n    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {\n       \n    Map<Integer,List<Integer>> map = new HashMap<Integer,List<Integer>>();\n    for(int i = 0; i < n; i++){\n        if(manager[i] != -1){\n            List<Integer> list = map.getOrDefault(manager[i], new ArrayList<>());\n            list.add(i);\n            map.put(manager[i],list);\n        }\n    }\n    Queue<int[]> q = new LinkedList<>();\n    q.add(new int[]{headID,0});\n    int res = 0;\n    while(!q.isEmpty()){\n        int[] cur = q.poll();\n        int boss = cur[0], time = cur[1];\n        res = Math.max(res, time);\n        if(map.containsKey(boss)){\n            for(int child: map.get(boss)){\n                q.add(new int[]{child, time+informTime[boss]});\n            }\n        }\n        \n    }\n    return res;\n        \n        \n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"time-needed-to-inform-all-employees","has_notes":false}