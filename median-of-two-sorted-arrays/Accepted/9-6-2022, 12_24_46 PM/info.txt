{"id":792797735,"lang":"java","lang_name":"Java","time":"9 months, 3 weeks","timestamp":1662447286,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/792797735/","is_pending":"Not Pending","title":"Median of Two Sorted Arrays","memory":"50.3 MB","code":"class Solution {\n    public double findMedianSortedArrays(int[] nums1, int[] nums2) {\n        int[] mergedArray = mergeArray(nums1, nums2);\n        int sizeOfArray = mergedArray.length;\n        int mid = (mergedArray.length - 1) / 2; //Finding the mid index of the array.\n        mid = Math.abs(mid); //Index can not be negative.\n        double ans = 0.0;\n\t\t//If size of array is even.\n        if((sizeOfArray & 1) == 0) {\n            ans = (double)(mergedArray[mid] + mergedArray[mid + 1]) / 2;\n        }else{\n            ans = (double)mergedArray[mid];\n        }\n        \n        return ans;\n    }\n    \n\t//Function to merge Arrays and return the sorted merged Array.\n    public int[] mergeArray(int[] nums1, int[] nums2){\n        int[] mArray = new int[nums1.length + nums2.length]; //Delearing temp Array.\n        int i = 0;\n        int j = 0;\n        int k = 0;\n\t\t\n\t\t//Copying First Array into temp array.\n        while(i < nums1.length){\n            mArray[k++] = nums1[i++];\n        }\n\n\t\t//Copying second array into the temp array.\n        while(j < nums2.length){\n            mArray[k++] = nums2[j++];\n\n        }\n\t\t\n\t//\tsorting the tempArray;\n        Arrays.sort(mArray);\n        return mArray;\n    }\n}","compare_resulttitle_slug":"median-of-two-sorted-arrays","has_notes":false}