{"id":856365654,"lang":"java","lang_name":"Java","time":"6 months, 3 weeks","timestamp":1670460596,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/856365654/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"42.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private void generate(List<Integer> res ,TreeNode node){\n        if(node==null){\n            return;\n        }\n        if(node.left==null&&node.right==null){\n            res.add(node.val);\n            return;\n        }\n        generate(res,node.left);\n        generate(res,node.right);\n    }\n    public boolean leafSimilar(TreeNode root1, TreeNode root2) {\n        List<Integer> list1 = new ArrayList<>();\n        List<Integer> list2 = new ArrayList<>();\n        generate(list1,root1);\n        generate(list2,root2);\n        return list1.equals(list2);\n        \n    }\n}\n","compare_result":"11111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false}