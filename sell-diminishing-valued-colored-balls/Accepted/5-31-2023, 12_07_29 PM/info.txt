{"id":960752297,"lang":"java","lang_name":"Java","time":"4Â weeks","timestamp":1685515049,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/960752297/","is_pending":"Not Pending","title":"Sell Diminishing-Valued Colored Balls","memory":"54 MB","code":"class Solution {\n\n    private static final int MOD = (int) 1e9 + 7;\n\n    public int maxProfit(int[] inventory, int orders) {\n        int n = inventory.length;\n        int max = 0;\n\n        for (int x : inventory) {\n            max = Math.max(max, x);\n        }\n\n        int l = 0, r = max;\n\n        while (l < r) {\n            int mid = l + (r - l) / 2;\n\n            if (isValid(inventory, orders, mid)) {\n                r = mid;\n            } else {\n                l = mid + 1;\n            }\n        }\n\n        long res = 0;\n\n        for (int x : inventory) {\n            if (x > l) {\n                res += (long) (x + l + 1) * (x - l) / 2;\n                res %= MOD;\n                orders -= x - l;\n            }\n        }\n        \n\n        res += (long) l * orders;\n\n        return (int) (res % MOD);\n    }\n\n    private boolean isValid(int[] inventory, int orders, int mid) {\n        long sum = 0;\n\n        for (int x : inventory) {\n            sum += Math.max(x - mid, 0);\n        }\n\n        return sum <= orders;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sell-diminishing-valued-colored-balls","has_notes":false}