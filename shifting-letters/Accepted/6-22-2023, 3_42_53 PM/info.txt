{"id":977012392,"lang":"java","lang_name":"Java","time":"6 days, 9 hours","timestamp":1687428773,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/977012392/","is_pending":"Not Pending","title":"Shifting Letters","memory":"54.5 MB","code":"class Solution {\n    /**\n        Time complexity: O(n)\n        Space complexity: O(n)\n     */\n    public String shiftingLetters(String s, int[] shifts) {\n        char[] chars = s.toCharArray();\n        int n = shifts.length;\n\n        shifts[n - 1] %= 26;\n        for (int i = n - 2; i >= 0; i--)\n            shifts[i] = shifts[i] + shifts[i + 1] % 26;\n        for (int j = 0; j < n; j++)\n            chars[j] = (char) ((chars[j] - 'a' + shifts[j]) % 26 + 'a');\n        return new String(chars);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"shifting-letters","has_notes":false}