{"id":813280701,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1664689306,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/813280701/","is_pending":"Not Pending","title":"Shortest Common Supersequence ","memory":"48.6 MB","code":"class Solution {\n    public String shortestCommonSupersequence(String s1, String s2) {\n        int n = s1.length();\n  int m = s2.length();\n\n  int[][] dp =new int[n+1][m+1];\n  for (int i = 0; i <= n; i++) {\n    dp[i][0] = 0;\n  }\n  for (int i = 0; i <= m; i++) {\n    dp[0][i] = 0;\n  }\n\n  for (int ind1 = 1; ind1 <= n; ind1++) {\n    for (int ind2 = 1; ind2 <= m; ind2++) {\n      if (s1.charAt(ind1 - 1) == s2.charAt(ind2 - 1))\n        dp[ind1][ind2] = 1 + dp[ind1 - 1][ind2 - 1];\n      else\n        dp[ind1][ind2] = 0 + Math.max(dp[ind1 - 1][ind2], dp[ind1][ind2 - 1]);\n    }\n  }\n\n  int len = dp[n][m];\n  int i = n;\n  int j = m;\n\n  int index = len - 1;\n  String ans = \"\";\n\n  while (i > 0 && j > 0) {\n    if (s1.charAt(i - 1) == s2.charAt(j - 1)) {\n      ans += s1.charAt(i-1);\n      index--;\n      i--;\n      j--;\n    } else if (dp[i - 1][j] > dp[i][j - 1]) {\n        ans += s1.charAt(i-1);\n        i--;\n    } else {\n        ans += s2.charAt(j-1);\n        j--;\n    }\n  }\n  \n  //Adding Remaing Characters - Only one of the below two while loops will run \n  \n  while(i>0){\n      ans += s1.charAt(i-1);\n      i--;\n  }\n  while(j>0){\n      ans += s2.charAt(j-1);\n      j--;\n  }\n\n  String ans2=new StringBuilder(ans).reverse().toString();\n  \n  return ans2;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"shortest-common-supersequence","has_notes":false}