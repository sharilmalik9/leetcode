{"id":970891413,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1686724855,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/970891413/","is_pending":"Not Pending","title":"Maximum Gap","memory":"N/A","code":"// vv new concept\n// bucket using \n// watch video \nclass Solution {\n    public int maximumGap(int[] nums) {\n        int n=nums.length;\n        if(n==0 || n==1){\n            return 0;\n        }\n       int min=nums[0];\n       int max=0;\n       for(int i=0;i<nums.length;i++){\n           min=Math.min(min,nums[i]);\n           max=Math.max(max,nums[i]);\n       }\n       int interval=(int)((max-min+0.0)/(n-1));\n       int[] minbucket=new int[n-1];\n       int[] maxbucket=new int[n-1];\n       Arrays.fill(minbucket,Integer.MAX_VALUE);\n       Arrays.fill(maxbucket,-1);\n       int ans=0;\n       for(int i=0;i<nums.length;i++){\n           if(nums[i]==min || nums[i]==max){\n               continue;\n           }\n           int idx=(nums[i]-min)/interval;\n\n          minbucket[idx]=Math.min(minbucket[idx],nums[i]);\n          maxbucket[idx]=Math.max(maxbucket[idx],nums[i]);\n\n       }\n    int prev=min;\n    for(int i=0;i<n-1;i++){\n        if(maxbucket[i]==-1){\n            continue;\n\n        }\n        ans=Math.max(prev-minbucket[i],ans);\n        prev=maxbucket[i];\n    }\n       ans=Math.max(ans,max-prev);\n       return ans;  \n    }\n}","compare_result":"11111111000000000000000000000000000000000","title_slug":"maximum-gap","has_notes":false}