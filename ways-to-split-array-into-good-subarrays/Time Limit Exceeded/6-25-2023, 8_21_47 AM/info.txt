{"id":978931416,"lang":"java","lang_name":"Java","time":"3 days, 16 hours","timestamp":1687661507,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/978931416/","is_pending":"Not Pending","title":"Ways to Split Array Into Good Subarrays","memory":"N/A","code":"class Solution {\n    int[] pre;\n    int[] num;\n    Integer[] dp;\n    int mod=1000000007;\n    public int numberOfGoodSubarraySplits(int[] nums) {\n        num=nums;\n        dp=new Integer[nums.length+1];\n        pre=new int[nums.length];\n        pre[0]=nums[0];\n        for(int i=1;i<nums.length;i++){\n            pre[i]=pre[i-1]+nums[i];\n            \n        }\n        return rec(0);\n        \n        \n    }\n    public int rec(int idx){\n        if(idx>=num.length){\n            return 1;\n        }\n        if(dp[idx]!=null){\n            return dp[idx];\n        }\n        int ans=0;\n        for(int i=idx;i<num.length;i++){\n            if(num[idx]+pre[i]-pre[idx]==1){\n                ans=(ans+rec(i+1))%mod;\n            }\n            \n        }\n        return dp[idx]=ans%mod;\n    }\n}","compare_resulttitle_slug":"ways-to-split-array-into-good-subarrays","has_notes":false}