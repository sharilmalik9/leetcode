{"id":966744708,"lang":"java","lang_name":"Java","time":"2 weeks, 6 days","timestamp":1686240655,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/966744708/","is_pending":"Not Pending","title":"Random Pick with Weight","memory":"N/A","code":"class Solution {\n    int[] arr;\n    int sum;\n    int[] prefix;\n    public Solution(int[] w) {\n        arr=w;\n        Arrays.sort(arr);\n        sum=0;\n        prefix=new int[arr.length];\n        for(int i=0;i<arr.length;i++){\n            sum+=arr[i];\n            prefix[i]=sum;\n        }\n    }\n    \n    public int pickIndex(){\n        int idx=(int)Math.random()*sum;\n        return findindex(idx);  \n    }\n    public int findindex(int num){\n        int start=0;\n        int ans=-1;\n        int end=arr.length-1;\n        while(start<=end){\n            int mid=(start+end)/2;\n            if(prefix[mid]>=num){\n                ans=mid;\n                end=mid-1;\n\n            }\n            else{\n                start=mid+1;\n            }\n        }\n        return ans;\n\n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(w);\n * int param_1 = obj.pickIndex();\n */","compare_result":"111100000001000000000000000010010100001010001101110011011","title_slug":"random-pick-with-weight","has_notes":false}