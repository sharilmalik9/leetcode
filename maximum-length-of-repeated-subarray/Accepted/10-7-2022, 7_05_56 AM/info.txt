{"id":816878822,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1665106556,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/816878822/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"51.8 MB","code":"class Solution {\n    public int findLength(int[] nums1, int[] nums2) {\n        int i, j;\n        int n = nums1.length;\n        int m = nums2.length;\n        int dp[][] = new int[n+1][m+1];\n        \n        for(i=0;i<=n;i++){\n            dp[i][0] = 0;\n        }\n        \n        for(j=0;j<=m;j++){\n            dp[0][j] = 0;\n        }\n        \n        int ans = 0;\n        \n        for(i=1;i<=n;i++){\n            for(j=1;j<=m;j++){\n                if(nums1[i-1] == nums2[j-1]){\n                    dp[i][j] = dp[i-1][j-1] + 1;\n                }\n                if(dp[i][j] > ans){\n                    ans = dp[i][j];\n                }\n            }\n        }\n        \n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray","has_notes":false}