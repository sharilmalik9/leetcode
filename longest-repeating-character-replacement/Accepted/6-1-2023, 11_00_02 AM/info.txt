{"id":961406464,"lang":"java","lang_name":"Java","time":"3 weeks, 6 days","timestamp":1685597402,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/961406464/","is_pending":"Not Pending","title":"Longest Repeating Character Replacement","memory":"43.9 MB","code":"class Solution {\n    public int characterReplacement(String s, int k) {\n        char[] arr = s.toCharArray();\n        int left = 0, right = 0, n = arr.length;\n        \n        //Define table\n        Map<Character, Integer> hm = new HashMap<>();\n        \n        //define maxLen and mostFreq\n        int maxLen = 0, mostFreq = 0;\n        while(right<n){\n            hm.put(arr[right], hm.getOrDefault(arr[right], 0) + 1);\n            mostFreq = Math.max(mostFreq, hm.get(arr[right]));\n            if((right-left+1) - mostFreq > k){\n                hm.put(arr[left], hm.get(arr[left]) - 1);\n                left++;\n                \n            }\n            maxLen=Math.max(maxLen, right - left + 1);\n            right++;\n        }\n        return maxLen;\n        \n        \n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"longest-repeating-character-replacement","has_notes":false}