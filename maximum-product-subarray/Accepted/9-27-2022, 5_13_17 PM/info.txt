{"id":809750250,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1664278997,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/809750250/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"44.7 MB","code":"class Solution {\n    public int maxProduct(int[] nums) {\n       int currsum=1;\n        int maxsum=Integer.MIN_VALUE;\n        for(int i=0;i<nums.length;i++){\n            currsum*=nums[i];\n            maxsum=Math.max(currsum,maxsum);\n            if(currsum==0){\n                currsum=1;\n            }\n        }\n        currsum=1;\n        for(int i=nums.length-1;i>=0;i--){\n            currsum*=nums[i];\n            maxsum=Math.max(maxsum,currsum);\n            if(currsum==0){\n                currsum=1;\n            }\n            \n}\n        return maxsum;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray","has_notes":false}