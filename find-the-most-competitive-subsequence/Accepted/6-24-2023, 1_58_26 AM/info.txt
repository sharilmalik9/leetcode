{"id":978115228,"lang":"java","lang_name":"Java","time":"4 days, 23 hours","timestamp":1687552106,"status":10,"status_display":"Accepted","runtime":"166 ms","url":"/submissions/detail/978115228/","is_pending":"Not Pending","title":"Find the Most Competitive Subsequence","memory":"60.9 MB","code":"\n\nclass Solution {\n    public int[] mostCompetitive(int[] nums, int k) {\n\n        Stack<Integer>st=new Stack<>();\n\n        if(nums.length==k)\n        {\n            return nums;\n        }\n        int n=nums.length;\n        \n        for(int i=0;i<n;i++)\n        {\n            int rem=n-i;\n            while(!st.isEmpty() && st.peek()>nums[i] && rem+st.size()-1>=k)\n            {\n                st.pop();\n\n            }\n            if(st.size()<k)\n            {\n                st.push(nums[i]);\n            }    \n        }\n        int ans[]=new int[k];\n        int i=k-1;\n        while(!st.isEmpty())\n        {\n            ans[i--]=st.pop();\n        }\n        return ans;\n        \n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-most-competitive-subsequence","has_notes":false}