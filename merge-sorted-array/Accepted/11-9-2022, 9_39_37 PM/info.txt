{"id":840172655,"lang":"java","lang_name":"Java","time":"7Â months, 3Â weeks","timestamp":1668010177,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/840172655/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"43.2 MB","code":"class Solution {\n    public void merge(int[] nums1, int m, int[] nums2, int n) {\n         int i = m-1, j = n-1, k = 1;\n\n         while(i >= 0 && j >= 0) {\n             if(nums1[i] > nums2[j]) {\n                 nums1[m+n-k] = nums1[i--];\n                 k++;\n             } else if(nums1[i] < nums2[j]) {\n                 nums1[m+n-k] = nums2[j--];\n                 k++;\n             } else {\n                 while(i >= 0 && j >= 0 && nums1[i] == nums2[j]) {\n                     nums1[m+n-k] = nums2[j--];\n                     k++;\n                     nums1[m+n-k] = nums1[i--];\n                     k++;\n                 }\n             }\n         }\n\n         while(j >= 0) {\n             nums1[m+n-k] = nums2[j--];\n             k++;\n         }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"merge-sorted-array","has_notes":false}