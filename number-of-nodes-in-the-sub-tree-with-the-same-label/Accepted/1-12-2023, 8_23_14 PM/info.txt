{"id":876835753,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1673535194,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/876835753/","is_pending":"Not Pending","title":"Number of Nodes in the Sub-Tree With the Same Label","memory":"105.7 MB","code":"class Solution {\n  int [] result;\n  List<List<Integer>> adj;\n  boolean[] visited;\n//This function takes in the number of nodes in a tree, the edges that connect the nodes and the labels of the nodes\n   public int[] countSubTrees(int n, int[][] edges, String labels) {\n//Creating an adjacency list to store the edges\n     adj = new ArrayList<>(n);\n     result = new int[n];\n    //initializing the adjacency list\n    for(int i = 0; i < n; i++){\n        adj.add(new ArrayList<>());\n    }\n    //populating the adjacency list with the edges\n    for(int[] edge : edges){\n        adj.get(edge[0]).add(edge[1]);\n        adj.get(edge[1]).add(edge[0]);\n    }\n    //keep track of visited nodes\n     visited = new boolean[n];\n    //calling the dfs function to count the subtrees starting from the root node\n    dfs(0,labels);\n    return result;\n}\n//dfs function to traverse the tree and count the subtrees\nint[] dfs(int node, String labels){\n    visited[node] = true;\n    int[] count = new int[26];\n    //visiting all the neighbours of the current node\n    for(int nbr : adj.get(node)){\n        if(!visited[nbr]){\n            int [] adjCount = dfs(nbr, labels);\n            //updating the count array with the count of the subtrees of the neighbours\n            for(int i = 0 ; i < 26; i++){\n                count[i] += adjCount[i];\n            }\n        }\n    }\n    //incrementing the count of the current node label\n    char ch = labels.charAt(node);\n    count[ch-'a']++;\n    //storing the count of the subtrees of the current node\n    result[node] = count[ch-'a'];\n    return count;\n  }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-nodes-in-the-sub-tree-with-the-same-label","has_notes":false}