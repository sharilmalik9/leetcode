{"id":873104108,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1673073676,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/873104108/","is_pending":"Not Pending","title":"Filling Bookcase Shelves","memory":"45.7 MB","code":"class Solution {\n    int[][] dp;\n    public int minHeightShelves(int[][] books, int w){\n        dp= new int[books.length+1][w+1];\n       return help(books,0,w,w,0);\n    }\n    public int help(int[][] books,int i, int w,int rem,int height){\n        if(i>=books.length){\n            return height;\n\n        }\n        if(dp[i][rem]!=0){\n            return dp[i][rem];\n        }\n        int ans=help(books,i+1,w,w-books[i][0],books[i][1])+height;\n        if(books[i][0] <=rem){\n            ans=Math.min(ans,help(books,i+1,w,rem-books[i][0],Math.max(height,books[i][1])));\n        }\n        return dp[i][rem]=ans;\n\n\n\n    }\n}","compare_result":"11111111111111111111","title_slug":"filling-bookcase-shelves","has_notes":false}