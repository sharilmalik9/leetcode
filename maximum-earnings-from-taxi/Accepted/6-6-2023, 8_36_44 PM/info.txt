{"id":965233720,"lang":"java","lang_name":"Java","time":"3 weeks, 1 day","timestamp":1686064004,"status":10,"status_display":"Accepted","runtime":"127 ms","url":"/submissions/detail/965233720/","is_pending":"Not Pending","title":"Maximum Earnings From Taxi","memory":"74.3 MB","code":"class Solution {\n    public long maxTaxiEarnings(int n, int[][] rides) {\n        int[][] l=rides;\n         long[] dp= new long[l.length];\n        Arrays.fill(dp,-1);\n        Arrays.sort(l,(a,b)-> a[0]==b[0]?a[1]-b[1] : a[0]-b[0]);\n        return help(l,0,dp);\n    }\n    public long help(int[][] l,int i,long[] dp){\n        if(i>=l.length){\n            return 0;\n        }\n        if(dp[i]!=-1){\n            return dp[i];\n        }\n        long profit=0;\n        int start=i+1;\n        int end=l.length-1;\n        int idx=end+1;\n        while(start<=end){\n            int mid=start+(end-start)/2;\n            if(l[mid][0]>=l[i][1]){\n                idx=mid;\n                end=mid-1;\n            }\n            else{\n                start=mid+1;\n            } \n        }\n        profit=Math.max(help(l,i+1,dp),l[i][2]+l[i][1]-l[i][0]+help(l,idx,dp));\n        return dp[i]=profit;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-earnings-from-taxi","has_notes":false}