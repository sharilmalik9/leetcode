{"id":696962000,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1652208661,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/696962000/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"42 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head){\n        if(head!=null&& head.next!=null){\n           ListNode prev=head;\n          ListNode curr=head.next;\n         while(curr!=null){\n           ListNode after=curr.next;\n           curr.next=prev;\n           prev=curr;\n           curr=after;\n       }\n        head.next=null;\n        head=prev;\n        \n        return head;\n        }\n        else{\n            return head;\n        }\n        \n        \n        \n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false}