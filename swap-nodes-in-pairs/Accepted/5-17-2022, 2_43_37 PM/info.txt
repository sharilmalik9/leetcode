{"id":701304815,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1652778817,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/701304815/","is_pending":"Not Pending","title":"Swap Nodes in Pairs","memory":"41.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode swapPairs(ListNode head) {\n         if(head==null || head.next==null)\n        return head;\n \n    //a fake head\n    ListNode h = new ListNode(0);\n    h.next = head;\n \n    ListNode p1 = head;\n    ListNode p2 = head.next;\n \n    ListNode pre = h;\n    while(p1!=null && p2!=null){\n        pre.next = p2;\n \n        ListNode t = p2.next;\n        p2.next = p1;\n        pre = p1;\n        p1.next = t;\n \n        p1 = p1.next;\n \n        if(t!=null)\n            p2 = t.next;\n    }\n \n    return h.next;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"swap-nodes-in-pairs","has_notes":false}