{"id":978309399,"lang":"java","lang_name":"Java","time":"4 days, 13 hours","timestamp":1687586044,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/978309399/","is_pending":"Not Pending","title":"Tallest Billboard","memory":"46.3 MB","code":"class Solution {\n    Integer[][] dp;\n    public int tallestBillboard(int[] rods){\n        int sum=0;\n        for(int i:rods){\n            sum+=i;\n        }\n        dp=new Integer[rods.length+1][10000];\n        int ans=rec(0,0,rods);\n        return ans<0 ? 0:ans;\n        \n    }\n    public int rec(int idx,int diff,int[] rods){\n        if(idx==rods.length){\n            if(diff==0){\n                return 0;\n            }\n            return Integer.MIN_VALUE;\n        }\n        if(dp[idx][5000+diff]!=null){\n            return dp[idx][5000+diff];\n        }\n      \n        // not including \n        int curr=rec(idx+1,diff,rods);\n        // include in one\n        curr=Math.max(curr, rods[idx]+rec(idx+1,diff-rods[idx],rods));\n        // include in two\n        curr=Math.max(curr,rec(idx+1,diff+rods[idx],rods));\n       \n        return dp[idx][5000+diff]=curr;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"tallest-billboard","has_notes":false}