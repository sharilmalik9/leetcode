{"id":970232712,"lang":"java","lang_name":"Java","time":"2Â weeks, 1Â day","timestamp":1686652810,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/970232712/","is_pending":"Not Pending","title":"Count Ways to Group Overlapping Ranges","memory":"77.7 MB","code":"class Solution {\n    public int countWays(int[][] ranges) {\n        Arrays.sort(ranges,(a,b)->a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]);\n        int cnt=1;\n        int mod=1000000007;\n        int start=ranges[0][0];\n        int end=ranges[0][1];\n        for(int i=0;i<ranges.length;i++){\n            if(ranges[i][0]<=end){\n                end=Math.max(ranges[i][1],end);\n            }\n            else{\n                cnt++;\n                start=ranges[i][0];\n                end=ranges[i][1];\n            }\n\n        }\n        int ans=1;\n        for(int i=0;i<cnt;i++){\n            ans=ans*2;\n            ans=ans%mod;\n\n        }\n        return ans;\n        \n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"count-ways-to-group-overlapping-ranges","has_notes":false}