{"id":850923252,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1669598657,"status":10,"status_display":"Accepted","runtime":"119 ms","url":"/submissions/detail/850923252/","is_pending":"Not Pending","title":"Find Players With Zero or One Losses","memory":"109.9 MB","code":"class Solution {\n    public List<List<Integer>> findWinners(int[][] matches){\n       HashSet<Integer> all=new HashSet<>();\n       \n        HashMap<Integer,Integer> loss=new HashMap<>();\n        for(int i=0;i<matches.length;i++){\n            int winner=matches[i][0];\n            int losser=matches[i][1];\n            if(!all.contains(winner)){\n                all.add(winner);\n            }\n            if(!all.contains(losser)){\n                all.add(losser);\n            }\n           \n            loss.put(losser,loss.getOrDefault(losser,0)+1);\n}\n        List<Integer> ls=new ArrayList<>();\n        List<Integer> arr= new ArrayList<>();\n        for(Integer i: all){\n            if(loss.containsKey(i)){\n                if(loss.get(i)==1){\n                    arr.add(i);\n                }\n            }\n            if(!loss.containsKey(i)){\n                ls.add(i);\n            }\n        }\n        List<List<Integer>> ans= new ArrayList<>();\n        Collections.sort(ls);\n        Collections.sort(arr);\n        ans.add(ls);\n        ans.add(arr);\n        return ans;\n        }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-players-with-zero-or-one-losses","has_notes":false}