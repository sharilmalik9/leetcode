{"id":783694471,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1661493523,"status":13,"status_display":"Output Limit Exceeded","runtime":"N/A","url":"/submissions/detail/783694471/","is_pending":"Not Pending","title":"Coin Change","memory":"N/A","code":"class Solution {\n    public int coinChange(int[] arr, int amt) {\n        int[]dp =new int[amt+1];\n\n         Arrays.fill(dp, amt + 1);\n        dp[0]=0;\nfor(int i=0;i<arr.length;i++){\n    for(int j =arr[i];j<dp.length;j++){\n        dp[j]=Math.min(1+dp[j-arr[i]],dp[j]);\n    }\n    System.out.println(Arrays.toString(dp));\n}\n        if(dp[amt]==amt+1){\n            return -1;\n}\n    return dp[amt];\n    }\n}\n// // class Solution {    \n//     public int coinChange(int[] coins, int amount) {\n//         int[] dp = new int[amount + 1];\n//         Arrays.fill(dp, amount + 1);\n        \n//         dp[0] = 0;\n//         for(int i = 0; i < dp.length; i++){\n//             for(int coin : coins){\n//                 if(i - coin >= 0){\n//                     dp[i] = Math.min(dp[i], 1 + dp[i - coin]);\n//                 }\n//             }\n//         }\n//         return dp[amount] != amount + 1 ? dp[amount] : -1;\n//     }\n// }\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coin-change","has_notes":false}