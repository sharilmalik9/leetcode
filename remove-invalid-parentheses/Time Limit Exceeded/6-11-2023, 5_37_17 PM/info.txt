{"id":968842107,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1686485237,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/968842107/","is_pending":"Not Pending","title":"Remove Invalid Parentheses","memory":"N/A","code":"class Solution {\n    HashSet<String> ans;\n    int minremoves;\n    public List<String> removeInvalidParentheses(String s){\n        ans=new HashSet<>();\n        Stack<Integer> st=new Stack<>();\n        for(int i=0;i<s.length();i++){\n            if(s.charAt(i)=='('){\n                st.push(1);\n            }\n            if(s.charAt(i)==')'){\n                if(st.size()==0){\n                    minremoves++;\n                }\n                else{\n                    st.pop();\n                }\n            }\n        }\n        minremoves+=st.size();\n        List<String> hehe=new ArrayList<>();\n        rec(s,\"\",0,0,0,0);\n         for(String str:ans){\n            hehe.add(str);\n        }\n        return hehe;\n        \n    }\n    public void rec(String s,String str,int open,int close,int removals,int idx){\n        if(idx>=s.length()){\n              if(open==close && removals==minremoves){\n               ans.add(str); \n              }\n              return;\n        }\n        if(close>open){\n            return;\n        }\n       \n        char curr=s.charAt(idx);\n        // at current idx;\n        if(curr-'a'>=0 && curr-'a'<26){\n            rec(s,str+curr,open,close,removals,idx+1);\n        }\n        else if(curr=='('){\n          \n            rec(s,str+curr,open+1,close,removals,idx+1);\n\n        }\n        else{\n         \n            rec(s,str+curr,open,close+1,removals,idx+1);\n        }\n        //  remove\n        rec(s,str,open,close,removals+1,idx+1);\n\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000","title_slug":"remove-invalid-parentheses","has_notes":false}