{"id":827796381,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666425351,"status":10,"status_display":"Accepted","runtime":"53 ms","url":"/submissions/detail/827796381/","is_pending":"Not Pending","title":"Next Greater Node In Linked List","memory":"73.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public int[] nextLargerNodes(ListNode head) {\n        Stack<ListNode> st= new Stack<>();\n        int[] ans= new int[size(head)];\n       ListNode safe=head;\n        st.push(head);\n        head=head.next;\n        while(head!=null){\n            if( st.size()!=0 && st.peek().val<head.val){\n                 while(st.size()!=0 && st.peek().val<head.val){\n                    st.pop().val=head.val;\n                }\n                \n            }\n            st.push(head);\n            head=head.next;\n            \n            \n            \n        }\n        while(st.size()!=0){\n            st.pop().val=0;\n        }\n        int idx=0;\n        while(safe!=null){\n            ans[idx]=safe.val;\n            safe=safe.next;\n            idx++;\n            \n}\n        return ans;\n        \n        \n        \n    }\n    public int size(ListNode head){\n        int cnt=0;\n        while(head!=null){\n            cnt++;\n            head=head.next;\n        }\n        return cnt;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-greater-node-in-linked-list","has_notes":false}