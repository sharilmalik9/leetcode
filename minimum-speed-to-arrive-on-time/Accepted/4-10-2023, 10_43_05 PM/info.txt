{"id":931409969,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1681146785,"status":10,"status_display":"Accepted","runtime":"199 ms","url":"/submissions/detail/931409969/","is_pending":"Not Pending","title":"Minimum Speed to Arrive on Time","memory":"58.8 MB","code":"class Solution {\n    public int minSpeedOnTime(int[] dist, double hour) {\n        int sum=0;\n        for(int i:dist){\n            sum+=i;\n        }\n        if((double)sum==hour){\n            return 1;\n        }\n        int end=(int)1e7;\n        int start=0;\n        int ans=-1;\n        while(start<=end){\n            int mid=(start+end)/2;\n            if(check(dist,mid,hour)){\n             \n                ans=mid;\n                end=mid-1;\n            }\n            else{\n                start=mid+1;\n            }\n\n        }\n        return ans;\n\n    }\n    public boolean check(int[] dist,int mid,double hour){\n        double ans=0;\n        for(int i=0;i<dist.length-1;i++){\n            ans+=(double)Math.ceil((double)dist[i]/mid);\n        }\n        ans+=(double)((double)dist[dist.length-1]/mid);\n        if(ans<=hour){\n            return true;\n        }\n        return false;\n\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-speed-to-arrive-on-time","has_notes":false}