{"id":727741886,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1655829983,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/727741886/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"47.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int kthSmallest(TreeNode root, int k) {\n        List<Integer> ans= new ArrayList<Integer>();\n        lsr(root,k,ans);\n        System.out.println(ans);\n        return ans.get(k-1);\n    }\n    public List<Integer> lsr(TreeNode root,int k,List<Integer> ans){\n       \n       \n        if(root==null){\n            return null;\n        }\n        lsr(root.left,k,ans);\n        ans.add(root.val);\n        lsr(root.right,k,ans);\n        return ans; \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false}