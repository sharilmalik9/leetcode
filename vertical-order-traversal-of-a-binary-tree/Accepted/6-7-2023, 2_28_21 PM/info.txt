{"id":965768095,"lang":"java","lang_name":"Java","time":"3Â weeks","timestamp":1686128301,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/965768095/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"41.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    class pair{\n        TreeNode node;\n        int x;\n        int y;\n        public pair(TreeNode node,int x,int y){\n            this.node=node;\n            this.x=x;\n            this.y=y;\n        }\n    }\n    public List<List<Integer>> verticalTraversal(TreeNode root){\n        PriorityQueue<pair> tm=new PriorityQueue<>((a,b)->{\n        if(a.y==b.y){\n            if(a.x==b.x){\n                return a.node.val-b.node.val;\n            }\n            else{\n                return a.x-b.x;\n            }\n        }\n            return a.y-b.y;\n        \n        }\n       );\n        Queue<pair> que=new LinkedList<>();\n        que.add(new pair(root,0,0));\n        List<List<Integer>> ans=new ArrayList<>();\n        while(que.size()!=0){\n            pair pp=que.poll();\n            tm.add(pp);\n            if(pp.node.left!=null){\n                que.add(new pair(pp.node.left,pp.x+1,pp.y-1));\n            }\n            if(pp.node.right!=null){\n                 que.add(new pair(pp.node.right,pp.x+1,pp.y+1));\n\n            }\n        }\n        while(!tm.isEmpty()){\n            pair curr = tm.poll();\n            int i = curr.y;\n            List<Integer> arr = new ArrayList<>();\n            arr.add(curr.node.val);\n            while(!tm.isEmpty() && tm.peek().y == i){\n                arr.add(tm.poll().node.val);\n            }      \n            ans.add(arr);      \n        }\n        return ans;\n    }\n\n}","compare_result":"11111111111111111111111111111111","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false}