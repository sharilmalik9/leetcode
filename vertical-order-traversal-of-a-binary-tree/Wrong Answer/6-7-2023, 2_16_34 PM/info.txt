{"id":965761921,"lang":"java","lang_name":"Java","time":"3Â weeks","timestamp":1686127594,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/965761921/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    class pair{\n        TreeNode node;\n        int x;\n        int y;\n        public pair(TreeNode node,int x,int y){\n            this.node=node;\n            this.x=x;\n            this.y=y;\n        }\n    }\n    public List<List<Integer>> verticalTraversal(TreeNode root){\n        TreeSet<pair> tm=new TreeSet<>((a,b)->\n        a.y==b.y ? a.node.val-b.node.val : a.y-b.y);\n        Queue<pair> que=new LinkedList<>();\n        que.add(new pair(root,0,0));\n        List<List<pair>> ans=new ArrayList<>();\n        while(que.size()!=0){\n            pair pp=que.poll();\n            tm.add(pp);\n            if(pp.node.left!=null){\n                que.add(new pair(pp.node.left,pp.x+1,pp.y-1));\n            }\n            if(pp.node.right!=null){\n                 que.add(new pair(pp.node.right,pp.x+1,pp.y+1));\n\n            }\n        }\n        List<pair> ls=new ArrayList<>();\n      \n        for(pair curr:tm){\n            if(ls.size()==0){\n                ls.add(curr);\n                continue;\n            }\n            if(curr.y==ls.get(ls.size()-1).y){\n                ls.add(curr);\n            }\n            else{\n                ans.add(ls);\n                ls=new ArrayList<>();\n                ls.add(curr);\n            }\n\n        }\n        ans.add(ls);\n        List<List<Integer>> hehe=new ArrayList<>();\n        for(List<pair> ho: ans){\n            List<Integer> help=new ArrayList<>();\n            for(pair curr: ho){\n                help.add(curr.node.val);\n            }\n            hehe.add(help);\n        }\n        return hehe;\n    }\n\n}","compare_result":"11111111111001101000000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false}