{"id":956334566,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1684918783,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/956334566/","is_pending":"Not Pending","title":"Combination Sum","memory":"43.8 MB","code":"class Solution {\n    List<List<Integer>> ans= new ArrayList<>();\n    List<Integer> ls=new ArrayList<>();\n    public List<List<Integer>> combinationSum(int[] candidates, int target) {\n        rec(candidates,target,0);\n        return ans;\n    }\n    public void rec(int[] cadidates,int target,int i){\n        if(target==0){\n            ans.add(new ArrayList<>(ls));\n            return;\n        }\n        if(target<0){\n            return;\n        }\n        if(i==cadidates.length){\n            return;\n        }\n        rec(cadidates,target,i+1);\n        ls.add(cadidates[i]);\n        rec(cadidates,target-cadidates[i],i);\n        ls.remove(ls.size()-1);\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false}