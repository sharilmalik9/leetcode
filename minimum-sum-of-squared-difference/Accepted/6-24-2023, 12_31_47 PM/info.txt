{"id":978345354,"lang":"java","lang_name":"Java","time":"4 days, 12 hours","timestamp":1687590107,"status":10,"status_display":"Accepted","runtime":"258 ms","url":"/submissions/detail/978345354/","is_pending":"Not Pending","title":"Minimum Sum of Squared Difference","memory":"57.2 MB","code":"class Solution {\n    public long minSumSquareDiff(int[] nums1, int[] nums2, int k1, int k2) {\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        for(int i=0;i<nums1.length;i++){\n            int diff = Math.abs(nums1[i] - nums2[i]);\n            map.put(diff,map.getOrDefault(diff,0)+1);\n        }\n        while(k1+k2 >0){\n            int largest = map.lastKey();\n            if(largest == 0) break;\n            int toRemove = Math.min(k1+k2, map.get(largest));\n            map.put(largest-1,map.getOrDefault(largest-1,0)+toRemove);\n            k1 -= toRemove;\n            map.put(largest,map.get(largest)-toRemove);\n            if(map.get(largest) == 0) map.remove(largest);\n        }\n        long result = 0;\n        for(int key: map.keySet()){\n            result += 1L*map.get(key)*key*key;\n        }\n        return result;\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"minimum-sum-of-squared-difference","has_notes":false}