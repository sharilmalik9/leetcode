{"id":799565274,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1663155032,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/799565274/","is_pending":"Not Pending","title":"Number of Enclaves","memory":"N/A","code":"class Solution {\n    int cnt=0;\n    public int numEnclaves(int[][] grid) {\n        int m =grid.length;\n        int n=grid[0].length;\n        int cnt1=0;\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(grid[i][j]==1){\n                    cnt1++;\n                }\n            }\n        }\n        boolean[][]  vis= new boolean[m][n];\n        for(int i=0;i<m;i++){\n            if(grid[i][0]==1){\n                dfs(grid,m,n,vis,i,0);\n                \n            }\n            if(grid[i][n-1]==1){\n                dfs(grid,m,n,vis,i,n-1);\n            }\n        }\n        for(int i=0;i<n;i++){\n            if(grid[0][i]==1){\n                dfs(grid,m,n,vis,0,i);\n                \n            }\n            if(grid[m-1][i]==1){\n                dfs(grid,m,n,vis,m-1,i);\n            }\n        }\n        \n        \n        \n        \n        return cnt1-cnt>0 ? cnt1-cnt :0;\n        \n        \n    }\n    public void dfs(int[][] grid,int m,int n,boolean[][] vis,int i,int j ){\n        vis[i][j]=true;\n        cnt++;\n        if(i>0 && !vis[i-1][j] && grid[i-1][j]==1){\n            dfs(grid,m,n,vis,i-1,j);\n            \n        }\n        if(i<m-1 && !vis[i+1][j] && grid[i+1][j]==1){\n            dfs(grid,m,n,vis,i+1,j);\n            \n        }\n        if(j>0 && !vis[i][j-1] && grid[i][j-1]==1){\n            dfs(grid,m,n,vis,i,j-1);\n            \n        }\n         if(j<n-1 && !vis[i][j+1] && grid[i][j+1]==1){\n            dfs(grid,m,n,vis,i,j+1);\n            \n        }\n        \n    }\n}","compare_result":"1101000000000000000000000000000000000000000000000000000001","title_slug":"number-of-enclaves","has_notes":false}