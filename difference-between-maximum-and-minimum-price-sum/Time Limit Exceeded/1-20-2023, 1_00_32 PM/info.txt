{"id":881688903,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1674199832,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/881688903/","is_pending":"Not Pending","title":"Difference Between Maximum and Minimum Price Sum","memory":"N/A","code":"class Solution {\n    public long maxOutput(int n, int[][] edges, int[] price) {\n        List<List<Integer>> ls= new ArrayList<>();\n        HashMap<String,Integer> dp= new HashMap<>();\n        for(int i=0;i<n;i++){\n            ls.add(new ArrayList<>());\n        }\n        for(int i=0;i<edges.length;i++){\n            ls.get(edges[i][0]).add(edges[i][1]);\n            ls.get(edges[i][1]).add(edges[i][0]);\n        }\n        int ans=0;\n        for(int i=0;i<n;i++){\n           int curr=dfs(ls,i,-1,price,dp);\n           ans=Math.max(ans,curr-price[i]);\n        }\n        return ans;\n    }\n    public int dfs(List<List<Integer>> ls,int curr,int parent,int[] val,HashMap<String,Integer> dp){\n        int now=0;\n        \n        for(int i: ls.get(curr)){\n            String str= i +\"_\" + curr;\n            if(i==parent){\n                continue;\n            }\n            if(i!=parent){\n                if(dp.get(str)==null){\n                    dp.put(str,dfs(ls,i,curr,val,dp));\n                }\n\n            }\n            now=Math.max(dp.get(str),now);\n        }\n        return now+val[curr];\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111110000","title_slug":"difference-between-maximum-and-minimum-price-sum","has_notes":false}