{"id":881693551,"lang":"java","lang_name":"Java","time":"5 months, 1 week","timestamp":1674200522,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/881693551/","is_pending":"Not Pending","title":"Difference Between Maximum and Minimum Price Sum","memory":"N/A","code":"class Solution {\n    HashMap<Integer, List<Integer>> adj;\n    int[] price;\n    HashMap<Pair<Integer, Integer>, Long> memo = new HashMap<>();\n    \n    public long maxOutput(int n, int[][] edges, int[] price) {\n        // edge case\n        if(n == 1) return 0;\n        \n        adj = new HashMap<>();\n        this.price = price;\n        int[] degree = new int[n];  // record the degree of each node, those with degree 1 are leaf nodes\n        \n        for(int[] edge:edges){\n            int a = edge[0];\n            int b = edge[1];\n            \n            adj.putIfAbsent(a, new ArrayList<Integer>());\n            adj.putIfAbsent(b, new ArrayList<Integer>());\n            \n            adj.get(a).add(b);\n            adj.get(b).add(a);\n            \n            degree[a] ++;\n            degree[b] ++;\n        }\n        \n        long ans = 0;\n        // dfs with leaf node(degree 1) \n        for(int i=0; i<n; i++){\n            ans = Math.max(ans, dfs(i, -1) - price[i]);\n        }\n        \n        return ans;\n        \n        \n    }\n    \n    public long dfs(int node, int pre){\n        // reaches a leaf node\n        if(adj.get(node).size() == 1 && adj.get(node).get(0) == pre){  \n            return price[node];\n        }\n        \n        //memorization\n        Pair<Integer, Integer> pair = new Pair<>(node, pre);\n        if(memo.containsKey(pair)) return memo.get(pair);\n        \n        long s = 0;\n        for(Integer child:adj.get(node)){\n            if(child == pre) continue;\n            \n            s = Math.max(s, dfs(child, node));\n            \n        }\n        \n        //update memo\n        memo.put(pair, price[node] + s);\n        \n        return price[node] + s;    \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111110000","title_slug":"difference-between-maximum-and-minimum-price-sum","has_notes":false}