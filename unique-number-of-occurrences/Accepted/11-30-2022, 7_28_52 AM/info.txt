{"id":852048625,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1669773532,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/852048625/","is_pending":"Not Pending","title":"Unique Number of Occurrences","memory":"42 MB","code":"class Solution {\n    public boolean uniqueOccurrences(int[] arr) {\n       Map<Integer, Integer> map = new HashMap<>();\n        for(int i = 0; i < arr.length; i++){\n            int num = arr[i];\n            map.put(num, map.getOrDefault(num, 0) + 1);\n        }\n        \n        Map<Integer, Boolean> duplicateCount = new HashMap<>();\n        \n        for(Map.Entry<Integer, Integer> entry : map.entrySet()){\n            int value = entry.getValue();\n            \n            if(duplicateCount.containsKey(value)){\n                return false;\n            }\n            \n            duplicateCount.put(value, true);\n        }\n        \n        return true; \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-number-of-occurrences","has_notes":false}