{"id":967220210,"lang":"java","lang_name":"Java","time":"2 weeks, 5 days","timestamp":1686297082,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/967220210/","is_pending":"Not Pending","title":"Maximum Sum BST in Binary Tree","memory":"59.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n\tclass NodeValue{\n\t\t int sum;\n\t\t int minValue;\n\t\t int maxValue;\n\t\n\t\t NodeValue(int sum, int minValue, int maxValue){\n\t\t\tthis.sum = sum;\n\t\t\tthis.minValue = minValue;\n\t\t\tthis.maxValue = maxValue;\n\t\t}\n\t\n\t}\n\n\tpublic int ansMax = Integer.MIN_VALUE;\n\n    \n    public int maxSumBST(TreeNode root) {\n        compute(root);\n\t\t\t// Math.max(ansMax,compute(root).sum);\n\t\t\treturn ansMax;\n    }\n\n\tpublic NodeValue compute(TreeNode node){\n\t\tif(node == null) {\n\t\t\treturn new NodeValue(0,Integer.MAX_VALUE,Integer.MIN_VALUE);\n\t\t}\n\t\t\n\t\tNodeValue left = compute(node.left);\n\t\tNodeValue right = compute(node.right);\n\n\t\tif(node.val > left.maxValue && node.val < right.minValue){\n\n\t\t\tansMax = Math.max(Math.max(ansMax,left.sum + right.sum + node.val) , Math.max(left.sum,right.sum));\n\n\t\t\treturn new NodeValue(\n\t\t\t\tleft.sum + right.sum + node.val,\n\t\t\t\tMath.min(left.minValue,node.val),\n\t\t\t\tMath.max(node.val, right.maxValue)\n\t\t\t);\n\t\t}\n\n\t\treturn new NodeValue(\n\t\t\tMath.max(left.sum, right.sum),\n\t\t\tInteger.MIN_VALUE,\n\t\t\tInteger.MAX_VALUE\n\t\t);\n\n}\n\n\n\n\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-bst-in-binary-tree","has_notes":false}