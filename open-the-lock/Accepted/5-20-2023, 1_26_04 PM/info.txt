{"id":953778889,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1684569364,"status":10,"status_display":"Accepted","runtime":"199 ms","url":"/submissions/detail/953778889/","is_pending":"Not Pending","title":"Open the Lock","memory":"51.1 MB","code":"\n\nclass Solution {\n    public int openLock(String[] deadends, String target) {\n        Set<String>set=new HashSet<>();\n        for(int i=0;i<deadends.length;i++){\n            set.add(deadends[i]);\n        }\n\n        Set<String> visited=new HashSet<>();\n\n        Queue<String>q=new LinkedList<>();\n        q.add(\"0000\");\n        visited.add(\"0000\");\n        int steps=0;\n\n        while(!q.isEmpty())\n        {\n            int size = q.size();\n            for(int j = 0; j < size; j++)\n            {\n                String current = q.poll();\n                \n                if(current.equals(target)) return steps;\n                \n                StringBuilder sb = new StringBuilder(current);\n                for(int i = 0; i < 4; i++)\n                {\n                    char c = sb.charAt(i);\n                    String s1 = sb.substring(0, i) + (c == '9' ? 0 : c - '0' + 1) + sb.substring(i + 1);\n                    String s2 = sb.substring(0, i) + (c == '0' ? 9 : c - '0' - 1) + sb.substring(i + 1);\n                    \n                    if(!visited.contains(s1) && !set.contains(current))\n                    {\n                        visited.add(s1);\n                        q.offer(s1);\n                    }\n                    if(!visited.contains(s2) && !set.contains(current))\n                    {\n                        visited.add(s2);\n                        q.offer(s2);\n                    }\n                }\n            }\n            steps++;\n        }\n        \n        return -1;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"open-the-lock","has_notes":false}