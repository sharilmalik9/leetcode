{"id":784357633,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1661565133,"status":10,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/784357633/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"45.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int deepestLeavesSum(TreeNode root) {\n        Queue<TreeNode> que= new LinkedList<>();\n        que.add(root);\n        List<List<Integer>> ans= new ArrayList<>();\n        while(que.size()>0){\n            int size = que.size();\n            List<Integer> pres= new ArrayList<>();\n            while(size>0){\n                TreeNode curr=que.poll();\n                pres.add(curr.val);\n                if(curr.left!=null){\n                    que.add(curr.left);\n                }\n                if(curr.right!=null){\n                    que.add(curr.right);\n                }\n                size--;\n                \n}\n            ans.add(pres);\n            System.out.println(ans);\n            \n        }\n        int ansf=0;\n        for(Integer nn:ans.get(ans.size()-1)){\n            ansf +=nn;\n}\n        return ansf;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"deepest-leaves-sum","has_notes":false}