{"id":965659238,"lang":"java","lang_name":"Java","time":"3Â weeks","timestamp":1686116676,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/965659238/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer> ls;\n    public List<Integer> rightSideView(TreeNode root) {\n        ls=new ArrayList<>();\n        help(root);\n        return ls;\n    }\n    public void help(TreeNode root){\n        if(root==null){\n            return;\n        }\n        ls.add(root.val);\n        help(root.right);\n        if(root.right==null){\n                help(root.left);\n        }\n       \n        \n\n    }\n}","compare_result":"111111001110110111110110100111111111111111101111000111110010110111111111111101111111011111110111001101101110111011111000101100101011111010111110010110011110111101111111101011011110110110111011111111111001100100100101","title_slug":"binary-tree-right-side-view","has_notes":false}