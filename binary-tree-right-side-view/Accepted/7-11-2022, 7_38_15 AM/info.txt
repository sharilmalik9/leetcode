{"id":743865259,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1657505295,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/743865259/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"43.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> rightSideView(TreeNode root) {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n        traverse(root,a,0);\n        return a;\n    }\n    \n    private void traverse(TreeNode root,ArrayList<Integer> a,int c)\n    {\n        if(root==null)\n            return;\n        if(c==a.size())    //level no. should be equal to index no. in list\n        a.add(root.val);\n        traverse(root.right,a,c+1);\n        traverse(root.left,a,c+1);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false}