{"id":831492816,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1666886755,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/831492816/","is_pending":"Not Pending","title":"Image Overlap","memory":"N/A","code":"class Solution {\n\nprivate int shiftRightDown(int[][] A, int[][] B, int xShift, int yShift, int len){\n    int count = 0;\n    \n    for(int i = yShift; i < len; i++){\n        for(int j = xShift; j <len; j++){\n            if(A[i][j] == 1 && B[i - yShift][j - xShift] == 1)\n                count++;\n        }\n    }\n    \n    return count;\n}\n\nprivate int shiftRightUp(int[][] A, int[][] B, int xShift, int yShift, int len){\n    int count = 0;\n    \n    for(int i = yShift; i < len; i++){\n        for(int j = 0; j < len - xShift; j++){\n            if(A[i][j] == 1 && B[i - yShift][j + xShift] == 1){\n                count ++;\n            }\n        }\n    }\n    \n    return count;\n}\n\npublic int largestOverlap(int[][] img1, int[][] img2) {\n    int maxCount = 0;\n    int len = img1.length;\n    \n    for(int i = 0; i < len; i++){\n        for(int j = 0; j < len; j++){\n            maxCount = Math.max(maxCount, shiftRightDown(img1, img2, j, i, len));\n            maxCount = Math.max(maxCount, shiftRightDown(img2, img1, j, i, len));\n            maxCount = Math.max(maxCount, shiftRightUp(img1, img2, j, i, len));\n            maxCount = Math.max(maxCount, shiftRightDown(img2, img1, j, i, len));\n        }   \n    }\n    \n    return maxCount;\n}\n}","compare_result":"11100100110101111111111111111111111111111111111111111111111","title_slug":"image-overlap","has_notes":false}