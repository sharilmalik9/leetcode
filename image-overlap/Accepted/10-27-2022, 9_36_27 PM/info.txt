{"id":831493127,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1666886787,"status":10,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/831493127/","is_pending":"Not Pending","title":"Image Overlap","memory":"44.4 MB","code":"class Solution {\n    public int largestOverlap(int[][] img1, int[][] img2) {\n        List<Pair> pairs1 = new ArrayList<>();\n        for (int i = 0; i < img1.length; i++) {\n            for (int j = 0; j < img1[0].length; j++) {\n                if (img1[i][j] == 1) {\n                    pairs1.add(new Pair(i, j));\n                }\n            }\n        }\n        \n        int overlaps = 0;\n        for (int i = 1 - img1.length; i < img1.length; i++) {\n            for (int j = 1 - img1[0].length; j < img1[0].length; j++) {\n                int tempOverlaps = 0;\n                for (Pair pair : pairs1) {\n                    int y = pair.y + i, x = pair.x + j;\n                    if (cellExists(y, x, img2) && img2[y][x] == 1) {\n                        tempOverlaps++;\n                    }\n                }\n                overlaps = Math.max(tempOverlaps, overlaps);\n            }\n        }\n        return overlaps;\n    }\n\n    private boolean cellExists(int row, int col, int[][] grid) {\n        return row >= 0 && row < grid.length && col >= 0 && col < grid[0].length;\n    }\n\n    class Pair {\n        int x;\n        int y;\n\n        public Pair(int y, int x) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"image-overlap","has_notes":false}