{"id":798535060,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1663047077,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/798535060/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"N/A","code":"class Solution {\n    public int minEatingSpeed(int[] piles, int h) {\n        Arrays.sort(piles);\n        if(piles.length==h){\n            return piles[piles.length-1];\n        }\n        int start=1;\n         int ans=0;\n        int end=piles[piles.length-1];\n        while(start<=end){\n            int mid=(start+end)/2;\n             System.out.println(mid);\n           int  total=0;\n           \n            for(int i=0;i<piles.length;i++){\n                if(piles[i]%mid==0){\n                    total+=piles[i]/mid;\n                   }\n                else{\n                    total+=piles[i]/mid+1;\n                    \n                }\n                \n            }\n          //  System.out.println(mid);\n            if(total<=h){\n                ans=mid;\n                end=mid-1;\n            }\n            \n            else{\n                start=mid+1;\n            }\n        }\n        \n        return ans;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"koko-eating-bananas","has_notes":false}