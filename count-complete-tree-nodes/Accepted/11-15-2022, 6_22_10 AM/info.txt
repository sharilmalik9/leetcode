{"id":843582259,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1668473530,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/843582259/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"49.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int countNodes(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        else if (root.right == null && root.left == null) {\n            return 1;\n        }\n        else if (root.right == null || root.left == null) {\n            return 2;\n        }\n        else {\n            return countNodes(root.left) + countNodes(root.right) + 1;\n        }\n    }\n}","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes","has_notes":false}