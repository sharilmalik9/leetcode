{"id":788552591,"lang":"java","lang_name":"Java","time":"10Â months","timestamp":1662009347,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/788552591/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"60 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int cnt;\n  //  PriorityQueue<TreeNode> ans= new PriorityQueue<>((a,b)->b.val-a.val);\n    public int goodNodes(TreeNode root) {\n         \n         \n        helper(root,Integer.MIN_VALUE);\n        return cnt;\n        \n    }\n    public void helper(TreeNode root,int max){\n        if(root==null){\n            return ;\n        }\n        if(root.val>=max){\n            max=root.val;\n            cnt++;\n        }\n        helper(root.left,max);\n        helper(root.right,max);\n        \n        \n        \n        \n}\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false}