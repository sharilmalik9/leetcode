{"id":727814823,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1655835624,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/727814823/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int goodNodes(TreeNode root) {\n         String sb = \"\";\n    ArrayList<String> result = new ArrayList<String>();\n    helper(root, result, sb);\n    return result.size();\n        \n    }\n    public boolean issorted(String str){\n        boolean ans=true;\n        for(int i=0;i<str.length();i++){\n            System.out.println(\"here\");\n            if(!(str.charAt(str.length()-1)-'0'>=str.charAt(i)-'0')){\n                ans=false;\n                  System.out.println(\"hii\");\n                \n            }\n        }\n        return ans;\n    }\n    public void helper(TreeNode root, ArrayList<String> result, String s){\n    if(root==null){\n        return;\n    }\n \n    s = s+root.val;\n   // System.out.println(s);\n    if(issorted(s)){\n            System.out.println(s);\n        \n        result.add(s);\n    }\n \n   \n \n    if(root.left!=null){\n        helper(root.left, result, s);\n    }\n    if(root.right!=null){\n        helper(root.right, result, s);\n    }\n    }\n}","compare_result":"111011101111100000011000000000000000000000000000000000000000000","title_slug":"count-good-nodes-in-binary-tree","has_notes":false}