{"id":742694662,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1657384846,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/742694662/","is_pending":"Not Pending","title":"Surrounded Regions","memory":"51.5 MB","code":"class Solution {\n    public void solve(char[][] board) {\n         int m = board.length;\n        int n = board[0].length;\n        for(int i = 0, j = 0; j < board[0].length; j++){\n            if(board[i][j] == 'O'){\n                dfs(board, i, j);\n            }\n        }\n        for(int i = 0, j = n - 1; i < m; i++){\n            if(board[i][j] == 'O'){\n                dfs(board, i, j);\n            }\n        }\n        for(int i = m - 1, j = n - 1; j >= 0; j--){\n            if(board[i][j] == 'O'){\n                dfs(board, i, j);\n            }\n        }\n        for(int i = m - 1, j = 0; i >= 0; i--){\n            if(board[i][j] == 'O'){\n                dfs(board, i, j);\n            }\n        }\n        \n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < n; j++){\n                \n                if(board[i][j] == '1'){\n                    board[i][j] = 'O';\n                } else if(board[i][j] == 'O'){\n                    board[i][j] = 'X';\n                }\n            }\n            \n        }\n        \n    }\n    int [][] dirs = {{-1, 0}, {0, -1}, {1, 0}, {0, 1}}; // tldr\n    private void dfs(char [][] board, int i, int j){\n        \n        board[i][j] = '1';\n        \n        for(int [] dir : dirs){\n            int ni = i + dir[0];\n            int nj = j + dir[1];\n            if(ni >= 0 && ni < board.length && nj >= 0 && nj < board[i].length && board[ni][nj] == 'O'){\n                dfs(board, ni, nj);\n            }\n        }\n    }\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"surrounded-regions","has_notes":false}