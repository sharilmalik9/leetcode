{"id":866396891,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1672153478,"status":10,"status_display":"Accepted","runtime":"1150 ms","url":"/submissions/detail/866396891/","is_pending":"Not Pending","title":"Take K of Each Character From Left and Right","memory":"43 MB","code":"class Solution {\n    public int takeCharacters(String s, int k) {\n        int start=0;\n        int end=s.length()-1;\n        int[] freq=new int[3];\n        for(int i=0;i<s.length();i++){\n            freq[s.charAt(i)-'a']++;\n        }\n        for(int i=0;i<3;i++){\n            if(freq[i]<k){\n                return -1;\n            }\n        }\n        int l=s.length();\n        int ans=Integer.MAX_VALUE;\n        while(start<s.length()){\n            freq[s.charAt(start)-'a']--;\n            start++;\n            l--;\n            System.out.println(start+ \" \" +end+ \" \" + l);\n            while(!check(freq,k)){\n                end=(end+1)%s.length();\n                freq[s.charAt(end)-'a']++;\n                l++;\n            }\n            ans=Math.min(l,ans);\n            \n        }\n        return ans;\n    }\n    public boolean check(int[] freq,int k){\n        for(int i=0;i<3;i++){\n            if(freq[i]<k){\n                return false;\n            }\n        }\n        return  true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"take-k-of-each-character-from-left-and-right","has_notes":false}