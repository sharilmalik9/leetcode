{"id":966418527,"lang":"java","lang_name":"Java","time":"2 weeks, 6 days","timestamp":1686206493,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/966418527/","is_pending":"Not Pending","title":"Score of Parentheses","memory":"40.5 MB","code":"class Solution {\n    public int scoreOfParentheses(String s) {\n        HashMap<Integer,Integer> hm=new HashMap<>();\n        Stack<Integer> st=new Stack<>();\n        int level=1;\n        for(int i=0;i<s.length();i++){\n            if(s.charAt(i)=='('){\n                st.push(level);\n                level++;\n            }\n            else{\n                int val=0;\n                boolean been=false;\n                if(hm.containsKey(level)){\n                    val=hm.get(level)*2;\n                    hm.remove(level);\n                    been=true;\n                }\n                 if(hm.containsKey(level-1)){\n                    val+=hm.get(level-1);\n                    hm.remove(level-1);\n                }\n                level--;\n                if(val==0){\n                    hm.put(level,1);\n                }\n                else if(!been ){\n                    hm.put(level,1+val);\n\n                }\n                else{\n                    hm.put(level,val);\n                } \n                \n            }\n        }\n        return hm.get(1);\n\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"score-of-parentheses","has_notes":false}