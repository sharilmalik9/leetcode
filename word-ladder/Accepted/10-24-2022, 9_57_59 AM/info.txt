{"id":829043903,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666585679,"status":10,"status_display":"Accepted","runtime":"147 ms","url":"/submissions/detail/829043903/","is_pending":"Not Pending","title":"Word Ladder","memory":"87.3 MB","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        Set<String> set = new HashSet<>(wordList);\n        Queue<String> queue = new LinkedList<>();\n        queue.offer(beginWord);\n        int level = 1;\n\n        while(!queue.isEmpty()){\n            int size = queue.size();\n            for(int i = 0; i < size; i++){\n                String cur = queue.poll();\n                for(int j = 0; j < cur.length(); j++){\n                    char[] c = cur.toCharArray();\n                    for(char x = 'a'; x <= 'z'; x++){\n                        c[j] = x;\n                        String temp = new String(c);\n                        if(set.contains(temp)){\n                            if(temp.equals(endWord)) return level + 1;\n                            queue.offer(temp);\n                            set.remove(temp);\n                        }\n                    }\n                }\n            }\n            level++;\n        }\n\n        return 0;\n\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false}