{"id":970037245,"lang":"java","lang_name":"Java","time":"2 weeks, 1 day","timestamp":1686633415,"status":10,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/970037245/","is_pending":"Not Pending","title":"Find Servers That Handled Most Number of Requests","memory":"57.1 MB","code":"class Solution {\n       //records how many load each server worked on.\n    int[] cnt;\n    public List<Integer> busiestServers(int k, int[] arrival, int[] load) {\n        //only need K servers.\n\t\tcnt = new int[k];\n        int n = arrival.length, max = 0;\n        //record <idx, endTime> to record each server's free time start point \n        PriorityQueue<int[]> busy = new PriorityQueue<>((a,b) -> a[1] - b[1]);\n        //need to find >= (i % k) th sever, which needs servers in order, and ceiling function.\n        TreeSet<Integer> free = new TreeSet();\n        for(int i = 0 ; i < k; i++) {\n            free.add(i);\n        }\n        for(int i = 0 ; i < n; i++){\n            int start = arrival[i];\n            int end = start + load[i];\n            //add back all previous buys servers to free, if they can pick up new taskes.\n\t\t\t// each task is arrival in increasing start time order.\n            while(!busy.isEmpty() && busy.peek()[1] <= start) {\n                free.add(busy.poll()[0]);\n            }\n            //find the >= (i%K)\n            Integer server = free.ceiling(i % k);\n            if(server == null) {\n                //if no bigger one, start from 0;\n                server = free.ceiling(0);\n            }\n            //need to drop the task\n            if(server == null) continue;\n            free.remove(server);\n            //means one server is doing something\n            busy.add(new int[]{server, end});\n            max = Math.max(max, ++cnt[server]);\n        }\n        \n        List<Integer> res = new ArrayList();\n        for(int i = 0 ; i < k; i++) {\n            if(cnt[i] == max) {\n                res.add(i);\n            }\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-servers-that-handled-most-number-of-requests","has_notes":false}