{"id":813347582,"lang":"java","lang_name":"Java","time":"8 months, 4 weeks","timestamp":1664696746,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/813347582/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"N/A","code":"class Solution {\n    public boolean isMatch(String s, String p) {\n        int m =s.length();\n        int n =p.length();\n        boolean[][] dp= new boolean[n+1][m+1];\n        dp[0][0]=true;\n        for(int i=1;i<n+1;i++){\n            boolean flag=true;\n            for(int j=1;j<i;j++){\n                if(p.charAt(j-1)!='*'){\n                flag=false;\n                    break;\n               }\n            }\n            \n            dp[i][0]=flag;\n        }\n        for(int i=1;i<n+1;i++){\n            for(int j=1;j<m+1;j++){\n                if(p.charAt(i-1)==s.charAt(j-1) || p.charAt(i-1)=='?'){\n                    dp[i][j]=dp[i-1][j-1];\n}\n                else if(p.charAt(i-1)=='*'){\n                    dp[i][j]=dp[i-1][j] || dp[i][j-1];\n                }\n                else{\n                    dp[i][j]=false;\n                }\n            }\n        }\n        return dp[n][m];\n        \n    }\n}","compare_resulttitle_slug":"wildcard-matching","has_notes":false}