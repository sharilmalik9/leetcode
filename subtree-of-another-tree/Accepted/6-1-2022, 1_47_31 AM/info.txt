{"id":711531873,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1654028251,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/711531873/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"46.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubtree(TreeNode root, TreeNode subRoot) {\n        if(root==null ){\n            return false;\n        }\n        if(isSameTree(root,subRoot)){\n            return true;\n        }\n        else{\n            return isSubtree(root.left,subRoot) || isSubtree(root.right,subRoot);\n        }\n        \n        \n    }\n    public boolean isSameTree(TreeNode s, TreeNode t){\n        if(s==null || t==null){\n            return s==null && t==null;\n        }\n        else if(t.val== s.val){\n            return isSameTree(s.left,t.left) && isSameTree(s.right,t.right);\n        }\n        else{\n            return false;\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree","has_notes":false}