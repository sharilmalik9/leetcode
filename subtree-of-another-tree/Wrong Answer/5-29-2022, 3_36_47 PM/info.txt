{"id":709701496,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1653818807,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/709701496/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n     \n    public boolean isSubtree(TreeNode root, TreeNode subRoot){\n        if(root==null){\n            return false;\n        } \n        boolean left;\n        boolean right;\n         \n        if(root.val==subRoot.val){\n             left=isSubtree(root.left,subRoot.left);\n             right=isSubtree(root.right,subRoot.right);\n            \n            \n        }\n        else{\n            left= isSubtree(root.left,subRoot);\n            right=isSubtree(root.right,subRoot);\n        }\n        return left && right;\n        \n    }\n}","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"subtree-of-another-tree","has_notes":false}