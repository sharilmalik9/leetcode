{"id":831791131,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1666926254,"status":10,"status_display":"Accepted","runtime":"163 ms","url":"/submissions/detail/831791131/","is_pending":"Not Pending","title":"Sum of Subarray Minimums","memory":"49.8 MB","code":"class Solution {\n    public int sumSubarrayMins(int[] arr) {\n      int n = arr.length;\n      int ans1[] = nsl(arr);\n      int ans2[] = nsr(arr);\n      long sum=0;\n      for(int i=0;i<n;i++){\n        sum=(sum + (long)(arr[i]*(long)(ans1[i]*ans2[i])%1000000007)%1000000007)%1000000007;\n      }\n      return (int)sum;\n\t}\n    public static int[] nsl(int arr[]){\n      Stack<Integer> s = new Stack<>();\n      int ans[] = new int[arr.length];\n      for(int i=0;i<arr.length;i++){\n        while(!s.isEmpty() && arr[i]<arr[s.peek()]){\n          s.pop();\n        }\n        if(s.isEmpty()){\n          ans[i] = i-(-1);\n          s.push(i);\n        }\n        else{\n          ans[i] = i-s.peek();\n          s.push(i);\n        }\n      }\n      return ans;\n    }\n  public static int[] nsr(int arr[]){\n      Stack<Integer> s = new Stack<>();\n      int ans[] = new int[arr.length];\n      for(int i=arr.length-1;i>=0;i--){\n        while(!s.isEmpty() && arr[s.peek()]>=arr[i]){\n          s.pop();\n        }\n        if(s.isEmpty()){\n          ans[i] = arr.length-i;\n          s.push(i);\n        }\n        else{\n          ans[i] = s.peek()-i;\n          s.push(i);\n        }\n      }\n      return ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-subarray-minimums","has_notes":false}