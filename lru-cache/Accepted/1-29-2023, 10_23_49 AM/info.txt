{"id":887257447,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1674968029,"status":10,"status_display":"Accepted","runtime":"71 ms","url":"/submissions/detail/887257447/","is_pending":"Not Pending","title":"LRU Cache","memory":"120.9 MB","code":"class LRUCache {\n\n    Node head=new Node(0,0);\n    Node tail=new Node(0,0);\n    Map<Integer,Node> map= new HashMap();\n    int capicity;\n    public LRUCache(int _capacity) {\n        capicity=_capacity;\n        head.next=tail;\n        tail.prev=head; \n    }\n    \n    public int get(int key) {\n        if (map.containsKey(key)){\n            Node node =map.get(key);\n            remove(node);\n            insert(node);\n            return node.value;\n        }else {\n            return -1;\n        }\n    }\n    \n    public void put(int key, int value) {\n        if (map.containsKey(key)){\n            remove(map.get(key));\n        }\n        if (map.size()==capicity){\n            remove(tail.prev);\n        }\n        insert(new Node(key,value));\n    }\n     private void insert(Node node) {\n        map.put(node.key,node);\n        Node headNext=head.next;\n        head.next=node;\n        node.prev=head;\n        node.next=headNext;\n        headNext.prev=node;\n    }\n\n    private void remove(Node node) {\n        map.remove(node.key,node);\n        node.prev.next=node.next;\n        node.next.prev=node.prev;\n    }\n\n    class Node {\n        Node prev,next;\n        int key,value;\n\n        public Node(int key, int value) {\n            this.key = key;\n            this.value = value;\n        }\n    }\n}\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache obj = new LRUCache(capacity);\n * int param_1 = obj.get(key);\n * obj.put(key,value);\n */","compare_result":"1111111111111111111111","title_slug":"lru-cache","has_notes":false}