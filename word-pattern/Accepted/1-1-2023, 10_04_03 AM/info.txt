{"id":868869976,"lang":"java","lang_name":"Java","time":"5 months, 4 weeks","timestamp":1672547643,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/868869976/","is_pending":"Not Pending","title":"Word Pattern","memory":"40.5 MB","code":"class Solution {\n    public boolean wordPattern(String pattern, String s) {\n        Map<Character, String> map = new HashMap<>();\n\n        String[] str = s.split(\" \");\n\n        if(str.length != pattern.length()) return false;\n\n        for(int i=0; i<pattern.length(); i++){\n            char a = pattern.charAt(i);\n            if(!map.isEmpty() && map.containsKey(a) && !map.get(a).equals(str[i])) return false;\n\n            if(!map.isEmpty() && map.containsKey(a) && map.get(a).equals(str[i])) continue;\n    \n            if(!map.isEmpty() && map.containsValue(str[i])) return false;\n            \n            map.put(a,str[i]);\n        }\n        return true;\n    }\n\n}","compare_result":"1111111111111111111111111111111111111","title_slug":"word-pattern","has_notes":false}