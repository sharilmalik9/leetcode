{"id":848350087,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1669171031,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/848350087/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"42 MB","code":"class Solution {\n    private boolean checkRows(char[][] board){\n        for(int r=0; r < board.length; r++){\n            int[] count = new int[9];\n            for(int c=0; c<board[0].length; c++){\n                if(board[r][c] == '.')\n                    continue;\n                else if(count[Character.getNumericValue(board[r][c]) - 1] != 0)\n                    return false;\n                else \n                    count[Character.getNumericValue(board[r][c]) - 1] = 1;\n            }\n        }\n        return true;\n    }\n    \n    \n    private boolean checkColumns(char[][] board){\n        for(int c=0; c < board.length; c++){\n            int[] count = new int[9];\n            for(int r=0; r<board[0].length; r++){\n                if(board[r][c] == '.')\n                    continue;\n                else if(count[Character.getNumericValue(board[r][c]) - 1] != 0)\n                    return false;\n                else \n                    count[Character.getNumericValue(board[r][c]) - 1] = 1;\n            }\n        }\n        return true;\n    }\n    \n    private boolean checkBoxes(char[][] board){\n        int[][] count = new int[9][9];\n        \n        for(int r=0; r<board.length; r++){\n            for(int c=0; c<board.length; c++){\n                if(board[r][c] == '.')\n                    continue;\n                else if(count[(r/3)*3 + (c/3)][Character.getNumericValue(board[r][c]) - 1] != 0)\n                    return false;\n                else\n                    count[(r/3)*3 + (c/3)][Character.getNumericValue(board[r][c]) - 1] = 1;\n            }\n        }\n        return true;\n    }\n    \n    public boolean isValidSudoku(char[][] board) {\n        return checkRows(board) && checkColumns(board) && checkBoxes(board);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku","has_notes":false}