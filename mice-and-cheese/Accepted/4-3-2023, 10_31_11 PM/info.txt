{"id":927336818,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1680541271,"status":10,"status_display":"Accepted","runtime":"70 ms","url":"/submissions/detail/927336818/","is_pending":"Not Pending","title":"Mice and Cheese","memory":"53.2 MB","code":"class Solution {\n    public int miceAndCheese(int[] reward1, int[] reward2, int k) {\n        int n = reward1.length;\n        int[][] r1 = new int[n][2];\n        // storing the indices along with the differences\n        // because we'll need to fetch the reward using the indices\n        // from the two given arrays\n        for (int i = 0; i < n; i++) {\n            r1[i] = new int[] {reward1[i] - reward2[i], i};\n        }\n        \n        // sort on the basis of difference (in descending order)\n        Arrays.sort(r1, (a, b) -> b[0] - a[0]);\n        int reward = 0;\n        \n        // feed the first top 'k' rewarding cheese to the first mouse\n        for (int i = 0; i < k; i++) {\n            reward += reward1[r1[i][1]];\n        }\n        // feed the leftover to the second mouse\n        for (int i = k; i < n; i++) {\n            reward += reward2[r1[i][1]];\n        }\n        \n        return reward;\n    }\n}","compare_resulttitle_slug":"mice-and-cheese","has_notes":false}