{"id":866987453,"lang":"java","lang_name":"Java","time":"6Â months","timestamp":1672239310,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/866987453/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"40.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        if(root==null){\n            return true;\n        }\n        return help(root.left,root.right);\n        \n    }\n    public boolean help(TreeNode left,TreeNode right){\n        if(left==null || right==null){\n            return left==right;\n        }\n        if(left.val!=right.val){\n            return false;\n        }\n        return help(left.left,right.right) && help(left.right,right.left);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false}