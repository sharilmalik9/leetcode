{"id":933392912,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1681442288,"status":10,"status_display":"Accepted","runtime":"101 ms","url":"/submissions/detail/933392912/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"51.9 MB","code":"class Solution {\n    public int longestPalindromeSubseq(String s) {\n         StringBuilder input1 = new StringBuilder();\n \n        \n        input1.append(s);\n        input1.reverse();\n        return longest(s,input1.toString());\n        \n    }\n    public int longest(String s1,String s2){\n        int[][] dp= new int[s1.length()+1][s2.length()+1];\n        for(int i=s1.length()-1;i>=0;i--){\n            for(int j=s2.length()-1;j>=0;j--){\n                if(s1.charAt(i)==s2.charAt(j)){\n                    dp[i][j]=dp[i+1][j+1]+1;\n                }\n                else{\n                    dp[i][j]=Math.max(dp[i+1][j],dp[i][j+1]);\n                }\n            }\n        }\n        return dp[0][0];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false}