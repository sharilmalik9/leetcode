{"id":927273115,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1680534437,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/927273115/","is_pending":"Not Pending","title":"Most Profit Assigning Work","memory":"N/A","code":"class Solution {\n    public int maxProfitAssignment(int[] difficulty, int[] profit, int[] worker) {\n        int[][] arr= new int[profit.length][2];\n        for(int i=0;i<profit.length;i++){\n            arr[i][0]=difficulty[i];\n            arr[i][1]=profit[i];\n        }\n        Arrays.sort(arr,(a,b)->\n        a[0]==b[0] ? a[1]-b[1] : a[0]-b[0]\n        );\n        int max=arr[0][1];\n        for(int i=1;i<arr.length;i++){\n            arr[i][1]=Math.max(max,arr[i][1]);\n            max=arr[i][1];\n        }\n        int ans=0;\n        for(int i=0;i<worker.length;i++){\n            int curr=check(arr,worker[i]);\n            System.out.println(curr);\n            ans+=curr;\n        }\n        return ans;\n    }\n    public int check(int[][] arr,int target ){\n        int start=0;\n        int end=arr.length-1;\n        int ans=-1;\n        while(start<=end){\n            int mid=(start+end)/2;\n            if(arr[mid][0]==target){\n                return arr[mid][1];\n            }\n            if(arr[mid][0]<target){\n                ans=mid;\n                start=mid+1;\n            }\n            else{\n                end=mid-1;\n            }\n        }\n        if(ans==-1){\n            return 0;\n        }\n        else{\n            return arr[ans][1];\n        }\n    }\n}","compare_result":"111111111111111111110111101111101111111111111111110000001","title_slug":"most-profit-assigning-work","has_notes":false}