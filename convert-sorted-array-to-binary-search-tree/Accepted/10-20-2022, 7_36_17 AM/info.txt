{"id":826307281,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666231577,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/826307281/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"43.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        int left = 0;\n        int right = nums.length-1;\n        return convertToTree(nums, left, right);   \n    }\n    \n    public TreeNode convertToTree(int[] nums, int left, int right){\n        if(left > right)\n            return null;\n        int mid = left + (right-left)/2;\n        TreeNode root = new TreeNode(nums[mid]);\n        root.right = convertToTree(nums, mid+1, right);\n        root.left = convertToTree(nums, left, mid-1);\n        return root;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false}