{"id":726889142,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1655744512,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/726889142/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"44 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        if(nums.length==0){\n            return null;\n        }\n        return helpfunc(nums,0,nums.length-1);\n        \n    }\n    public TreeNode helpfunc(int[] nums,int start,int end ){\n        if(start>end){\n            return null;\n            \n        }\n        int mid=(start+end)/2;\n        TreeNode nn= new TreeNode(nums[mid]);\n        nn.left=helpfunc(nums,start,mid-1);\n        nn.right=helpfunc(nums,mid+1,end);\n        return nn;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false}