{"id":826322939,"lang":"java","lang_name":"Java","time":"8 months, 1 week","timestamp":1666233628,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/826322939/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"46.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedListToBST(ListNode head) {\n        return generate(head, null);\n    }\n    \n    public TreeNode generate(ListNode start, ListNode end) {\n        if (start == null) return null;\n\n        ListNode midNode = mid(start, end);\n        int midVal = midNode.val;\n        TreeNode node = new TreeNode(midVal);\n\n        if(!start.equals(midNode)) // imp condition \n\t\t\tnode.left = generate(start, midNode);\n\n        if (midNode.next != null && !midNode.next.equals(end))\n            node.right = generate(midNode.next, end);\n\n        return node;\n    }\n    \n    public ListNode mid(ListNode start, ListNode end) {\n        if(start == null || start.next == null) return start;\n        \n        ListNode slow = start;\n        ListNode fast = start;\n        \n        while(fast != end && fast.next != end) {\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n        return slow;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false}