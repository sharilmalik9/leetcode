{"id":913027039,"lang":"java","lang_name":"Java","time":"3 months, 2 weeks","timestamp":1678510615,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/913027039/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"44.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedListToBST(ListNode head) {\n       \n        return generate(head,null);\n    }\n    public TreeNode generate(ListNode start,ListNode end){\n        if(start==null){\n            return null;\n        }\n        ListNode mid=mid(start,end);\n        TreeNode node=new TreeNode(mid.val);\n        if(!start.equals(mid)){\n           node.left=generate(start,mid);\n        }\n        if(mid.next != null && !mid.next.equals(end)){\n            node.right=generate(mid.next,end);\n\n        }   \n        return node;\n    }\n    public ListNode mid(ListNode start, ListNode end) {\n        if(start == null || start.next == null) return start; \n        ListNode slow = start;\n        ListNode fast = start;\n        while(fast != end && fast.next != end) {\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n        return slow;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false}