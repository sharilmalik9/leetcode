{"id":877766665,"lang":"java","lang_name":"Java","time":"5 months, 2 weeks","timestamp":1673663381,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/877766665/","is_pending":"Not Pending","title":"Lexicographically Smallest Equivalent String","memory":"40.5 MB","code":"class Solution {\n    int[] parent=new int[26];\n    public String smallestEquivalentString(String s1, String s2, String baseStr) {\n        for(int i=0;i<26;i++){\n            parent[i]=i;\n        }\n        for(int i=0;i<s1.length();i++){\n            if(s1.charAt(i)-'a'>s2.charAt(i)-'a'){\n                union(s2.charAt(i)-'a',s1.charAt(i)-'a');\n\n            }\n            else{\n                   union(s1.charAt(i)-'a',s2.charAt(i)-'a');\n            }\n\n        }\n        System.out.println(Arrays.toString(parent));\n        StringBuilder sb= new StringBuilder();\n        for(int i=0;i<baseStr.length();i++){\n            sb.append((char)(parent(baseStr.charAt(i)-'a')+'a'));\n        }\n        return sb.toString();\n    }\n    public int parent(int element){\n        if(parent[element]==element){\n            return element;\n        }\n        return parent(parent[element]);\n    }\n    public void union(int ele1,int ele2){\n        int parent1=parent(ele1);\n         int parent2=parent(ele2);\n        if(parent1==parent2){\n            return ;\n        }\n        if(parent1>parent2){\n            parent[parent1]=parent2;\n        }\n        else{\n            parent[parent2]=parent1;\n        }\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lexicographically-smallest-equivalent-string","has_notes":false}