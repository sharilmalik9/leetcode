{"id":973763466,"lang":"java","lang_name":"Java","time":"1 week, 3 days","timestamp":1687059474,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/973763466/","is_pending":"Not Pending","title":"Number of Increasing Paths in a Grid","memory":"55.9 MB","code":"class Solution {\n     int[][]dir = {{1,0} , {0,1} , {-1,0}, {0,-1}};\n     int mod = (int)1e9+7;\n    public int countPaths(int[][] matrix) {\n       \n         int n = matrix.length , m = matrix[0].length;\n        if(matrix==null)return 0;\n        if(n==0 || m==0)return 0;\n        int dp[][] = new int[n][m];\n        int max = 0;\n        for(int i =0 ; i<n ; i++){\n            for(int j = 0;j<m;j++){\n                int val = helper(i , j , matrix , dp , n , m);\n                max = (max+val)%mod;\n            }\n        }\n        return max%mod;\n    }\n    public int helper(int i , int j  , int[][]matrix , int[][]dp , int n , int m){\n        if(dp[i][j]>0)return dp[i][j];\n        int curval = 1;\n        for(int d = 0;d<dir.length ;d++){\n            int r = i+dir[d][0];\n            int c = j+dir[d][1];\n            if(r>=0 && c>=0 && r<n && c<m && matrix[r][c]>matrix[i][j]){\n                 curval += helper(r, c, matrix , dp , n,m)%mod;\n            }\n        }\n        dp[i][j] = curval%mod;\n        return curval;\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"number-of-increasing-paths-in-a-grid","has_notes":false}